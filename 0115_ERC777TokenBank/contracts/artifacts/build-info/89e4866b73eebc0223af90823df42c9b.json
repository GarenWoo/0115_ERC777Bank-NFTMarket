{
	"id": "89e4866b73eebc0223af90823df42c9b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Bank.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IERC20TokenGTT {\n    function transferFrom(address, address, uint256) external returns (bool);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function transfer(address, uint256) external returns (bool);\n\n    function safeTransferFrom(IERC20, address, address, uint256 value) external;\n\n    function safeTransfer(IERC20, address, uint256) external;\n}\n\ncontract TokenBank is Bank {\n    mapping(address => uint) internal tokenBalance;\n    address[3] internal tokenRank;\n    address public immutable tokenAddr;\n    IERC20TokenGTT public immutable iGTT;\n    IERC20 public immutable iERC20Token;\n    using SafeERC20 for IERC20TokenGTT;\n    event tokenReceived(address sender, uint amount);\n    error WrongTokenReceived(address inputAddr, address validAddr);\n\n    constructor(address _tokenAddr) {\n        owner = msg.sender;\n        tokenAddr = _tokenAddr;\n        iGTT = IERC20TokenGTT(_tokenAddr);\n        iERC20Token = IERC20(_tokenAddr);\n    }\n\n    function depositToken(uint _tokenAmount) public {\n        iGTT.safeTransferFrom(\n            iERC20Token,\n            msg.sender,\n            address(this),\n            _tokenAmount\n        );\n        tokenBalance[msg.sender] += _tokenAmount;\n        _handleRankWhenDepositToken();\n    }\n\n    function withdrawToken() public onlyOwner {\n        iGTT.safeTransfer(iERC20Token, owner, iGTT.balanceOf(address(this)));\n    }\n\n    function tokensReceived(\n        address _from,\n        uint _amount\n    ) external returns (bool) {\n        if (msg.sender != address(tokenAddr)) {\n            revert WrongTokenReceived(msg.sender, tokenAddr);\n        }\n        tokenBalance[_from] += _amount;\n        emit tokenReceived(_from, _amount);\n        return true;\n    }\n\n    function getTokenBalance(address _account) public view returns (uint) {\n        return tokenBalance[_account];\n    }\n\n    function getTokenTopThreeAccount()\n        public\n        view\n        returns (address, address, address)\n    {\n        return (tokenRank[0], tokenRank[1], tokenRank[2]);\n    }\n\n    function _handleRankWhenDepositToken() internal {\n        uint membershipIndex = _checkTokenRankMembership();\n        uint convertedIndex;\n        uint indexRecord = 777;\n        if (membershipIndex != 999) {\n            // Case 1: msg.sender is already inside the top3 rank.\n            convertedIndex = membershipIndex + 4;\n            for (uint i = convertedIndex - 3; i > 1; i--) {\n                if (membershipIndex != 0) {\n                    if (\n                        tokenBalance[msg.sender] >\n                        tokenBalance[tokenRank[i - 2]]\n                    ) {\n                        indexRecord = i - 2;\n                        for (uint j = 2; j > i - 2; j--) {\n                            tokenRank[j] = tokenRank[j - 1];\n                        }\n                        // Boundry condition\n                        if (indexRecord == 0) {\n                            tokenRank[indexRecord] = msg.sender;\n                        }\n                    } else {\n                        if (indexRecord != 777) {\n                            tokenRank[indexRecord] = msg.sender;\n                        }\n                    }\n                }\n            }\n        } else {\n            // Case 2: msg.sender is not inside the top3 rank.\n            for (uint i = 3; i > 0; i--) {\n                if (tokenBalance[msg.sender] > tokenBalance[tokenRank[i - 1]]) {\n                    indexRecord = i - 1;\n                    // move backward the element(s) which is(/are) right at the index and also behind the index\n                    for (uint j = 2; j > i - 1; j--) {\n                        tokenRank[j] = tokenRank[j - 1];\n                    }\n                    // Boundry condition\n                    if (indexRecord == 0) {\n                        tokenRank[indexRecord] = msg.sender;\n                    }\n                } else {\n                    if (indexRecord != 777) {\n                        tokenRank[indexRecord] = msg.sender;\n                    }\n                }\n            }\n        }\n    }\n\n    function _checkTokenRankMembership() internal view returns (uint) {\n        uint index = 999;\n        for (uint i = 0; i < 3; i++) {\n            if (tokenRank[i] == msg.sender) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Bank {\n    // To protect personal privacy, some of the variables are set internal.\n    // To get those values of variables, set getter-functions to get users' values by their own instead of being queried by anyone.\n    mapping(address => uint) internal ETHBalance;\n    address[3] internal rank;\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call\");\n        _;\n    }\n\n    function depositETH() public payable {\n        ETHBalance[msg.sender] += msg.value;\n        _handleRankWhenDepositETH();\n    }\n\n    receive() external virtual payable {\n        depositETH();\n    }\n\n    function withdrawETH() public onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n\n    function getETHBalance(address _account) public view virtual returns (uint) {\n        return ETHBalance[_account];\n    }\n\n    function getETHTopThreeAccount()\n        public\n        view\n        returns (address, address, address)\n    {\n        return (rank[0], rank[1], rank[2]);\n    }\n\n    function _handleRankWhenDepositETH() internal {\n        uint membershipIndex = _checkETHRankMembership();\n        uint convertedIndex;\n        uint indexRecord = 777;\n        if (membershipIndex != 999) {\n            // Case 1: msg.sender is already inside the top3 rank.\n            convertedIndex = membershipIndex + 4;\n            for (uint i = convertedIndex - 3; i > 1; i--) {\n                if (membershipIndex != 0) {\n                    if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {\n                        indexRecord = i - 2;\n                        for (uint j = 2; j > i - 2; j--) {\n                            rank[j] = rank[j - 1];\n                        }\n                        // Boundry condition\n                        if (indexRecord == 0) {\n                            rank[indexRecord] = msg.sender;\n                        }\n                    } else {\n                        if (indexRecord != 777) {\n                            rank[indexRecord] = msg.sender;\n                        }\n                    }\n                }\n            }\n        } else {\n            // Case 2: msg.sender is not inside the top3 rank.\n            for (uint i = 3; i > 0; i--) {\n                if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {\n                    indexRecord = i - 1;\n                    // move backward the element(s) which is(/are) right at the index and also behind the index\n                    for (uint j = 2; j > i - 1; j--) {\n                        rank[j] = rank[j - 1];\n                    }\n                    // Boundry condition\n                    if (indexRecord == 0) {\n                        rank[indexRecord] = msg.sender;\n                    }\n                } else {\n                    if (indexRecord != 777) {\n                        rank[indexRecord] = msg.sender;\n                    }\n                }\n            }\n        }\n    }\n\n    function _checkETHRankMembership() internal view returns (uint) {\n        uint index = 999;\n        for (uint i = 0; i < 3; i++) {\n            if (rank[i] == msg.sender) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getETHBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHTopThreeAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":57:3349  contract Bank {... */\n  mstore(0x40, 0x80)\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":392:441  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":424:434  msg.sender */\n  caller\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":416:421  owner */\n  0x04\n  0x00\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":416:434  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":57:3349  contract Bank {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":57:3349  contract Bank {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2b7e8faf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3bb66a7b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:742  depositETH() */\n      tag_10\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:740  depositETH */\n      tag_11\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:742  depositETH() */\n      jump\t// in\n    tag_10:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":57:3349  contract Bank {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":365:385  address public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":553:679  function depositETH() public payable {... */\n    tag_7:\n      tag_32\n      tag_11\n      jump\t// in\n    tag_32:\n      stop\n    tag_11:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":626:635  msg.value */\n      callvalue\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:610  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:622  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":611:621  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:622  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:635  ETHBalance[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:672  _handleRankWhenDepositETH() */\n      tag_36\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:670  _handleRankWhenDepositETH */\n      tag_37\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:672  _handleRankWhenDepositETH() */\n      jump\t// in\n    tag_36:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":553:679  function depositETH() public payable {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n    tag_14:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1068:1075  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1077:1084  address */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1086:1093  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1117:1121  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1122:1123  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1117:1124  rank[0] */\n      0x03\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n    tag_39:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1126:1130  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1131:1132  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1126:1133  rank[1] */\n      0x03\n      dup2\n      lt\n      tag_43\n      jumpi\n      tag_44\n      tag_41\n      jump\t// in\n    tag_44:\n    tag_43:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1135:1139  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1140:1141  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1135:1142  rank[2] */\n      0x03\n      dup2\n      lt\n      tag_46\n      jumpi\n      tag_47\n      tag_41\n      jump\t// in\n    tag_47:\n    tag_46:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1109:1143  return (rank[0], rank[1], rank[2]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n    tag_21:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":934:938  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:967  ETHBalance */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:977  ETHBalance[_account] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":968:976  _account */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:977  ETHBalance[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":950:977  return ETHBalance[_account] */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":365:385  address public owner */\n    tag_26:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n    tag_31:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":500:505  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:496  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":478:529  require(msg.sender == owner, \"Only owner can call\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":813:818  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:828  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:851  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":829:850  address(this).balance */\n      selfbalance\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:851  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1156:3068  function _handleRankWhenDepositETH() internal {... */\n    tag_37:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1212:1232  uint membershipIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1260  _checkETHRankMembership() */\n      tag_58\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1258  _checkETHRankMembership */\n      tag_59\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1260  _checkETHRankMembership() */\n      jump\t// in\n    tag_58:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1212:1260  uint membershipIndex = _checkETHRankMembership() */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1270:1289  uint convertedIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1299:1315  uint indexRecord */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1318:1321  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1299:1321  uint indexRecord = 777 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1354:1357  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1335:1350  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1335:1357  membershipIndex != 999 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n      tag_60\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1475:1476  4 */\n      0x04\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1457:1472  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1457:1476  membershipIndex + 4 */\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1440:1476  convertedIndex = membershipIndex + 4 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1495:1501  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1521:1522  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1504:1518  convertedIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1504:1522  convertedIndex - 3 */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1495:1522  uint i = convertedIndex - 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n    tag_62:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1528:1529  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1524:1525  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1524:1529  i > 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1577:1578  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1558:1573  membershipIndex */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1558:1578  membershipIndex != 0 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1554:2222  if (membershipIndex != 0) {... */\n      tag_67\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1641  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1654  ETHBalance[rank[i - 2]] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1642:1646  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1651:1652  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1647:1648  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1647:1652  i - 2 */\n      tag_68\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_68:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1642:1653  rank[i - 2] */\n      0x03\n      dup2\n      lt\n      tag_69\n      jumpi\n      tag_70\n      tag_41\n      jump\t// in\n    tag_70:\n    tag_69:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1654  ETHBalance[rank[i - 2]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1616  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1628  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1617:1627  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1628  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1654  ETHBalance[msg.sender] > ETHBalance[rank[i - 2]] */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1700:1701  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1696:1697  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1696:1701  i - 2 */\n      tag_73\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_73:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1682:1701  indexRecord = i - 2 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1732:1738  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1741:1742  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1732:1742  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n    tag_74:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1752:1753  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1748:1749  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1748:1753  i - 2 */\n      tag_77\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_77:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1744:1745  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1744:1753  j > i - 2 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1800:1804  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1809:1810  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1805:1806  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1805:1810  j - 1 */\n      tag_78\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_78:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1800:1811  rank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_79\n      jumpi\n      tag_80\n      tag_41\n      jump\t// in\n    tag_80:\n    tag_79:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1794  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1795:1796  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1797  rank[j] */\n      0x03\n      dup2\n      lt\n      tag_82\n      jumpi\n      tag_83\n      tag_41\n      jump\t// in\n    tag_83:\n    tag_82:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1811  rank[j] = rank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1755:1758  j-- */\n      dup1\n      dup1\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n      jump(tag_74)\n    tag_75:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1927:1928  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1912:1923  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1912:1928  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1908:2017  if (indexRecord == 0) {... */\n      tag_87\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1980:1990  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1964  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1965:1976  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1977  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_89\n      tag_41\n      jump\t// in\n    tag_89:\n    tag_88:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1990  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1908:2017  if (indexRecord == 0) {... */\n    tag_87:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n      jump(tag_91)\n    tag_72:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2090:2093  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2075:2086  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2075:2093  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2071:2182  if (indexRecord != 777) {... */\n      tag_92\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2145:2155  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2129  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2130:2141  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2142  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_94\n      tag_41\n      jump\t// in\n    tag_94:\n    tag_93:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2155  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2071:2182  if (indexRecord != 777) {... */\n    tag_92:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n    tag_91:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1554:2222  if (membershipIndex != 0) {... */\n    tag_67:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1531:1534  i-- */\n      dup1\n      dup1\n      tag_96\n      swap1\n      tag_86\n      jump\t// in\n    tag_96:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      jump(tag_62)\n    tag_63:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n      jump(tag_97)\n    tag_60:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2334:2340  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2343:2344  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2334:2344  uint i = 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n    tag_98:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2350:2351  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2346:2347  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2346:2351  i > 0 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2415  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2428  ETHBalance[rank[i - 1]] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2416:2420  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2425:2426  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2421:2422  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2421:2426  i - 1 */\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2416:2427  rank[i - 1] */\n      0x03\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_103\n      tag_41\n      jump\t// in\n    tag_103:\n    tag_102:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2428  ETHBalance[rank[i - 1]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2390  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2402  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2391:2401  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2402  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2428  ETHBalance[msg.sender] > ETHBalance[rank[i - 1]] */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2470:2471  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2466:2467  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2466:2471  i - 1 */\n      tag_106\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_106:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2452:2471  indexRecord = i - 1 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2610:2616  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2619:2620  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2610:2620  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n    tag_107:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2630:2631  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2626:2627  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2626:2631  i - 1 */\n      tag_110\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_110:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2622:2623  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2622:2631  j > i - 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2674:2678  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2683:2684  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2679:2680  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2679:2684  j - 1 */\n      tag_111\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_111:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2674:2685  rank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_41\n      jump\t// in\n    tag_113:\n    tag_112:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2668  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2669:2670  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2671  rank[j] */\n      0x03\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_41\n      jump\t// in\n    tag_116:\n    tag_115:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2685  rank[j] = rank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2633:2636  j-- */\n      dup1\n      dup1\n      tag_118\n      swap1\n      tag_86\n      jump\t// in\n    tag_118:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n      jump(tag_107)\n    tag_108:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2789:2790  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2774:2785  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2774:2790  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2770:2871  if (indexRecord == 0) {... */\n      tag_119\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2838:2848  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2822  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2823:2834  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2835  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_121\n      tag_41\n      jump\t// in\n    tag_121:\n    tag_120:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2848  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2770:2871  if (indexRecord == 0) {... */\n    tag_119:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n      jump(tag_123)\n    tag_105:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2936:2939  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2921:2932  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2921:2939  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2917:3020  if (indexRecord != 777) {... */\n      tag_124\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2987:2997  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2971  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2972:2983  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2984  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_41\n      jump\t// in\n    tag_126:\n    tag_125:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2997  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2917:3020  if (indexRecord != 777) {... */\n    tag_124:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n    tag_123:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2353:2356  i-- */\n      dup1\n      dup1\n      tag_128\n      swap1\n      tag_86\n      jump\t// in\n    tag_128:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n      jump(tag_98)\n    tag_99:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n    tag_97:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1202:3068  {... */\n      pop\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1156:3068  function _handleRankWhenDepositETH() internal {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3074:3347  function _checkETHRankMembership() internal view returns (uint) {... */\n    tag_59:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3132:3136  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3148:3158  uint index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3161:3164  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3148:3164  uint index = 999 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3179:3185  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n    tag_130:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3195:3196  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3191:3192  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3191:3196  i < 3 */\n      lt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3232:3242  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3242  rank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3225  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3226:3227  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3228  rank[i] */\n      0x03\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_41\n      jump\t// in\n    tag_134:\n    tag_133:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3242  rank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3217:3309  if (rank[i] == msg.sender) {... */\n      tag_136\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3270:3271  i */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3262:3271  index = i */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3289:3294  break */\n      jump(tag_131)\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3217:3309  if (rank[i] == msg.sender) {... */\n    tag_136:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3198:3201  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n      jump(tag_130)\n    tag_131:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3335:3340  index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3328:3340  return index */\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3074:3347  function _checkETHRankMembership() internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_137:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_138:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_154\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_137\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_139:\n        /* \"#utility.yul\":328:352   */\n      tag_156\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_138\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:807   */\n    tag_16:\n        /* \"#utility.yul\":514:518   */\n      0x00\n        /* \"#utility.yul\":552:554   */\n      0x60\n        /* \"#utility.yul\":541:550   */\n      dup3\n        /* \"#utility.yul\":537:555   */\n      add\n        /* \"#utility.yul\":529:555   */\n      swap1\n      pop\n        /* \"#utility.yul\":565:636   */\n      tag_158\n        /* \"#utility.yul\":633:634   */\n      0x00\n        /* \"#utility.yul\":622:631   */\n      dup4\n        /* \"#utility.yul\":618:635   */\n      add\n        /* \"#utility.yul\":609:615   */\n      dup7\n        /* \"#utility.yul\":565:636   */\n      tag_139\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":646:718   */\n      tag_159\n        /* \"#utility.yul\":714:716   */\n      0x20\n        /* \"#utility.yul\":703:712   */\n      dup4\n        /* \"#utility.yul\":699:717   */\n      add\n        /* \"#utility.yul\":690:696   */\n      dup6\n        /* \"#utility.yul\":646:718   */\n      tag_139\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":728:800   */\n      tag_160\n        /* \"#utility.yul\":796:798   */\n      0x40\n        /* \"#utility.yul\":785:794   */\n      dup4\n        /* \"#utility.yul\":781:799   */\n      add\n        /* \"#utility.yul\":772:778   */\n      dup5\n        /* \"#utility.yul\":728:800   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":365:807   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":894:1011   */\n    tag_141:\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":1000:1001   */\n      dup1\n        /* \"#utility.yul\":993:1005   */\n      revert\n        /* \"#utility.yul\":1140:1262   */\n    tag_143:\n        /* \"#utility.yul\":1213:1237   */\n      tag_165\n        /* \"#utility.yul\":1231:1236   */\n      dup2\n        /* \"#utility.yul\":1213:1237   */\n      tag_138\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1203:1238   */\n      eq\n        /* \"#utility.yul\":1193:1256   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1252:1253   */\n      0x00\n        /* \"#utility.yul\":1249:1250   */\n      dup1\n        /* \"#utility.yul\":1242:1254   */\n      revert\n        /* \"#utility.yul\":1193:1256   */\n    tag_166:\n        /* \"#utility.yul\":1140:1262   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1407   */\n    tag_144:\n        /* \"#utility.yul\":1314:1319   */\n      0x00\n        /* \"#utility.yul\":1352:1358   */\n      dup2\n        /* \"#utility.yul\":1339:1359   */\n      calldataload\n        /* \"#utility.yul\":1330:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":1368:1401   */\n      tag_168\n        /* \"#utility.yul\":1395:1400   */\n      dup2\n        /* \"#utility.yul\":1368:1401   */\n      tag_143\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1268:1407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1413:1742   */\n    tag_20:\n        /* \"#utility.yul\":1472:1478   */\n      0x00\n        /* \"#utility.yul\":1521:1523   */\n      0x20\n        /* \"#utility.yul\":1509:1518   */\n      dup3\n        /* \"#utility.yul\":1500:1507   */\n      dup5\n        /* \"#utility.yul\":1496:1519   */\n      sub\n        /* \"#utility.yul\":1492:1524   */\n      slt\n        /* \"#utility.yul\":1489:1608   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1527:1606   */\n      tag_171\n      tag_141\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1489:1608   */\n    tag_170:\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1672:1725   */\n      tag_172\n        /* \"#utility.yul\":1717:1724   */\n      dup5\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1697:1706   */\n      dup6\n        /* \"#utility.yul\":1693:1715   */\n      add\n        /* \"#utility.yul\":1672:1725   */\n      tag_144\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1662:1725   */\n      swap2\n      pop\n        /* \"#utility.yul\":1618:1735   */\n      pop\n        /* \"#utility.yul\":1413:1742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1748:1825   */\n    tag_145:\n        /* \"#utility.yul\":1785:1792   */\n      0x00\n        /* \"#utility.yul\":1814:1819   */\n      dup2\n        /* \"#utility.yul\":1803:1819   */\n      swap1\n      pop\n        /* \"#utility.yul\":1748:1825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1949   */\n    tag_146:\n        /* \"#utility.yul\":1918:1942   */\n      tag_175\n        /* \"#utility.yul\":1936:1941   */\n      dup2\n        /* \"#utility.yul\":1918:1942   */\n      tag_145\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1913:1916   */\n      dup3\n        /* \"#utility.yul\":1906:1943   */\n      mstore\n        /* \"#utility.yul\":1831:1949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2177   */\n    tag_23:\n        /* \"#utility.yul\":2048:2052   */\n      0x00\n        /* \"#utility.yul\":2086:2088   */\n      0x20\n        /* \"#utility.yul\":2075:2084   */\n      dup3\n        /* \"#utility.yul\":2071:2089   */\n      add\n        /* \"#utility.yul\":2063:2089   */\n      swap1\n      pop\n        /* \"#utility.yul\":2099:2170   */\n      tag_177\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2156:2165   */\n      dup4\n        /* \"#utility.yul\":2152:2169   */\n      add\n        /* \"#utility.yul\":2143:2149   */\n      dup5\n        /* \"#utility.yul\":2099:2170   */\n      tag_146\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1955:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2405   */\n    tag_28:\n        /* \"#utility.yul\":2276:2280   */\n      0x00\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2303:2312   */\n      dup3\n        /* \"#utility.yul\":2299:2317   */\n      add\n        /* \"#utility.yul\":2291:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2327:2398   */\n      tag_179\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2384:2393   */\n      dup4\n        /* \"#utility.yul\":2380:2397   */\n      add\n        /* \"#utility.yul\":2371:2377   */\n      dup5\n        /* \"#utility.yul\":2327:2398   */\n      tag_139\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2183:2405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2411:2591   */\n    tag_147:\n        /* \"#utility.yul\":2459:2536   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2456:2457   */\n      0x00\n        /* \"#utility.yul\":2449:2537   */\n      mstore\n        /* \"#utility.yul\":2556:2560   */\n      0x11\n        /* \"#utility.yul\":2553:2554   */\n      0x04\n        /* \"#utility.yul\":2546:2561   */\n      mstore\n        /* \"#utility.yul\":2580:2584   */\n      0x24\n        /* \"#utility.yul\":2577:2578   */\n      0x00\n        /* \"#utility.yul\":2570:2585   */\n      revert\n        /* \"#utility.yul\":2597:2788   */\n    tag_35:\n        /* \"#utility.yul\":2637:2640   */\n      0x00\n        /* \"#utility.yul\":2656:2676   */\n      tag_182\n        /* \"#utility.yul\":2674:2675   */\n      dup3\n        /* \"#utility.yul\":2656:2676   */\n      tag_145\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2651:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2690:2710   */\n      tag_183\n        /* \"#utility.yul\":2708:2709   */\n      dup4\n        /* \"#utility.yul\":2690:2710   */\n      tag_145\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2685:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2733:2734   */\n      dup3\n        /* \"#utility.yul\":2730:2731   */\n      dup3\n        /* \"#utility.yul\":2726:2735   */\n      add\n        /* \"#utility.yul\":2719:2735   */\n      swap1\n      pop\n        /* \"#utility.yul\":2754:2757   */\n      dup1\n        /* \"#utility.yul\":2751:2752   */\n      dup3\n        /* \"#utility.yul\":2748:2758   */\n      gt\n        /* \"#utility.yul\":2745:2781   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2761:2779   */\n      tag_185\n      tag_147\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2745:2781   */\n    tag_184:\n        /* \"#utility.yul\":2597:2788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:2974   */\n    tag_41:\n        /* \"#utility.yul\":2842:2919   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2839:2840   */\n      0x00\n        /* \"#utility.yul\":2832:2920   */\n      mstore\n        /* \"#utility.yul\":2939:2943   */\n      0x32\n        /* \"#utility.yul\":2936:2937   */\n      0x04\n        /* \"#utility.yul\":2929:2944   */\n      mstore\n        /* \"#utility.yul\":2963:2967   */\n      0x24\n        /* \"#utility.yul\":2960:2961   */\n      0x00\n        /* \"#utility.yul\":2953:2968   */\n      revert\n        /* \"#utility.yul\":2980:3149   */\n    tag_148:\n        /* \"#utility.yul\":3064:3075   */\n      0x00\n        /* \"#utility.yul\":3098:3104   */\n      dup3\n        /* \"#utility.yul\":3093:3096   */\n      dup3\n        /* \"#utility.yul\":3086:3105   */\n      mstore\n        /* \"#utility.yul\":3138:3142   */\n      0x20\n        /* \"#utility.yul\":3133:3136   */\n      dup3\n        /* \"#utility.yul\":3129:3143   */\n      add\n        /* \"#utility.yul\":3114:3143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2980:3149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3155:3324   */\n    tag_149:\n        /* \"#utility.yul\":3295:3316   */\n      0x4f6e6c79206f776e65722063616e2063616c6c00000000000000000000000000\n        /* \"#utility.yul\":3291:3292   */\n      0x00\n        /* \"#utility.yul\":3283:3289   */\n      dup3\n        /* \"#utility.yul\":3279:3293   */\n      add\n        /* \"#utility.yul\":3272:3317   */\n      mstore\n        /* \"#utility.yul\":3155:3324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3330:3696   */\n    tag_150:\n        /* \"#utility.yul\":3472:3475   */\n      0x00\n        /* \"#utility.yul\":3493:3560   */\n      tag_190\n        /* \"#utility.yul\":3557:3559   */\n      0x13\n        /* \"#utility.yul\":3552:3555   */\n      dup4\n        /* \"#utility.yul\":3493:3560   */\n      tag_148\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3486:3560   */\n      swap2\n      pop\n        /* \"#utility.yul\":3569:3662   */\n      tag_191\n        /* \"#utility.yul\":3658:3661   */\n      dup3\n        /* \"#utility.yul\":3569:3662   */\n      tag_149\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3687:3689   */\n      0x20\n        /* \"#utility.yul\":3682:3685   */\n      dup3\n        /* \"#utility.yul\":3678:3690   */\n      add\n        /* \"#utility.yul\":3671:3690   */\n      swap1\n      pop\n        /* \"#utility.yul\":3330:3696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3702:4121   */\n    tag_53:\n        /* \"#utility.yul\":3868:3872   */\n      0x00\n        /* \"#utility.yul\":3906:3908   */\n      0x20\n        /* \"#utility.yul\":3895:3904   */\n      dup3\n        /* \"#utility.yul\":3891:3909   */\n      add\n        /* \"#utility.yul\":3883:3909   */\n      swap1\n      pop\n        /* \"#utility.yul\":3955:3964   */\n      dup2\n        /* \"#utility.yul\":3949:3953   */\n      dup2\n        /* \"#utility.yul\":3945:3965   */\n      sub\n        /* \"#utility.yul\":3941:3942   */\n      0x00\n        /* \"#utility.yul\":3930:3939   */\n      dup4\n        /* \"#utility.yul\":3926:3943   */\n      add\n        /* \"#utility.yul\":3919:3966   */\n      mstore\n        /* \"#utility.yul\":3983:4114   */\n      tag_193\n        /* \"#utility.yul\":4109:4113   */\n      dup2\n        /* \"#utility.yul\":3983:4114   */\n      tag_150\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3975:4114   */\n      swap1\n      pop\n        /* \"#utility.yul\":3702:4121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4127:4321   */\n    tag_66:\n        /* \"#utility.yul\":4167:4171   */\n      0x00\n        /* \"#utility.yul\":4187:4207   */\n      tag_195\n        /* \"#utility.yul\":4205:4206   */\n      dup3\n        /* \"#utility.yul\":4187:4207   */\n      tag_145\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4182:4207   */\n      swap2\n      pop\n        /* \"#utility.yul\":4221:4241   */\n      tag_196\n        /* \"#utility.yul\":4239:4240   */\n      dup4\n        /* \"#utility.yul\":4221:4241   */\n      tag_145\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4216:4241   */\n      swap3\n      pop\n        /* \"#utility.yul\":4265:4266   */\n      dup3\n        /* \"#utility.yul\":4262:4263   */\n      dup3\n        /* \"#utility.yul\":4258:4267   */\n      sub\n        /* \"#utility.yul\":4250:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4289:4290   */\n      dup2\n        /* \"#utility.yul\":4283:4287   */\n      dup2\n        /* \"#utility.yul\":4280:4291   */\n      gt\n        /* \"#utility.yul\":4277:4314   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":4294:4312   */\n      tag_198\n      tag_147\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4277:4314   */\n    tag_197:\n        /* \"#utility.yul\":4127:4321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4498   */\n    tag_86:\n        /* \"#utility.yul\":4366:4369   */\n      0x00\n        /* \"#utility.yul\":4389:4413   */\n      tag_200\n        /* \"#utility.yul\":4407:4412   */\n      dup3\n        /* \"#utility.yul\":4389:4413   */\n      tag_145\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4380:4413   */\n      swap2\n      pop\n        /* \"#utility.yul\":4435:4439   */\n      0x00\n        /* \"#utility.yul\":4428:4433   */\n      dup3\n        /* \"#utility.yul\":4425:4440   */\n      sub\n        /* \"#utility.yul\":4422:4463   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4443:4461   */\n      tag_202\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4422:4463   */\n    tag_201:\n        /* \"#utility.yul\":4490:4491   */\n      0x01\n        /* \"#utility.yul\":4483:4488   */\n      dup3\n        /* \"#utility.yul\":4479:4492   */\n      sub\n        /* \"#utility.yul\":4472:4492   */\n      swap1\n      pop\n        /* \"#utility.yul\":4327:4498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200917aeb3870714b4e4a38c14bbb2d18fd39cf165060fbcf8a25508b87b26d85d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610be48061005d5f395ff3fe60806040526004361061004d575f3560e01c80632b7e8faf146100605780633bb66a7b1461008c5780638da5cb5b146100c8578063e086e5ec146100f2578063f6326fb3146101085761005c565b3661005c5761005a610112565b005b5f80fd5b34801561006b575f80fd5b5061007461016e565b60405161008393929190610977565b60405180910390f35b348015610097575f80fd5b506100b260048036038101906100ad91906109da565b61021c565b6040516100bf9190610a1d565b60405180910390f35b3480156100d3575f80fd5b506100dc610261565b6040516100e99190610a36565b60405180910390f35b3480156100fd575f80fd5b50610106610286565b005b610110610112565b005b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461015d9190610a7c565b9250508190555061016c61037c565b565b5f805f60015f6003811061018557610184610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600180600381106101ba576101b9610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016002600381106101f0576101ef610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610b36565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610379573d5f803e3d5ffd5b50565b5f6103856108a2565b90505f8061030990506103e7831461062e576004836103a49190610a7c565b91505f6003836103b49190610b54565b90505b6001811115610628575f8414610615575f8060016002846103d89190610b54565b600381106103e9576103e8610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411156105b6576002816104949190610b54565b91505f600290505b6002826104a99190610b54565b81111561055557600180826104be9190610b54565b600381106104cf576104ce610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826003811061050457610503610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061054d90610b87565b91505061049c565b505f82036105b157336001836003811061057257610571610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610614565b61030982146106135733600183600381106105d4576105d3610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b808061062090610b87565b9150506103b7565b5061089d565b5f600390505b5f81111561089b575f806001808461064c9190610b54565b6003811061065d5761065c610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561082a576001816107089190610b54565b91505f600290505b60018261071d9190610b54565b8111156107c957600180826107329190610b54565b6003811061074357610742610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826003811061077857610777610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806107c190610b87565b915050610710565b505f82036108255733600183600381106107e6576107e5610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610888565b610309821461088757336001836003811061084857610847610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b808061089390610b87565b915050610634565b505b505050565b5f806103e790505f5b6003811015610930573373ffffffffffffffffffffffffffffffffffffffff16600182600381106108df576108de610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361092357809150610930565b80806001019150506108ab565b508091505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61096182610938565b9050919050565b61097181610957565b82525050565b5f60608201905061098a5f830186610968565b6109976020830185610968565b6109a46040830184610968565b949350505050565b5f80fd5b6109b981610957565b81146109c3575f80fd5b50565b5f813590506109d4816109b0565b92915050565b5f602082840312156109ef576109ee6109ac565b5b5f6109fc848285016109c6565b91505092915050565b5f819050919050565b610a1781610a05565b82525050565b5f602082019050610a305f830184610a0e565b92915050565b5f602082019050610a495f830184610968565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a8682610a05565b9150610a9183610a05565b9250828201905080821115610aa957610aa8610a4f565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c000000000000000000000000005f82015250565b5f610b20601383610adc565b9150610b2b82610aec565b602082019050919050565b5f6020820190508181035f830152610b4d81610b14565b9050919050565b5f610b5e82610a05565b9150610b6983610a05565b9250828203905081811115610b8157610b80610a4f565b5b92915050565b5f610b9182610a05565b91505f8203610ba357610ba2610a4f565b5b60018203905091905056fea26469706673582212200917aeb3870714b4e4a38c14bbb2d18fd39cf165060fbcf8a25508b87b26d85d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xBE4 DUP1 PUSH2 0x5D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B7E8FAF EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x108 JUMPI PUSH2 0x5C JUMP JUMPDEST CALLDATASIZE PUSH2 0x5C JUMPI PUSH2 0x5A PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C PUSH2 0x37C JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 LT PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1F0 JUMPI PUSH2 0x1EF PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x385 PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0x62E JUMPI PUSH1 0x4 DUP4 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH0 DUP5 EQ PUSH2 0x615 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x2 DUP2 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x54D SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x49C JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x5B1 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x613 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x620 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B7 JUMP JUMPDEST POP PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x89B JUMPI PUSH0 DUP1 PUSH1 0x1 DUP1 DUP5 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x65D JUMPI PUSH2 0x65C PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x1 DUP2 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x743 JUMPI PUSH2 0x742 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x778 JUMPI PUSH2 0x777 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x7C1 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x710 JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x825 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x887 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x893 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x634 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x930 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x923 JUMPI DUP1 SWAP2 POP PUSH2 0x930 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x961 DUP3 PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0x957 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP7 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x997 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B9 DUP2 PUSH2 0x957 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D4 DUP2 PUSH2 0x9B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x9AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9FC DUP5 DUP3 DUP6 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA17 DUP2 PUSH2 0xA05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA30 PUSH0 DUP4 ADD DUP5 PUSH2 0xA0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA86 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xA91 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xAA8 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0x13 DUP4 PUSH2 0xADC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5E DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xB69 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB91 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xBA3 JUMPI PUSH2 0xBA2 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD OR 0xAE 0xB3 DUP8 SMOD EQ 0xB4 0xE4 LOG3 DUP13 EQ 0xBB 0xB2 0xD1 DUP16 0xD3 SWAP13 CALL PUSH6 0x60FBCF8A255 ADDMOD 0xB8 PUSH28 0x26D85D64736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "57:3292:0:-:0;;;392:49;;;;;;;;;;424:10;416:5;;:18;;;;;;;;;;;;;;;;;;57:3292;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkETHRankMembership_339": {
									"entryPoint": 2210,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_handleRankWhenDepositETH_302": {
									"entryPoint": 892,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositETH_47": {
									"entryPoint": 274,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getETHBalance_84": {
									"entryPoint": 540,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getETHTopThreeAccount_105": {
									"entryPoint": 366,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@owner_11": {
									"entryPoint": 609,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawETH_72": {
									"entryPoint": 646,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4501:6",
										"nodeType": "YulBlock",
										"src": "0:4501:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "519:288:6",
													"nodeType": "YulBlock",
													"src": "519:288:6",
													"statements": [
														{
															"nativeSrc": "529:26:6",
															"nodeType": "YulAssignment",
															"src": "529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "552:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:6"
																},
																"nativeSrc": "537:18:6",
																"nodeType": "YulFunctionCall",
																"src": "537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "529:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "609:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "609:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "622:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "633:1:6",
																				"nodeType": "YulLiteral",
																				"src": "633:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "618:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:6"
																		},
																		"nativeSrc": "618:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "618:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "565:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "565:43:6"
																},
																"nativeSrc": "565:71:6",
																"nodeType": "YulFunctionCall",
																"src": "565:71:6"
															},
															"nativeSrc": "565:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "565:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "690:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "690:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "703:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "703:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "714:2:6",
																				"nodeType": "YulLiteral",
																				"src": "714:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "699:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:6"
																		},
																		"nativeSrc": "699:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "699:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "646:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "646:43:6"
																},
																"nativeSrc": "646:72:6",
																"nodeType": "YulFunctionCall",
																"src": "646:72:6"
															},
															"nativeSrc": "646:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "646:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "772:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "772:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "785:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "796:2:6",
																				"nodeType": "YulLiteral",
																				"src": "796:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "781:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "781:3:6"
																		},
																		"nativeSrc": "781:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "781:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "728:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "728:43:6"
																},
																"nativeSrc": "728:72:6",
																"nodeType": "YulFunctionCall",
																"src": "728:72:6"
															},
															"nativeSrc": "728:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "728:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nativeSrc": "365:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "475:9:6",
														"nodeType": "YulTypedName",
														"src": "475:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "487:6:6",
														"nodeType": "YulTypedName",
														"src": "487:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "495:6:6",
														"nodeType": "YulTypedName",
														"src": "495:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "503:6:6",
														"nodeType": "YulTypedName",
														"src": "503:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "514:4:6",
														"nodeType": "YulTypedName",
														"src": "514:4:6",
														"type": ""
													}
												],
												"src": "365:442:6"
											},
											{
												"body": {
													"nativeSrc": "853:35:6",
													"nodeType": "YulBlock",
													"src": "853:35:6",
													"statements": [
														{
															"nativeSrc": "863:19:6",
															"nodeType": "YulAssignment",
															"src": "863:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "879:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "873:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "873:5:6"
																},
																"nativeSrc": "873:9:6",
																"nodeType": "YulFunctionCall",
																"src": "873:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "863:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "863:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "813:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "846:6:6",
														"nodeType": "YulTypedName",
														"src": "846:6:6",
														"type": ""
													}
												],
												"src": "813:75:6"
											},
											{
												"body": {
													"nativeSrc": "983:28:6",
													"nodeType": "YulBlock",
													"src": "983:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1000:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1000:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1003:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:6"
																},
																"nativeSrc": "993:12:6",
																"nodeType": "YulFunctionCall",
																"src": "993:12:6"
															},
															"nativeSrc": "993:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "993:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "894:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "894:117:6"
											},
											{
												"body": {
													"nativeSrc": "1106:28:6",
													"nodeType": "YulBlock",
													"src": "1106:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1123:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1123:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1126:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1126:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:6"
																},
																"nativeSrc": "1116:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1116:12:6"
															},
															"nativeSrc": "1116:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1116:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1017:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1017:117:6"
											},
											{
												"body": {
													"nativeSrc": "1183:79:6",
													"nodeType": "YulBlock",
													"src": "1183:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1240:16:6",
																"nodeType": "YulBlock",
																"src": "1240:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1252:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1252:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:6"
																			},
																			"nativeSrc": "1242:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1242:12:6"
																		},
																		"nativeSrc": "1242:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1242:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1206:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1206:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1231:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1213:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1213:17:6"
																				},
																				"nativeSrc": "1213:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1213:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1203:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1203:2:6"
																		},
																		"nativeSrc": "1203:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1196:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:6"
																},
																"nativeSrc": "1196:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1196:43:6"
															},
															"nativeSrc": "1193:63:6",
															"nodeType": "YulIf",
															"src": "1193:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1140:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1176:5:6",
														"nodeType": "YulTypedName",
														"src": "1176:5:6",
														"type": ""
													}
												],
												"src": "1140:122:6"
											},
											{
												"body": {
													"nativeSrc": "1320:87:6",
													"nodeType": "YulBlock",
													"src": "1320:87:6",
													"statements": [
														{
															"nativeSrc": "1330:29:6",
															"nodeType": "YulAssignment",
															"src": "1330:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1352:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1352:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1339:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1339:12:6"
																},
																"nativeSrc": "1339:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1339:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1330:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1330:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1395:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1395:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1368:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1368:26:6"
																},
																"nativeSrc": "1368:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1368:33:6"
															},
															"nativeSrc": "1368:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1368:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1268:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1298:6:6",
														"nodeType": "YulTypedName",
														"src": "1298:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1306:3:6",
														"nodeType": "YulTypedName",
														"src": "1306:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1314:5:6",
														"nodeType": "YulTypedName",
														"src": "1314:5:6",
														"type": ""
													}
												],
												"src": "1268:139:6"
											},
											{
												"body": {
													"nativeSrc": "1479:263:6",
													"nodeType": "YulBlock",
													"src": "1479:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1525:83:6",
																"nodeType": "YulBlock",
																"src": "1525:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1527:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1527:77:6"
																			},
																			"nativeSrc": "1527:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1527:79:6"
																		},
																		"nativeSrc": "1527:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1527:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1500:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1500:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1509:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1509:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1496:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1496:3:6"
																		},
																		"nativeSrc": "1496:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1496:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1521:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1492:3:6"
																},
																"nativeSrc": "1492:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1492:32:6"
															},
															"nativeSrc": "1489:119:6",
															"nodeType": "YulIf",
															"src": "1489:119:6"
														},
														{
															"nativeSrc": "1618:117:6",
															"nodeType": "YulBlock",
															"src": "1618:117:6",
															"statements": [
																{
																	"nativeSrc": "1633:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1633:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1647:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1647:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1637:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1637:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1662:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1662:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1697:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1697:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1708:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1708:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1693:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1693:3:6"
																				},
																				"nativeSrc": "1693:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1693:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1717:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1717:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1672:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1672:20:6"
																		},
																		"nativeSrc": "1672:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1672:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1662:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1662:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1413:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1449:9:6",
														"nodeType": "YulTypedName",
														"src": "1449:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1460:7:6",
														"nodeType": "YulTypedName",
														"src": "1460:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1472:6:6",
														"nodeType": "YulTypedName",
														"src": "1472:6:6",
														"type": ""
													}
												],
												"src": "1413:329:6"
											},
											{
												"body": {
													"nativeSrc": "1793:32:6",
													"nodeType": "YulBlock",
													"src": "1793:32:6",
													"statements": [
														{
															"nativeSrc": "1803:16:6",
															"nodeType": "YulAssignment",
															"src": "1803:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1814:5:6",
																"nodeType": "YulIdentifier",
																"src": "1814:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1803:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1803:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1748:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1775:5:6",
														"nodeType": "YulTypedName",
														"src": "1775:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1785:7:6",
														"nodeType": "YulTypedName",
														"src": "1785:7:6",
														"type": ""
													}
												],
												"src": "1748:77:6"
											},
											{
												"body": {
													"nativeSrc": "1896:53:6",
													"nodeType": "YulBlock",
													"src": "1896:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1913:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1913:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1936:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1936:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1918:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1918:17:6"
																		},
																		"nativeSrc": "1918:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1906:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1906:6:6"
																},
																"nativeSrc": "1906:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1906:37:6"
															},
															"nativeSrc": "1906:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1906:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1831:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1884:5:6",
														"nodeType": "YulTypedName",
														"src": "1884:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1891:3:6",
														"nodeType": "YulTypedName",
														"src": "1891:3:6",
														"type": ""
													}
												],
												"src": "1831:118:6"
											},
											{
												"body": {
													"nativeSrc": "2053:124:6",
													"nodeType": "YulBlock",
													"src": "2053:124:6",
													"statements": [
														{
															"nativeSrc": "2063:26:6",
															"nodeType": "YulAssignment",
															"src": "2063:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2075:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2075:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2086:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2071:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2071:3:6"
																},
																"nativeSrc": "2071:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2071:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2063:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2063:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2143:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2143:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2156:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2156:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2167:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2167:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2152:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:6"
																		},
																		"nativeSrc": "2152:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2152:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2099:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2099:43:6"
																},
																"nativeSrc": "2099:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2099:71:6"
															},
															"nativeSrc": "2099:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2099:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1955:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2025:9:6",
														"nodeType": "YulTypedName",
														"src": "2025:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2037:6:6",
														"nodeType": "YulTypedName",
														"src": "2037:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2048:4:6",
														"nodeType": "YulTypedName",
														"src": "2048:4:6",
														"type": ""
													}
												],
												"src": "1955:222:6"
											},
											{
												"body": {
													"nativeSrc": "2281:124:6",
													"nodeType": "YulBlock",
													"src": "2281:124:6",
													"statements": [
														{
															"nativeSrc": "2291:26:6",
															"nodeType": "YulAssignment",
															"src": "2291:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2303:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2299:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:6"
																},
																"nativeSrc": "2299:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2299:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2291:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2384:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2384:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2395:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2395:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2380:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:6"
																		},
																		"nativeSrc": "2380:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2327:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2327:43:6"
																},
																"nativeSrc": "2327:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2327:71:6"
															},
															"nativeSrc": "2327:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2327:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2183:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2253:9:6",
														"nodeType": "YulTypedName",
														"src": "2253:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2265:6:6",
														"nodeType": "YulTypedName",
														"src": "2265:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2276:4:6",
														"nodeType": "YulTypedName",
														"src": "2276:4:6",
														"type": ""
													}
												],
												"src": "2183:222:6"
											},
											{
												"body": {
													"nativeSrc": "2439:152:6",
													"nodeType": "YulBlock",
													"src": "2439:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2456:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2459:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2459:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2449:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2449:6:6"
																},
																"nativeSrc": "2449:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2449:88:6"
															},
															"nativeSrc": "2449:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2449:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2553:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2553:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2556:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2556:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2546:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:6"
																},
																"nativeSrc": "2546:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2546:15:6"
															},
															"nativeSrc": "2546:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2546:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2577:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2577:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2580:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2580:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:6"
																},
																"nativeSrc": "2570:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2570:15:6"
															},
															"nativeSrc": "2570:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2570:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2411:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2411:180:6"
											},
											{
												"body": {
													"nativeSrc": "2641:147:6",
													"nodeType": "YulBlock",
													"src": "2641:147:6",
													"statements": [
														{
															"nativeSrc": "2651:25:6",
															"nodeType": "YulAssignment",
															"src": "2651:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2674:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2674:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2656:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2656:17:6"
																},
																"nativeSrc": "2656:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2656:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2651:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2651:1:6"
																}
															]
														},
														{
															"nativeSrc": "2685:25:6",
															"nodeType": "YulAssignment",
															"src": "2685:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2708:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2708:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2690:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2690:17:6"
																},
																"nativeSrc": "2690:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2690:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2685:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2685:1:6"
																}
															]
														},
														{
															"nativeSrc": "2719:16:6",
															"nodeType": "YulAssignment",
															"src": "2719:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2730:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2730:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2733:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2733:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2726:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:3:6"
																},
																"nativeSrc": "2726:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2726:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2759:22:6",
																"nodeType": "YulBlock",
																"src": "2759:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2761:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2761:16:6"
																			},
																			"nativeSrc": "2761:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2761:18:6"
																		},
																		"nativeSrc": "2761:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2761:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2751:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2754:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2748:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2748:2:6"
																},
																"nativeSrc": "2748:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2748:10:6"
															},
															"nativeSrc": "2745:36:6",
															"nodeType": "YulIf",
															"src": "2745:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2597:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2628:1:6",
														"nodeType": "YulTypedName",
														"src": "2628:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2631:1:6",
														"nodeType": "YulTypedName",
														"src": "2631:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2637:3:6",
														"nodeType": "YulTypedName",
														"src": "2637:3:6",
														"type": ""
													}
												],
												"src": "2597:191:6"
											},
											{
												"body": {
													"nativeSrc": "2822:152:6",
													"nodeType": "YulBlock",
													"src": "2822:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2842:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:6"
																},
																"nativeSrc": "2832:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2832:88:6"
															},
															"nativeSrc": "2832:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2832:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2936:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2939:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2929:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:6"
																},
																"nativeSrc": "2929:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2929:15:6"
															},
															"nativeSrc": "2929:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2929:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2960:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2960:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2963:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2963:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2953:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:6"
																},
																"nativeSrc": "2953:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2953:15:6"
															},
															"nativeSrc": "2953:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2953:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2794:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2794:180:6"
											},
											{
												"body": {
													"nativeSrc": "3076:73:6",
													"nodeType": "YulBlock",
													"src": "3076:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3093:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3098:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:6"
																},
																"nativeSrc": "3086:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3086:19:6"
															},
															"nativeSrc": "3086:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3086:19:6"
														},
														{
															"nativeSrc": "3114:29:6",
															"nodeType": "YulAssignment",
															"src": "3114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3133:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3133:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3138:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3138:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3129:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:6"
																},
																"nativeSrc": "3129:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3129:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3114:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3114:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2980:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3048:3:6",
														"nodeType": "YulTypedName",
														"src": "3048:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3053:6:6",
														"nodeType": "YulTypedName",
														"src": "3053:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3064:11:6",
														"nodeType": "YulTypedName",
														"src": "3064:11:6",
														"type": ""
													}
												],
												"src": "2980:169:6"
											},
											{
												"body": {
													"nativeSrc": "3261:63:6",
													"nodeType": "YulBlock",
													"src": "3261:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3283:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3283:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3291:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3291:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3279:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3279:3:6"
																		},
																		"nativeSrc": "3279:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3279:14:6"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c",
																		"kind": "string",
																		"nativeSrc": "3295:21:6",
																		"nodeType": "YulLiteral",
																		"src": "3295:21:6",
																		"type": "",
																		"value": "Only owner can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3272:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:6"
																},
																"nativeSrc": "3272:45:6",
																"nodeType": "YulFunctionCall",
																"src": "3272:45:6"
															},
															"nativeSrc": "3272:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "3272:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
												"nativeSrc": "3155:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3253:6:6",
														"nodeType": "YulTypedName",
														"src": "3253:6:6",
														"type": ""
													}
												],
												"src": "3155:169:6"
											},
											{
												"body": {
													"nativeSrc": "3476:220:6",
													"nodeType": "YulBlock",
													"src": "3476:220:6",
													"statements": [
														{
															"nativeSrc": "3486:74:6",
															"nodeType": "YulAssignment",
															"src": "3486:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3552:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3557:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3493:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "3493:58:6"
																},
																"nativeSrc": "3493:67:6",
																"nodeType": "YulFunctionCall",
																"src": "3493:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3486:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3658:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
																	"nativeSrc": "3569:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "3569:88:6"
																},
																"nativeSrc": "3569:93:6",
																"nodeType": "YulFunctionCall",
																"src": "3569:93:6"
															},
															"nativeSrc": "3569:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "3569:93:6"
														},
														{
															"nativeSrc": "3671:19:6",
															"nodeType": "YulAssignment",
															"src": "3671:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3682:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3682:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3687:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3687:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3678:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:6"
																},
																"nativeSrc": "3678:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3678:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3671:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3330:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3464:3:6",
														"nodeType": "YulTypedName",
														"src": "3464:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3472:3:6",
														"nodeType": "YulTypedName",
														"src": "3472:3:6",
														"type": ""
													}
												],
												"src": "3330:366:6"
											},
											{
												"body": {
													"nativeSrc": "3873:248:6",
													"nodeType": "YulBlock",
													"src": "3873:248:6",
													"statements": [
														{
															"nativeSrc": "3883:26:6",
															"nodeType": "YulAssignment",
															"src": "3883:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3895:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3895:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3906:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3906:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3891:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:6"
																},
																"nativeSrc": "3891:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3891:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3883:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3883:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3941:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3941:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3926:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3926:3:6"
																		},
																		"nativeSrc": "3926:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3926:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3949:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3949:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3955:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3955:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3945:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3945:3:6"
																		},
																		"nativeSrc": "3945:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3945:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3919:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:6"
																},
																"nativeSrc": "3919:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3919:47:6"
															},
															"nativeSrc": "3919:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3919:47:6"
														},
														{
															"nativeSrc": "3975:139:6",
															"nodeType": "YulAssignment",
															"src": "3975:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4109:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4109:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3983:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "3983:124:6"
																},
																"nativeSrc": "3983:131:6",
																"nodeType": "YulFunctionCall",
																"src": "3983:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3975:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3975:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3702:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3853:9:6",
														"nodeType": "YulTypedName",
														"src": "3853:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3868:4:6",
														"nodeType": "YulTypedName",
														"src": "3868:4:6",
														"type": ""
													}
												],
												"src": "3702:419:6"
											},
											{
												"body": {
													"nativeSrc": "4172:149:6",
													"nodeType": "YulBlock",
													"src": "4172:149:6",
													"statements": [
														{
															"nativeSrc": "4182:25:6",
															"nodeType": "YulAssignment",
															"src": "4182:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4205:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4205:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4187:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4187:17:6"
																},
																"nativeSrc": "4187:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4187:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4182:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4182:1:6"
																}
															]
														},
														{
															"nativeSrc": "4216:25:6",
															"nodeType": "YulAssignment",
															"src": "4216:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4239:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4239:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4221:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4221:17:6"
																},
																"nativeSrc": "4221:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4221:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4216:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4216:1:6"
																}
															]
														},
														{
															"nativeSrc": "4250:17:6",
															"nodeType": "YulAssignment",
															"src": "4250:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4262:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4262:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4265:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4265:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4258:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4258:3:6"
																},
																"nativeSrc": "4258:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4258:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4250:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4250:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4292:22:6",
																"nodeType": "YulBlock",
																"src": "4292:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4294:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4294:16:6"
																			},
																			"nativeSrc": "4294:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4294:18:6"
																		},
																		"nativeSrc": "4294:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4294:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4283:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4283:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4289:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4289:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4280:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4280:2:6"
																},
																"nativeSrc": "4280:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4280:11:6"
															},
															"nativeSrc": "4277:37:6",
															"nodeType": "YulIf",
															"src": "4277:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4127:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4158:1:6",
														"nodeType": "YulTypedName",
														"src": "4158:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4161:1:6",
														"nodeType": "YulTypedName",
														"src": "4161:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4167:4:6",
														"nodeType": "YulTypedName",
														"src": "4167:4:6",
														"type": ""
													}
												],
												"src": "4127:194:6"
											},
											{
												"body": {
													"nativeSrc": "4370:128:6",
													"nodeType": "YulBlock",
													"src": "4370:128:6",
													"statements": [
														{
															"nativeSrc": "4380:33:6",
															"nodeType": "YulAssignment",
															"src": "4380:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4407:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4407:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4389:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4389:17:6"
																},
																"nativeSrc": "4389:24:6",
																"nodeType": "YulFunctionCall",
																"src": "4389:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4380:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4441:22:6",
																"nodeType": "YulBlock",
																"src": "4441:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4443:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4443:16:6"
																			},
																			"nativeSrc": "4443:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4443:18:6"
																		},
																		"nativeSrc": "4443:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4443:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4428:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4428:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4435:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4435:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4425:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4425:2:6"
																},
																"nativeSrc": "4425:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4425:15:6"
															},
															"nativeSrc": "4422:41:6",
															"nodeType": "YulIf",
															"src": "4422:41:6"
														},
														{
															"nativeSrc": "4472:20:6",
															"nodeType": "YulAssignment",
															"src": "4472:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4483:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4483:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4490:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4479:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:6"
																},
																"nativeSrc": "4479:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4472:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4472:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "4327:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4356:5:6",
														"nodeType": "YulTypedName",
														"src": "4356:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4366:3:6",
														"nodeType": "YulTypedName",
														"src": "4366:3:6",
														"type": ""
													}
												],
												"src": "4327:171:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004d575f3560e01c80632b7e8faf146100605780633bb66a7b1461008c5780638da5cb5b146100c8578063e086e5ec146100f2578063f6326fb3146101085761005c565b3661005c5761005a610112565b005b5f80fd5b34801561006b575f80fd5b5061007461016e565b60405161008393929190610977565b60405180910390f35b348015610097575f80fd5b506100b260048036038101906100ad91906109da565b61021c565b6040516100bf9190610a1d565b60405180910390f35b3480156100d3575f80fd5b506100dc610261565b6040516100e99190610a36565b60405180910390f35b3480156100fd575f80fd5b50610106610286565b005b610110610112565b005b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461015d9190610a7c565b9250508190555061016c61037c565b565b5f805f60015f6003811061018557610184610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600180600381106101ba576101b9610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016002600381106101f0576101ef610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610b36565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610379573d5f803e3d5ffd5b50565b5f6103856108a2565b90505f8061030990506103e7831461062e576004836103a49190610a7c565b91505f6003836103b49190610b54565b90505b6001811115610628575f8414610615575f8060016002846103d89190610b54565b600381106103e9576103e8610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411156105b6576002816104949190610b54565b91505f600290505b6002826104a99190610b54565b81111561055557600180826104be9190610b54565b600381106104cf576104ce610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826003811061050457610503610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061054d90610b87565b91505061049c565b505f82036105b157336001836003811061057257610571610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610614565b61030982146106135733600183600381106105d4576105d3610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b808061062090610b87565b9150506103b7565b5061089d565b5f600390505b5f81111561089b575f806001808461064c9190610b54565b6003811061065d5761065c610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561082a576001816107089190610b54565b91505f600290505b60018261071d9190610b54565b8111156107c957600180826107329190610b54565b6003811061074357610742610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001826003811061077857610777610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806107c190610b87565b915050610710565b505f82036108255733600183600381106107e6576107e5610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610888565b610309821461088757336001836003811061084857610847610aaf565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b808061089390610b87565b915050610634565b505b505050565b5f806103e790505f5b6003811015610930573373ffffffffffffffffffffffffffffffffffffffff16600182600381106108df576108de610aaf565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361092357809150610930565b80806001019150506108ab565b508091505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61096182610938565b9050919050565b61097181610957565b82525050565b5f60608201905061098a5f830186610968565b6109976020830185610968565b6109a46040830184610968565b949350505050565b5f80fd5b6109b981610957565b81146109c3575f80fd5b50565b5f813590506109d4816109b0565b92915050565b5f602082840312156109ef576109ee6109ac565b5b5f6109fc848285016109c6565b91505092915050565b5f819050919050565b610a1781610a05565b82525050565b5f602082019050610a305f830184610a0e565b92915050565b5f602082019050610a495f830184610968565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a8682610a05565b9150610a9183610a05565b9250828201905080821115610aa957610aa8610a4f565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c000000000000000000000000005f82015250565b5f610b20601383610adc565b9150610b2b82610aec565b602082019050919050565b5f6020820190508181035f830152610b4d81610b14565b9050919050565b5f610b5e82610a05565b9150610b6983610a05565b9250828203905081811115610b8157610b80610a4f565b5b92915050565b5f610b9182610a05565b91505f8203610ba357610ba2610a4f565b5b60018203905091905056fea26469706673582212200917aeb3870714b4e4a38c14bbb2d18fd39cf165060fbcf8a25508b87b26d85d64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B7E8FAF EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x108 JUMPI PUSH2 0x5C JUMP JUMPDEST CALLDATASIZE PUSH2 0x5C JUMPI PUSH2 0x5A PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C PUSH2 0x37C JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x185 JUMPI PUSH2 0x184 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 LT PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1F0 JUMPI PUSH2 0x1EF PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x385 PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0x62E JUMPI PUSH1 0x4 DUP4 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x628 JUMPI PUSH0 DUP5 EQ PUSH2 0x615 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x2 DUP2 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x54D SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x49C JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x5B1 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x613 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x620 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B7 JUMP JUMPDEST POP PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x89B JUMPI PUSH0 DUP1 PUSH1 0x1 DUP1 DUP5 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x65D JUMPI PUSH2 0x65C PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x1 DUP2 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x743 JUMPI PUSH2 0x742 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x778 JUMPI PUSH2 0x777 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x7C1 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x710 JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x825 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x887 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x893 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x634 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x930 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0xAAF JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x923 JUMPI DUP1 SWAP2 POP PUSH2 0x930 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x961 DUP3 PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0x957 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x98A PUSH0 DUP4 ADD DUP7 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x997 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B9 DUP2 PUSH2 0x957 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D4 DUP2 PUSH2 0x9B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x9AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9FC DUP5 DUP3 DUP6 ADD PUSH2 0x9C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA17 DUP2 PUSH2 0xA05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA30 PUSH0 DUP4 ADD DUP5 PUSH2 0xA0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA49 PUSH0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA86 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xA91 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xAA8 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0x13 DUP4 PUSH2 0xADC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5E DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xB69 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB91 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xBA3 JUMPI PUSH2 0xBA2 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD OR 0xAE 0xB3 DUP8 SMOD EQ 0xB4 0xE4 LOG3 DUP13 EQ 0xBB 0xB2 0xD1 DUP16 0xD3 SWAP13 CALL PUSH6 0x60FBCF8A255 ADDMOD 0xB8 PUSH28 0x26D85D64736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "57:3292:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:12;:10;:12::i;:::-;57:3292;;;;;990:160;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;864:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:103;;;;;;;;;;;;;:::i;:::-;;553:126;;;:::i;:::-;;;626:9;600:10;:22;611:10;600:22;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;645:27;:25;:27::i;:::-;553:126::o;990:160::-;1068:7;1077;1086;1117:4;1122:1;1117:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1126:4;1131:1;1126:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1135:4;1140:1;1135:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1109:34;;;;;;990:160;;;:::o;864:120::-;934:4;957:10;:20;968:8;957:20;;;;;;;;;;;;;;;;950:27;;864:120;;;:::o;365:20::-;;;;;;;;;;;;;:::o;755:103::-;500:5;;;;;;;;;;;486:19;;:10;:19;;;478:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;813:5:::1;;;;;;;;;;;805:23;;:46;829:21;805:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;755:103::o:0;1156:1912::-;1212:20;1235:25;:23;:25::i;:::-;1212:48;;1270:19;1299:16;1318:3;1299:22;;1354:3;1335:15;:22;1331:1731;;1475:1;1457:15;:19;;;;:::i;:::-;1440:36;;1495:6;1521:1;1504:14;:18;;;;:::i;:::-;1495:27;;1490:746;1528:1;1524;:5;1490:746;;;1577:1;1558:15;:20;1554:668;;1631:10;:23;1642:4;1651:1;1647;:5;;;;:::i;:::-;1642:11;;;;;;;:::i;:::-;;;;;;;;;;;;;1631:23;;;;;;;;;;;;;;;;1606:10;:22;1617:10;1606:22;;;;;;;;;;;;;;;;:48;1602:602;;;1700:1;1696;:5;;;;:::i;:::-;1682:19;;1732:6;1741:1;1732:10;;1727:111;1752:1;1748;:5;;;;:::i;:::-;1744:1;:9;1727:111;;;1800:4;1809:1;1805;:5;;;;:::i;:::-;1800:11;;;;;;;:::i;:::-;;;;;;;;;;;;;1790:4;1795:1;1790:7;;;;;;;:::i;:::-;;;;:21;;;;;;;;;;;;;;;;;;1755:3;;;;;:::i;:::-;;;;1727:111;;;;1927:1;1912:11;:16;1908:109;;1980:10;1960:4;1965:11;1960:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;1908:109;1602:602;;;2090:3;2075:11;:18;2071:111;;2145:10;2125:4;2130:11;2125:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2071:111;1602:602;1554:668;1531:3;;;;;:::i;:::-;;;;1490:746;;;;1331:1731;;;2334:6;2343:1;2334:10;;2329:723;2350:1;2346;:5;2329:723;;;2405:10;:23;2416:4;2425:1;2421;:5;;;;:::i;:::-;2416:11;;;;;;;:::i;:::-;;;;;;;;;;;;;2405:23;;;;;;;;;;;;;;;;2380:10;:22;2391:10;2380:22;;;;;;;;;;;;;;;;:48;2376:662;;;2470:1;2466;:5;;;;:::i;:::-;2452:19;;2610:6;2619:1;2610:10;;2605:103;2630:1;2626;:5;;;;:::i;:::-;2622:1;:9;2605:103;;;2674:4;2683:1;2679;:5;;;;:::i;:::-;2674:11;;;;;;;:::i;:::-;;;;;;;;;;;;;2664:4;2669:1;2664:7;;;;;;;:::i;:::-;;;;:21;;;;;;;;;;;;;;;;;;2633:3;;;;;:::i;:::-;;;;2605:103;;;;2789:1;2774:11;:16;2770:101;;2838:10;2818:4;2823:11;2818:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2770:101;2376:662;;;2936:3;2921:11;:18;2917:103;;2987:10;2967:4;2972:11;2967:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2917:103;2376:662;2353:3;;;;;:::i;:::-;;;;2329:723;;;;1331:1731;1202:1866;;;1156:1912::o;3074:273::-;3132:4;3148:10;3161:3;3148:16;;3179:6;3174:145;3195:1;3191;:5;3174:145;;;3232:10;3221:21;;:4;3226:1;3221:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:21;;;3217:92;;3270:1;3262:9;;3289:5;;3217:92;3198:3;;;;;;;3174:145;;;;3335:5;3328:12;;;3074:273;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:442::-;514:4;552:2;541:9;537:18;529:26;;565:71;633:1;622:9;618:17;609:6;565:71;:::i;:::-;646:72;714:2;703:9;699:18;690:6;646:72;:::i;:::-;728;796:2;785:9;781:18;772:6;728:72;:::i;:::-;365:442;;;;;;:::o;894:117::-;1003:1;1000;993:12;1140:122;1213:24;1231:5;1213:24;:::i;:::-;1206:5;1203:35;1193:63;;1252:1;1249;1242:12;1193:63;1140:122;:::o;1268:139::-;1314:5;1352:6;1339:20;1330:29;;1368:33;1395:5;1368:33;:::i;:::-;1268:139;;;;:::o;1413:329::-;1472:6;1521:2;1509:9;1500:7;1496:23;1492:32;1489:119;;;1527:79;;:::i;:::-;1489:119;1647:1;1672:53;1717:7;1708:6;1697:9;1693:22;1672:53;:::i;:::-;1662:63;;1618:117;1413:329;;;;:::o;1748:77::-;1785:7;1814:5;1803:16;;1748:77;;;:::o;1831:118::-;1918:24;1936:5;1918:24;:::i;:::-;1913:3;1906:37;1831:118;;:::o;1955:222::-;2048:4;2086:2;2075:9;2071:18;2063:26;;2099:71;2167:1;2156:9;2152:17;2143:6;2099:71;:::i;:::-;1955:222;;;;:::o;2183:::-;2276:4;2314:2;2303:9;2299:18;2291:26;;2327:71;2395:1;2384:9;2380:17;2371:6;2327:71;:::i;:::-;2183:222;;;;:::o;2411:180::-;2459:77;2456:1;2449:88;2556:4;2553:1;2546:15;2580:4;2577:1;2570:15;2597:191;2637:3;2656:20;2674:1;2656:20;:::i;:::-;2651:25;;2690:20;2708:1;2690:20;:::i;:::-;2685:25;;2733:1;2730;2726:9;2719:16;;2754:3;2751:1;2748:10;2745:36;;;2761:18;;:::i;:::-;2745:36;2597:191;;;;:::o;2794:180::-;2842:77;2839:1;2832:88;2939:4;2936:1;2929:15;2963:4;2960:1;2953:15;2980:169;3064:11;3098:6;3093:3;3086:19;3138:4;3133:3;3129:14;3114:29;;2980:169;;;;:::o;3155:::-;3295:21;3291:1;3283:6;3279:14;3272:45;3155:169;:::o;3330:366::-;3472:3;3493:67;3557:2;3552:3;3493:67;:::i;:::-;3486:74;;3569:93;3658:3;3569:93;:::i;:::-;3687:2;3682:3;3678:12;3671:19;;3330:366;;;:::o;3702:419::-;3868:4;3906:2;3895:9;3891:18;3883:26;;3955:9;3949:4;3945:20;3941:1;3930:9;3926:17;3919:47;3983:131;4109:4;3983:131;:::i;:::-;3975:139;;3702:419;;;:::o;4127:194::-;4167:4;4187:20;4205:1;4187:20;:::i;:::-;4182:25;;4221:20;4239:1;4221:20;:::i;:::-;4216:25;;4265:1;4262;4258:9;4250:17;;4289:1;4283:4;4280:11;4277:37;;;4294:18;;:::i;:::-;4277:37;4127:194;;;;:::o;4327:171::-;4366:3;4389:24;4407:5;4389:24;:::i;:::-;4380:33;;4435:4;4428:5;4425:15;4422:41;;4443:18;;:::i;:::-;4422:41;4490:1;4483:5;4479:13;4472:20;;4327:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "608800",
								"executionCost": "24908",
								"totalCost": "633708"
							},
							"external": {
								"depositETH()": "infinite",
								"getETHBalance(address)": "2829",
								"getETHTopThreeAccount()": "infinite",
								"owner()": "2530",
								"withdrawETH()": "infinite"
							},
							"internal": {
								"_checkETHRankMembership()": "infinite",
								"_handleRankWhenDepositETH()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 392,
									"end": 441,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 424,
									"end": 434,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 416,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 416,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 3349,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200917aeb3870714b4e4a38c14bbb2d18fd39cf165060fbcf8a25508b87b26d85d64736f6c63430008160033",
									".code": [
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "2B7E8FAF"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "3BB66A7B"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "E086E5EC"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "F6326FB3"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 730,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 3349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 755,
											"end": 858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 553,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 621,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 600,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 645,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1117,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1126,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1135,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 950,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 478,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 829,
											"end": 850,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 3068,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1156,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1235,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1235,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 1335,
											"end": 1350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1457,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1504,
											"end": 1518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1504,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1647,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1642,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1654,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1696,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1748,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1805,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1800,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1790,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1755,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1965,
											"end": 1976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1960,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2075,
											"end": 2086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2125,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2351,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2421,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2416,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2466,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2626,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2674,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2664,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2633,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2823,
											"end": 2834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2818,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2921,
											"end": 2932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 2997,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2967,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2353,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3221,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 541,
											"end": 550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 537,
											"end": 555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 529,
											"end": 555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 633,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 618,
											"end": 635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 565,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 565,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 565,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 646,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 699,
											"end": 717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 690,
											"end": 696,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 646,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 646,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 646,
											"end": 718,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 646,
											"end": 718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 728,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 728,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 728,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 728,
											"end": 800,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 728,
											"end": 800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1011,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 894,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1262,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1140,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1213,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 1238,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1193,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1359,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1368,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1401,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1368,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 1478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1519,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1524,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1489,
											"end": 1608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1527,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1527,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1606,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1527,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1608,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1489,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1672,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1725,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1672,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1831,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1936,
											"end": 1941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1918,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1918,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1943,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2099,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2170,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2099,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2327,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2398,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2327,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2411,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2536,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 2561,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2584,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2585,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2656,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2676,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2656,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2690,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2758,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2781,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2745,
											"end": 2781,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2761,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2781,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2745,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2974,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2794,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2929,
											"end": 2944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2960,
											"end": 2961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2968,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3324,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3155,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3696,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3330,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3493,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3560,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3493,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3569,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3662,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3569,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 4121,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3702,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3965,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3983,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4114,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3983,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 4121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 4121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 4121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 4121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4187,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4207,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4187,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4221,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4241,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4221,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4241,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4267,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4294,
											"end": 4312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4294,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4277,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4498,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4327,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4389,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4422,
											"end": 4463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4443,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4463,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4422,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4483,
											"end": 4488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4492,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositETH()": "f6326fb3",
							"getETHBalance(address)": "3bb66a7b",
							"getETHTopThreeAccount()": "2b7e8faf",
							"owner()": "8da5cb5b",
							"withdrawETH()": "e086e5ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHTopThreeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":{\"keccak256\":\"0x9f1c757c5e1d2e01e04e59d5cd67200220fca3b22c51e872892adfac343c18e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261d98863d9d0d149c9b697a5f468a7cd5f97a966e8156fc17fbf75c53adcfe2\",\"dweb:/ipfs/QmQiaYS2oLdCoWkXBf3AKoFUimg65K9eWzjvLFkFFJUGdH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol:Bank",
								"label": "ETHBalance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 9,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol:Bank",
								"label": "rank",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)3_storage"
							},
							{
								"astId": 11,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol:Bank",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)3_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[3]",
								"numberOfBytes": "96"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol": {
				"IERC20TokenGTT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,address,uint256)": "d1660f99",
							"safeTransferFrom(address,address,address,uint256)": "d9fc4b61",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":\"IERC20TokenGTT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":{\"keccak256\":\"0x9f1c757c5e1d2e01e04e59d5cd67200220fca3b22c51e872892adfac343c18e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261d98863d9d0d149c9b697a5f468a7cd5f97a966e8156fc17fbf75c53adcfe2\",\"dweb:/ipfs/QmQiaYS2oLdCoWkXBf3AKoFUimg65K9eWzjvLFkFFJUGdH\"]},\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":{\"keccak256\":\"0xed2146ea864ae8e9564044af82f2fe66464e0029fd5b0c0a082a128e538edc86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2127682408232514fdf3b319f65d83b4ee6e07f613eb002b7a0aebc93d4caedc\",\"dweb:/ipfs/QmPWibKpmotam4veBnvk7sdZa614xdA3tMCasUq6yDmtkL\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "inputAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "validAddr",
									"type": "address"
								}
							],
							"name": "WrongTokenReceived",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokenReceived",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getETHBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getETHTopThreeAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenTopThreeAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iERC20Token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iGTT",
							"outputs": [
								{
									"internalType": "contract IERC20TokenGTT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":530:4526  contract TokenBank is Bank {... */\n  mstore(0x40, 0xe0)\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":936:1120  constructor(address _tokenAddr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":424:434  msg.sender */\n  caller\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":416:421  owner */\n  0x04\n  0x00\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":416:434  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":986:996  msg.sender */\n  caller\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":978:983  owner */\n  0x04\n  0x00\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":978:996  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1018:1028  _tokenAddr */\n  dup1\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1006:1028  tokenAddr = _tokenAddr */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1060:1070  _tokenAddr */\n  dup1\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1038:1071  iGTT = IERC20TokenGTT(_tokenAddr) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1102:1112  _tokenAddr */\n  dup1\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1081:1113  iERC20Token = IERC20(_tokenAddr) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":936:1120  constructor(address _tokenAddr) {... */\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":530:4526  contract TokenBank is Bank {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":932:1051   */\ntag_29:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_31\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":530:4526  contract TokenBank is Bank {... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6cfd55a66e5cc34b29752b3a64b2ed84f83c6356956121755c4a645dab2f4b8e\")\n  0x00\n  assignImmutable(\"0x44caf484852acee09d52b2802dba26d3c8ab3d28c7abcc1398b87898115633ec\")\n  0x00\n  assignImmutable(\"0x1691e29ee441a8bef8d5e9b87b08f05a140c26669fbfed8ad7e49a944a066767\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":530:4526  contract TokenBank is Bank {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6215be77\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb254b80a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb254b80a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xca628c78\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6215be77\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7251e8c2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x24a756d1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b7e8faf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3aecd0e3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3bb66a7b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4d3f3cf6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5fbe4d1d\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:742  depositETH() */\n      tag_20\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:740  depositETH */\n      tag_21\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":730:742  depositETH() */\n      jump\t// in\n    tag_20:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":530:4526  contract TokenBank is Bank {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1552:1883  function tokensReceived(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1889:2005  function getTokenBalance(address _account) public view returns (uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":690:726  IERC20TokenGTT public immutable iGTT */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":650:684  address public immutable tokenAddr */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1126:1413  function depositToken(uint _tokenAmount) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":732:767  IERC20 public immutable iERC20Token */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":365:385  address public owner */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2011:2188  function getTokenTopThreeAccount()... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1419:1546  function withdrawToken() public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":553:679  function depositETH() public payable {... */\n    tag_15:\n      tag_80\n      tag_21\n      jump\t// in\n    tag_80:\n      stop\n    tag_21:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":626:635  msg.value */\n      callvalue\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:610  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:622  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":611:621  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:622  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":600:635  ETHBalance[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:672  _handleRankWhenDepositETH() */\n      tag_84\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:670  _handleRankWhenDepositETH */\n      tag_85\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":645:672  _handleRankWhenDepositETH() */\n      jump\t// in\n    tag_84:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":553:679  function depositETH() public payable {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1552:1883  function tokensReceived(... */\n    tag_26:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1645:1649  bool */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1687:1696  tokenAddr */\n      immutable(\"0x1691e29ee441a8bef8d5e9b87b08f05a140c26669fbfed8ad7e49a944a066767\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1665:1697  msg.sender != address(tokenAddr) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1665:1675  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1665:1697  msg.sender != address(tokenAddr) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1661:1772  if (msg.sender != address(tokenAddr)) {... */\n      tag_87\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1739:1749  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1751:1760  tokenAddr */\n      immutable(\"0x1691e29ee441a8bef8d5e9b87b08f05a140c26669fbfed8ad7e49a944a066767\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1720:1761  WrongTokenReceived(msg.sender, tokenAddr) */\n      mload(0x40)\n      0x093b7d3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1661:1772  if (msg.sender != address(tokenAddr)) {... */\n    tag_87:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1804:1811  _amount */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1781:1793  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1781:1800  tokenBalance[_from] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1794:1799  _from */\n      dup6\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1781:1800  tokenBalance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1781:1811  tokenBalance[_from] += _amount */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1826:1855  tokenReceived(_from, _amount) */\n      0xcae15051bbb38f81d4d2fb0eeba04c25ec7fc5e1ac9d89d6d68af8d3aab337dc\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1840:1845  _from */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1847:1854  _amount */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1826:1855  tokenReceived(_from, _amount) */\n      mload(0x40)\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1872:1876  true */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1865:1876  return true */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1552:1883  function tokensReceived(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n    tag_31:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1068:1075  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1077:1084  address */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1086:1093  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1117:1121  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1122:1123  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1117:1124  rank[0] */\n      0x03\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n    tag_94:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1126:1130  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1131:1132  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1126:1133  rank[1] */\n      0x03\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_99\n      tag_96\n      jump\t// in\n    tag_99:\n    tag_98:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1135:1139  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1140:1141  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1135:1142  rank[2] */\n      0x03\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_102\n      tag_96\n      jump\t// in\n    tag_102:\n    tag_101:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1109:1143  return (rank[0], rank[1], rank[2]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":990:1150  function getETHTopThreeAccount()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1889:2005  function getTokenBalance(address _account) public view returns (uint) {... */\n    tag_38:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1953:1957  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1976:1988  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1976:1998  tokenBalance[_account] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1989:1997  _account */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1976:1998  tokenBalance[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1969:1998  return tokenBalance[_account] */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1889:2005  function getTokenBalance(address _account) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n    tag_44:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":934:938  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:967  ETHBalance */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:977  ETHBalance[_account] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":968:976  _account */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":957:977  ETHBalance[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":950:977  return ETHBalance[_account] */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":864:984  function getETHBalance(address _account) public view virtual returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":690:726  IERC20TokenGTT public immutable iGTT */\n    tag_48:\n      immutable(\"0x44caf484852acee09d52b2802dba26d3c8ab3d28c7abcc1398b87898115633ec\")\n      dup2\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":650:684  address public immutable tokenAddr */\n    tag_53:\n      immutable(\"0x1691e29ee441a8bef8d5e9b87b08f05a140c26669fbfed8ad7e49a944a066767\")\n      dup2\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1126:1413  function depositToken(uint _tokenAmount) public {... */\n    tag_60:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1184:1188  iGTT */\n      immutable(\"0x44caf484852acee09d52b2802dba26d3c8ab3d28c7abcc1398b87898115633ec\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1184:1205  iGTT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9fc4b61\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1219:1230  iERC20Token */\n      immutable(\"0x6cfd55a66e5cc34b29752b3a64b2ed84f83c6356956121755c4a645dab2f4b8e\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1244:1254  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1276:1280  this */\n      address\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1295:1307  _tokenAmount */\n      dup6\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1184:1317  iGTT.safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1355:1367  _tokenAmount */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1327:1339  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1327:1351  tokenBalance[msg.sender] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1340:1350  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1327:1351  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1327:1367  tokenBalance[msg.sender] += _tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1377:1406  _handleRankWhenDepositToken() */\n      tag_113\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1377:1404  _handleRankWhenDepositToken */\n      tag_114\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1377:1406  _handleRankWhenDepositToken() */\n      jump\t// in\n    tag_113:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1126:1413  function depositToken(uint _tokenAmount) public {... */\n      pop\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":732:767  IERC20 public immutable iERC20Token */\n    tag_63:\n      immutable(\"0x6cfd55a66e5cc34b29752b3a64b2ed84f83c6356956121755c4a645dab2f4b8e\")\n      dup2\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":365:385  address public owner */\n    tag_68:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2011:2188  function getTokenTopThreeAccount()... */\n    tag_72:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2091:2098  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2100:2107  address */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2109:2116  address */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2140:2149  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2150:2151  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2140:2152  tokenRank[0] */\n      0x03\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_96\n      jump\t// in\n    tag_117:\n    tag_116:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2154:2163  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2164:2165  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2154:2166  tokenRank[1] */\n      0x03\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_96\n      jump\t// in\n    tag_120:\n    tag_119:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2168:2177  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2178:2179  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2168:2180  tokenRank[2] */\n      0x03\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_96\n      jump\t// in\n    tag_123:\n    tag_122:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2132:2181  return (tokenRank[0], tokenRank[1], tokenRank[2]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2011:2188  function getTokenTopThreeAccount()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1419:1546  function withdrawToken() public onlyOwner {... */\n    tag_76:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":500:505  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:496  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":478:529  require(msg.sender == owner, \"Only owner can call\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1471:1475  iGTT */\n      immutable(\"0x44caf484852acee09d52b2802dba26d3c8ab3d28c7abcc1398b87898115633ec\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1471:1488  iGTT.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd1660f99\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1489:1500  iERC20Token */\n      immutable(\"0x6cfd55a66e5cc34b29752b3a64b2ed84f83c6356956121755c4a645dab2f4b8e\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1502:1507  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1509:1513  iGTT */\n      immutable(\"0x44caf484852acee09d52b2802dba26d3c8ab3d28c7abcc1398b87898115633ec\")\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1509:1523  iGTT.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1532:1536  this */\n      address\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1509:1538  iGTT.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1471:1539  iGTT.safeTransfer(iERC20Token, owner, iGTT.balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":1419:1546  function withdrawToken() public onlyOwner {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n    tag_79:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":500:505  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:496  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":486:505  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":478:529  require(msg.sender == owner, \"Only owner can call\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_128\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":813:818  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:828  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:851  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":829:850  address(this).balance */\n      selfbalance\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":805:851  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":755:858  function withdrawETH() public onlyOwner {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1156:3068  function _handleRankWhenDepositETH() internal {... */\n    tag_85:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1212:1232  uint membershipIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1260  _checkETHRankMembership() */\n      tag_147\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1258  _checkETHRankMembership */\n      tag_148\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1235:1260  _checkETHRankMembership() */\n      jump\t// in\n    tag_147:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1212:1260  uint membershipIndex = _checkETHRankMembership() */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1270:1289  uint convertedIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1299:1315  uint indexRecord */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1318:1321  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1299:1321  uint indexRecord = 777 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1354:1357  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1335:1350  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1335:1357  membershipIndex != 999 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n      tag_149\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1475:1476  4 */\n      0x04\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1457:1472  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1457:1476  membershipIndex + 4 */\n      tag_150\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_150:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1440:1476  convertedIndex = membershipIndex + 4 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1495:1501  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1521:1522  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1504:1518  convertedIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1504:1522  convertedIndex - 3 */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1495:1522  uint i = convertedIndex - 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n    tag_151:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1528:1529  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1524:1525  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1524:1529  i > 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1577:1578  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1558:1573  membershipIndex */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1558:1578  membershipIndex != 0 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1554:2222  if (membershipIndex != 0) {... */\n      tag_156\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1641  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1654  ETHBalance[rank[i - 2]] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1642:1646  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1651:1652  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1647:1648  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1647:1652  i - 2 */\n      tag_157\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_157:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1642:1653  rank[i - 2] */\n      0x03\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_159\n      tag_96\n      jump\t// in\n    tag_159:\n    tag_158:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1631:1654  ETHBalance[rank[i - 2]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1616  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1628  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1617:1627  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1628  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1606:1654  ETHBalance[msg.sender] > ETHBalance[rank[i - 2]] */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1700:1701  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1696:1697  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1696:1701  i - 2 */\n      tag_162\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_162:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1682:1701  indexRecord = i - 2 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1732:1738  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1741:1742  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1732:1742  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n    tag_163:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1752:1753  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1748:1749  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1748:1753  i - 2 */\n      tag_166\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_166:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1744:1745  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1744:1753  j > i - 2 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1800:1804  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1809:1810  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1805:1806  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1805:1810  j - 1 */\n      tag_167\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_167:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1800:1811  rank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_96\n      jump\t// in\n    tag_169:\n    tag_168:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1794  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1795:1796  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1797  rank[j] */\n      0x03\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_96\n      jump\t// in\n    tag_172:\n    tag_171:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1790:1811  rank[j] = rank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1755:1758  j-- */\n      dup1\n      dup1\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1727:1838  for (uint j = 2; j > i - 2; j--) {... */\n      jump(tag_163)\n    tag_164:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1927:1928  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1912:1923  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1912:1928  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1908:2017  if (indexRecord == 0) {... */\n      tag_176\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1980:1990  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1964  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1965:1976  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1977  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_177\n      jumpi\n      tag_178\n      tag_96\n      jump\t// in\n    tag_178:\n    tag_177:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1960:1990  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1908:2017  if (indexRecord == 0) {... */\n    tag_176:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n      jump(tag_180)\n    tag_161:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2090:2093  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2075:2086  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2075:2093  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2071:2182  if (indexRecord != 777) {... */\n      tag_181\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2145:2155  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2129  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2130:2141  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2142  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_183\n      tag_96\n      jump\t// in\n    tag_183:\n    tag_182:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2125:2155  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2071:2182  if (indexRecord != 777) {... */\n    tag_181:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1602:2204  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 2]]) {... */\n    tag_180:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1554:2222  if (membershipIndex != 0) {... */\n    tag_156:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1531:1534  i-- */\n      dup1\n      dup1\n      tag_185\n      swap1\n      tag_175\n      jump\t// in\n    tag_185:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1490:2236  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      jump(tag_151)\n    tag_152:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n      jump(tag_186)\n    tag_149:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2334:2340  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2343:2344  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2334:2344  uint i = 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n    tag_187:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2350:2351  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2346:2347  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2346:2351  i > 0 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2415  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2428  ETHBalance[rank[i - 1]] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2416:2420  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2425:2426  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2421:2422  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2421:2426  i - 1 */\n      tag_190\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_190:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2416:2427  rank[i - 1] */\n      0x03\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_192\n      tag_96\n      jump\t// in\n    tag_192:\n    tag_191:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2405:2428  ETHBalance[rank[i - 1]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2390  ETHBalance */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2402  ETHBalance[msg.sender] */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2391:2401  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2402  ETHBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2380:2428  ETHBalance[msg.sender] > ETHBalance[rank[i - 1]] */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2470:2471  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2466:2467  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2466:2471  i - 1 */\n      tag_195\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_195:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2452:2471  indexRecord = i - 1 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2610:2616  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2619:2620  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2610:2620  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n    tag_196:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2630:2631  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2626:2627  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2626:2631  i - 1 */\n      tag_199\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_199:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2622:2623  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2622:2631  j > i - 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2674:2678  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2683:2684  1 */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2679:2680  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2679:2684  j - 1 */\n      tag_200\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_200:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2674:2685  rank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_202\n      tag_96\n      jump\t// in\n    tag_202:\n    tag_201:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2668  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2669:2670  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2671  rank[j] */\n      0x03\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_96\n      jump\t// in\n    tag_205:\n    tag_204:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2664:2685  rank[j] = rank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2633:2636  j-- */\n      dup1\n      dup1\n      tag_207\n      swap1\n      tag_175\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2605:2708  for (uint j = 2; j > i - 1; j--) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2789:2790  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2774:2785  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2774:2790  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2770:2871  if (indexRecord == 0) {... */\n      tag_208\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2838:2848  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2822  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2823:2834  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2835  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_209\n      jumpi\n      tag_210\n      tag_96\n      jump\t// in\n    tag_210:\n    tag_209:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2818:2848  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2770:2871  if (indexRecord == 0) {... */\n    tag_208:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n      jump(tag_212)\n    tag_194:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2936:2939  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2921:2932  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2921:2939  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2917:3020  if (indexRecord != 777) {... */\n      tag_213\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2987:2997  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2971  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2972:2983  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2984  rank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_215\n      tag_96\n      jump\t// in\n    tag_215:\n    tag_214:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2967:2997  rank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2917:3020  if (indexRecord != 777) {... */\n    tag_213:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2376:3038  if (ETHBalance[msg.sender] > ETHBalance[rank[i - 1]]) {... */\n    tag_212:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2353:2356  i-- */\n      dup1\n      dup1\n      tag_217\n      swap1\n      tag_175\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":2329:3052  for (uint i = 3; i > 0; i--) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1331:3062  if (membershipIndex != 999) {... */\n    tag_186:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1202:3068  {... */\n      pop\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":1156:3068  function _handleRankWhenDepositETH() internal {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2194:4238  function _handleRankWhenDepositToken() internal {... */\n    tag_114:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2252:2272  uint membershipIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2275:2302  _checkTokenRankMembership() */\n      tag_219\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2275:2300  _checkTokenRankMembership */\n      tag_220\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2275:2302  _checkTokenRankMembership() */\n      jump\t// in\n    tag_219:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2252:2302  uint membershipIndex = _checkTokenRankMembership() */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2312:2331  uint convertedIndex */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2341:2357  uint indexRecord */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2360:2363  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2341:2363  uint indexRecord = 777 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2396:2399  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2377:2392  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2377:2399  membershipIndex != 999 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2373:4232  if (membershipIndex != 999) {... */\n      tag_221\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2517:2518  4 */\n      0x04\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2499:2514  membershipIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2499:2518  membershipIndex + 4 */\n      tag_222\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_222:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2482:2518  convertedIndex = membershipIndex + 4 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2537:2543  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2563:2564  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2546:2560  convertedIndex */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2546:2564  convertedIndex - 3 */\n      tag_226\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_226:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2537:2564  uint i = convertedIndex - 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2532:3377  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n    tag_223:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2570:2571  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2566:2567  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2566:2571  i > 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2532:3377  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2619:2620  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2600:2615  membershipIndex */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2600:2620  membershipIndex != 0 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2596:3363  if (membershipIndex != 0) {... */\n      tag_227\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2724:2736  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2724:2754  tokenBalance[tokenRank[i - 2]] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2737:2746  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2751:2752  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2747:2748  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2747:2752  i - 2 */\n      tag_228\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_228:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2737:2753  tokenRank[i - 2] */\n      0x03\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_96\n      jump\t// in\n    tag_230:\n    tag_229:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2724:2754  tokenBalance[tokenRank[i - 2]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2673:2685  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2673:2697  tokenBalance[msg.sender] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2686:2696  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2673:2697  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2673:2754  tokenBalance[msg.sender] >... */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2644:3345  if (... */\n      iszero\n      tag_232\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2821:2822  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2817:2818  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2817:2822  i - 2 */\n      tag_233\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_233:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2803:2822  indexRecord = i - 2 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2853:2859  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2862:2863  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2853:2863  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2848:2969  for (uint j = 2; j > i - 2; j--) {... */\n    tag_234:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2873:2874  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2869:2870  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2869:2874  i - 2 */\n      tag_237\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_237:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2865:2866  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2865:2874  j > i - 2 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2848:2969  for (uint j = 2; j > i - 2; j--) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2926:2935  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2940:2941  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2936:2937  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2936:2941  j - 1 */\n      tag_238\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_238:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2926:2942  tokenRank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_96\n      jump\t// in\n    tag_240:\n    tag_239:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2911:2920  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2921:2922  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2911:2923  tokenRank[j] */\n      0x03\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_243\n      tag_96\n      jump\t// in\n    tag_243:\n    tag_242:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2911:2942  tokenRank[j] = tokenRank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2876:2879  j-- */\n      dup1\n      dup1\n      tag_245\n      swap1\n      tag_175\n      jump\t// in\n    tag_245:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2848:2969  for (uint j = 2; j > i - 2; j--) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3058:3059  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3043:3054  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3043:3059  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3039:3153  if (indexRecord == 0) {... */\n      tag_246\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3116:3126  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3091:3100  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3101:3112  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3091:3113  tokenRank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_96\n      jump\t// in\n    tag_248:\n    tag_247:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3091:3126  tokenRank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3039:3153  if (indexRecord == 0) {... */\n    tag_246:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2644:3345  if (... */\n      jump(tag_250)\n    tag_232:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3226:3229  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3211:3222  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3211:3229  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3207:3323  if (indexRecord != 777) {... */\n      tag_251\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3286:3296  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3261:3270  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3271:3282  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3261:3283  tokenRank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_253\n      tag_96\n      jump\t// in\n    tag_253:\n    tag_252:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3261:3296  tokenRank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3207:3323  if (indexRecord != 777) {... */\n    tag_251:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2644:3345  if (... */\n    tag_250:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2596:3363  if (membershipIndex != 0) {... */\n    tag_227:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2573:2576  i-- */\n      dup1\n      dup1\n      tag_255\n      swap1\n      tag_175\n      jump\t// in\n    tag_255:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2532:3377  for (uint i = convertedIndex - 3; i > 1; i--) {... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2373:4232  if (membershipIndex != 999) {... */\n      jump(tag_256)\n    tag_221:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3475:3481  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3484:3485  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3475:3485  uint i = 3 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3470:4222  for (uint i = 3; i > 0; i--) {... */\n    tag_257:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3491:3492  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3487:3488  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3487:3492  i > 0 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3470:4222  for (uint i = 3; i > 0; i--) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3548:3560  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3548:3578  tokenBalance[tokenRank[i - 1]] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3561:3570  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3575:3576  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3571:3572  i */\n      dup5\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3571:3576  i - 1 */\n      tag_260\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_260:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3561:3577  tokenRank[i - 1] */\n      0x03\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_262\n      tag_96\n      jump\t// in\n    tag_262:\n    tag_261:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3548:3578  tokenBalance[tokenRank[i - 1]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3521:3533  tokenBalance */\n      0x05\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3521:3545  tokenBalance[msg.sender] */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3534:3544  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3521:3545  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3521:3578  tokenBalance[msg.sender] > tokenBalance[tokenRank[i - 1]] */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3517:4208  if (tokenBalance[msg.sender] > tokenBalance[tokenRank[i - 1]]) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3620:3621  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3616:3617  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3616:3621  i - 1 */\n      tag_265\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_265:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3602:3621  indexRecord = i - 1 */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3760:3766  uint j */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3769:3770  2 */\n      0x02\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3760:3770  uint j = 2 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3755:3868  for (uint j = 2; j > i - 1; j--) {... */\n    tag_266:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3780:3781  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3776:3777  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3776:3781  i - 1 */\n      tag_269\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_269:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3772:3773  j */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3772:3781  j > i - 1 */\n      gt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3755:3868  for (uint j = 2; j > i - 1; j--) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3829:3838  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3843:3844  1 */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3839:3840  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3839:3844  j - 1 */\n      tag_270\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_270:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3829:3845  tokenRank[j - 1] */\n      0x03\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_272\n      tag_96\n      jump\t// in\n    tag_272:\n    tag_271:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3814:3823  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3824:3825  j */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3814:3826  tokenRank[j] */\n      0x03\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_275\n      tag_96\n      jump\t// in\n    tag_275:\n    tag_274:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3814:3845  tokenRank[j] = tokenRank[j - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3783:3786  j-- */\n      dup1\n      dup1\n      tag_277\n      swap1\n      tag_175\n      jump\t// in\n    tag_277:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3755:3868  for (uint j = 2; j > i - 1; j--) {... */\n      jump(tag_266)\n    tag_267:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3949:3950  0 */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3934:3945  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3934:3950  indexRecord == 0 */\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3930:4036  if (indexRecord == 0) {... */\n      tag_278\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4003:4013  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3978:3987  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3988:3999  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3978:4000  tokenRank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_280\n      tag_96\n      jump\t// in\n    tag_280:\n    tag_279:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3978:4013  tokenRank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3930:4036  if (indexRecord == 0) {... */\n    tag_278:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3517:4208  if (tokenBalance[msg.sender] > tokenBalance[tokenRank[i - 1]]) {... */\n      jump(tag_282)\n    tag_264:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4101:4104  777 */\n      0x0309\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4086:4097  indexRecord */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4086:4104  indexRecord != 777 */\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4082:4190  if (indexRecord != 777) {... */\n      tag_283\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4157:4167  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4132:4141  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4142:4153  indexRecord */\n      dup4\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4132:4154  tokenRank[indexRecord] */\n      0x03\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_285\n      tag_96\n      jump\t// in\n    tag_285:\n    tag_284:\n      add\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4132:4167  tokenRank[indexRecord] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4082:4190  if (indexRecord != 777) {... */\n    tag_283:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3517:4208  if (tokenBalance[msg.sender] > tokenBalance[tokenRank[i - 1]]) {... */\n    tag_282:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3494:3497  i-- */\n      dup1\n      dup1\n      tag_287\n      swap1\n      tag_175\n      jump\t// in\n    tag_287:\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":3470:4222  for (uint i = 3; i > 0; i--) {... */\n      jump(tag_257)\n    tag_258:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2373:4232  if (membershipIndex != 999) {... */\n    tag_256:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2242:4238  {... */\n      pop\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":2194:4238  function _handleRankWhenDepositToken() internal {... */\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3074:3347  function _checkETHRankMembership() internal view returns (uint) {... */\n    tag_148:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3132:3136  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3148:3158  uint index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3161:3164  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3148:3164  uint index = 999 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3179:3185  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n    tag_289:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3195:3196  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3191:3192  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3191:3196  i < 3 */\n      lt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3232:3242  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3242  rank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3225  rank */\n      0x01\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3226:3227  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3228  rank[i] */\n      0x03\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_96\n      jump\t// in\n    tag_293:\n    tag_292:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3221:3242  rank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3217:3309  if (rank[i] == msg.sender) {... */\n      tag_295\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3270:3271  i */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3262:3271  index = i */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3289:3294  break */\n      jump(tag_290)\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3217:3309  if (rank[i] == msg.sender) {... */\n    tag_295:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3198:3201  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3174:3319  for (uint i = 0; i < 3; i++) {... */\n      jump(tag_289)\n    tag_290:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3335:3340  index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3328:3340  return index */\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":3074:3347  function _checkETHRankMembership() internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4244:4524  function _checkTokenRankMembership() internal view returns (uint) {... */\n    tag_220:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4304:4308  uint */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4320:4330  uint index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4333:4336  999 */\n      0x03e7\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4320:4336  uint index = 999 */\n      swap1\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4351:4357  uint i */\n      0x00\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4346:4496  for (uint i = 0; i < 3; i++) {... */\n    tag_297:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4367:4368  3 */\n      0x03\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4363:4364  i */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4363:4368  i < 3 */\n      lt\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4346:4496  for (uint i = 0; i < 3; i++) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4409:4419  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4393:4419  tokenRank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4393:4402  tokenRank */\n      0x06\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4403:4404  i */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4393:4405  tokenRank[i] */\n      0x03\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_301\n      tag_96\n      jump\t// in\n    tag_301:\n    tag_300:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4393:4419  tokenRank[i] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4389:4486  if (tokenRank[i] == msg.sender) {... */\n      tag_303\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4447:4448  i */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4439:4448  index = i */\n      swap2\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4466:4471  break */\n      jump(tag_298)\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4389:4486  if (tokenRank[i] == msg.sender) {... */\n    tag_303:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4370:4373  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4346:4496  for (uint i = 0; i < 3; i++) {... */\n      jump(tag_297)\n    tag_298:\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4512:4517  index */\n      dup1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4505:4517  return index */\n      swap2\n      pop\n      pop\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":4244:4524  function _checkTokenRankMembership() internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_305:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_307:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_308:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_336\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_307\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_309:\n        /* \"#utility.yul\":641:665   */\n      tag_338\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_308\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_339:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_310:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_341\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_309\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_311:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_312:\n        /* \"#utility.yul\":997:1021   */\n      tag_344\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_311\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_345:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_313:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_347\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_312\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_25:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_350\n      tag_305\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1290:1409   */\n    tag_349:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_351\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_310\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_352\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_313\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_314:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_315:\n        /* \"#utility.yul\":1854:1875   */\n      tag_355\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_314\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_28:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_357\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_315\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2222   */\n    tag_316:\n        /* \"#utility.yul\":2191:2215   */\n      tag_359\n        /* \"#utility.yul\":2209:2214   */\n      dup2\n        /* \"#utility.yul\":2191:2215   */\n      tag_308\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2186:2189   */\n      dup3\n        /* \"#utility.yul\":2179:2216   */\n      mstore\n        /* \"#utility.yul\":2104:2222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2670   */\n    tag_33:\n        /* \"#utility.yul\":2377:2381   */\n      0x00\n        /* \"#utility.yul\":2415:2417   */\n      0x60\n        /* \"#utility.yul\":2404:2413   */\n      dup3\n        /* \"#utility.yul\":2400:2418   */\n      add\n        /* \"#utility.yul\":2392:2418   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2499   */\n      tag_361\n        /* \"#utility.yul\":2496:2497   */\n      0x00\n        /* \"#utility.yul\":2485:2494   */\n      dup4\n        /* \"#utility.yul\":2481:2498   */\n      add\n        /* \"#utility.yul\":2472:2478   */\n      dup7\n        /* \"#utility.yul\":2428:2499   */\n      tag_316\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2509:2581   */\n      tag_362\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2566:2575   */\n      dup4\n        /* \"#utility.yul\":2562:2580   */\n      add\n        /* \"#utility.yul\":2553:2559   */\n      dup6\n        /* \"#utility.yul\":2509:2581   */\n      tag_316\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2591:2663   */\n      tag_363\n        /* \"#utility.yul\":2659:2661   */\n      0x40\n        /* \"#utility.yul\":2648:2657   */\n      dup4\n        /* \"#utility.yul\":2644:2662   */\n      add\n        /* \"#utility.yul\":2635:2641   */\n      dup5\n        /* \"#utility.yul\":2591:2663   */\n      tag_316\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2228:2670   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:3005   */\n    tag_37:\n        /* \"#utility.yul\":2735:2741   */\n      0x00\n        /* \"#utility.yul\":2784:2786   */\n      0x20\n        /* \"#utility.yul\":2772:2781   */\n      dup3\n        /* \"#utility.yul\":2763:2770   */\n      dup5\n        /* \"#utility.yul\":2759:2782   */\n      sub\n        /* \"#utility.yul\":2755:2787   */\n      slt\n        /* \"#utility.yul\":2752:2871   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2790:2869   */\n      tag_366\n      tag_305\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2752:2871   */\n    tag_365:\n        /* \"#utility.yul\":2910:2911   */\n      0x00\n        /* \"#utility.yul\":2935:2988   */\n      tag_367\n        /* \"#utility.yul\":2980:2987   */\n      dup5\n        /* \"#utility.yul\":2971:2977   */\n      dup3\n        /* \"#utility.yul\":2960:2969   */\n      dup6\n        /* \"#utility.yul\":2956:2978   */\n      add\n        /* \"#utility.yul\":2935:2988   */\n      tag_310\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2925:2988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2881:2998   */\n      pop\n        /* \"#utility.yul\":2676:3005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3011:3129   */\n    tag_317:\n        /* \"#utility.yul\":3098:3122   */\n      tag_369\n        /* \"#utility.yul\":3116:3121   */\n      dup2\n        /* \"#utility.yul\":3098:3122   */\n      tag_311\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3093:3096   */\n      dup3\n        /* \"#utility.yul\":3086:3123   */\n      mstore\n        /* \"#utility.yul\":3011:3129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3357   */\n    tag_40:\n        /* \"#utility.yul\":3228:3232   */\n      0x00\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup3\n        /* \"#utility.yul\":3251:3269   */\n      add\n        /* \"#utility.yul\":3243:3269   */\n      swap1\n      pop\n        /* \"#utility.yul\":3279:3350   */\n      tag_371\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3336:3345   */\n      dup4\n        /* \"#utility.yul\":3332:3349   */\n      add\n        /* \"#utility.yul\":3323:3329   */\n      dup5\n        /* \"#utility.yul\":3279:3350   */\n      tag_317\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3135:3357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3363:3423   */\n    tag_318:\n        /* \"#utility.yul\":3391:3394   */\n      0x00\n        /* \"#utility.yul\":3412:3417   */\n      dup2\n        /* \"#utility.yul\":3405:3417   */\n      swap1\n      pop\n        /* \"#utility.yul\":3363:3423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3429:3571   */\n    tag_319:\n        /* \"#utility.yul\":3479:3488   */\n      0x00\n        /* \"#utility.yul\":3512:3565   */\n      tag_374\n        /* \"#utility.yul\":3530:3564   */\n      tag_375\n        /* \"#utility.yul\":3539:3563   */\n      tag_376\n        /* \"#utility.yul\":3557:3562   */\n      dup5\n        /* \"#utility.yul\":3539:3563   */\n      tag_307\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3530:3564   */\n      tag_318\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3512:3565   */\n      tag_307\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3499:3565   */\n      swap1\n      pop\n        /* \"#utility.yul\":3429:3571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3577:3703   */\n    tag_320:\n        /* \"#utility.yul\":3627:3636   */\n      0x00\n        /* \"#utility.yul\":3660:3697   */\n      tag_378\n        /* \"#utility.yul\":3691:3696   */\n      dup3\n        /* \"#utility.yul\":3660:3697   */\n      tag_319\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3647:3697   */\n      swap1\n      pop\n        /* \"#utility.yul\":3577:3703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:3857   */\n    tag_321:\n        /* \"#utility.yul\":3781:3790   */\n      0x00\n        /* \"#utility.yul\":3814:3851   */\n      tag_380\n        /* \"#utility.yul\":3845:3850   */\n      dup3\n        /* \"#utility.yul\":3814:3851   */\n      tag_320\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3801:3851   */\n      swap1\n      pop\n        /* \"#utility.yul\":3709:3857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3863:4038   */\n    tag_322:\n        /* \"#utility.yul\":3972:4031   */\n      tag_382\n        /* \"#utility.yul\":4025:4030   */\n      dup2\n        /* \"#utility.yul\":3972:4031   */\n      tag_321\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3967:3970   */\n      dup3\n        /* \"#utility.yul\":3960:4032   */\n      mstore\n        /* \"#utility.yul\":3863:4038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4044:4310   */\n    tag_50:\n        /* \"#utility.yul\":4159:4163   */\n      0x00\n        /* \"#utility.yul\":4197:4199   */\n      0x20\n        /* \"#utility.yul\":4186:4195   */\n      dup3\n        /* \"#utility.yul\":4182:4200   */\n      add\n        /* \"#utility.yul\":4174:4200   */\n      swap1\n      pop\n        /* \"#utility.yul\":4210:4303   */\n      tag_384\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4289:4298   */\n      dup4\n        /* \"#utility.yul\":4285:4302   */\n      add\n        /* \"#utility.yul\":4276:4282   */\n      dup5\n        /* \"#utility.yul\":4210:4303   */\n      tag_322\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4044:4310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4538   */\n    tag_55:\n        /* \"#utility.yul\":4409:4413   */\n      0x00\n        /* \"#utility.yul\":4447:4449   */\n      0x20\n        /* \"#utility.yul\":4436:4445   */\n      dup3\n        /* \"#utility.yul\":4432:4450   */\n      add\n        /* \"#utility.yul\":4424:4450   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4531   */\n      tag_386\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4517:4526   */\n      dup4\n        /* \"#utility.yul\":4513:4530   */\n      add\n        /* \"#utility.yul\":4504:4510   */\n      dup5\n        /* \"#utility.yul\":4460:4531   */\n      tag_316\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4316:4538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:4873   */\n    tag_59:\n        /* \"#utility.yul\":4603:4609   */\n      0x00\n        /* \"#utility.yul\":4652:4654   */\n      0x20\n        /* \"#utility.yul\":4640:4649   */\n      dup3\n        /* \"#utility.yul\":4631:4638   */\n      dup5\n        /* \"#utility.yul\":4627:4650   */\n      sub\n        /* \"#utility.yul\":4623:4655   */\n      slt\n        /* \"#utility.yul\":4620:4739   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":4658:4737   */\n      tag_389\n      tag_305\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4620:4739   */\n    tag_388:\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4803:4856   */\n      tag_390\n        /* \"#utility.yul\":4848:4855   */\n      dup5\n        /* \"#utility.yul\":4839:4845   */\n      dup3\n        /* \"#utility.yul\":4828:4837   */\n      dup6\n        /* \"#utility.yul\":4824:4846   */\n      add\n        /* \"#utility.yul\":4803:4856   */\n      tag_313\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4793:4856   */\n      swap2\n      pop\n        /* \"#utility.yul\":4749:4866   */\n      pop\n        /* \"#utility.yul\":4544:4873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4879:5019   */\n    tag_323:\n        /* \"#utility.yul\":4943:4952   */\n      0x00\n        /* \"#utility.yul\":4976:5013   */\n      tag_392\n        /* \"#utility.yul\":5007:5012   */\n      dup3\n        /* \"#utility.yul\":4976:5013   */\n      tag_320\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4963:5013   */\n      swap1\n      pop\n        /* \"#utility.yul\":4879:5019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5025:5184   */\n    tag_324:\n        /* \"#utility.yul\":5126:5177   */\n      tag_394\n        /* \"#utility.yul\":5171:5176   */\n      dup2\n        /* \"#utility.yul\":5126:5177   */\n      tag_323\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5121:5124   */\n      dup3\n        /* \"#utility.yul\":5114:5178   */\n      mstore\n        /* \"#utility.yul\":5025:5184   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5440   */\n    tag_65:\n        /* \"#utility.yul\":5297:5301   */\n      0x00\n        /* \"#utility.yul\":5335:5337   */\n      0x20\n        /* \"#utility.yul\":5324:5333   */\n      dup3\n        /* \"#utility.yul\":5320:5338   */\n      add\n        /* \"#utility.yul\":5312:5338   */\n      swap1\n      pop\n        /* \"#utility.yul\":5348:5433   */\n      tag_396\n        /* \"#utility.yul\":5430:5431   */\n      0x00\n        /* \"#utility.yul\":5419:5428   */\n      dup4\n        /* \"#utility.yul\":5415:5432   */\n      add\n        /* \"#utility.yul\":5406:5412   */\n      dup5\n        /* \"#utility.yul\":5348:5433   */\n      tag_324\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5190:5440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5446:5626   */\n    tag_325:\n        /* \"#utility.yul\":5494:5571   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5491:5492   */\n      0x00\n        /* \"#utility.yul\":5484:5572   */\n      mstore\n        /* \"#utility.yul\":5591:5595   */\n      0x11\n        /* \"#utility.yul\":5588:5589   */\n      0x04\n        /* \"#utility.yul\":5581:5596   */\n      mstore\n        /* \"#utility.yul\":5615:5619   */\n      0x24\n        /* \"#utility.yul\":5612:5613   */\n      0x00\n        /* \"#utility.yul\":5605:5620   */\n      revert\n        /* \"#utility.yul\":5632:5823   */\n    tag_83:\n        /* \"#utility.yul\":5672:5675   */\n      0x00\n        /* \"#utility.yul\":5691:5711   */\n      tag_399\n        /* \"#utility.yul\":5709:5710   */\n      dup3\n        /* \"#utility.yul\":5691:5711   */\n      tag_311\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5686:5711   */\n      swap2\n      pop\n        /* \"#utility.yul\":5725:5745   */\n      tag_400\n        /* \"#utility.yul\":5743:5744   */\n      dup4\n        /* \"#utility.yul\":5725:5745   */\n      tag_311\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5720:5745   */\n      swap3\n      pop\n        /* \"#utility.yul\":5768:5769   */\n      dup3\n        /* \"#utility.yul\":5765:5766   */\n      dup3\n        /* \"#utility.yul\":5761:5770   */\n      add\n        /* \"#utility.yul\":5754:5770   */\n      swap1\n      pop\n        /* \"#utility.yul\":5789:5792   */\n      dup1\n        /* \"#utility.yul\":5786:5787   */\n      dup3\n        /* \"#utility.yul\":5783:5793   */\n      gt\n        /* \"#utility.yul\":5780:5816   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5796:5814   */\n      tag_402\n      tag_325\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5780:5816   */\n    tag_401:\n        /* \"#utility.yul\":5632:5823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5829:6161   */\n    tag_89:\n        /* \"#utility.yul\":5950:5954   */\n      0x00\n        /* \"#utility.yul\":5988:5990   */\n      0x40\n        /* \"#utility.yul\":5977:5986   */\n      dup3\n        /* \"#utility.yul\":5973:5991   */\n      add\n        /* \"#utility.yul\":5965:5991   */\n      swap1\n      pop\n        /* \"#utility.yul\":6001:6072   */\n      tag_404\n        /* \"#utility.yul\":6069:6070   */\n      0x00\n        /* \"#utility.yul\":6058:6067   */\n      dup4\n        /* \"#utility.yul\":6054:6071   */\n      add\n        /* \"#utility.yul\":6045:6051   */\n      dup6\n        /* \"#utility.yul\":6001:6072   */\n      tag_316\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6082:6154   */\n      tag_405\n        /* \"#utility.yul\":6150:6152   */\n      0x20\n        /* \"#utility.yul\":6139:6148   */\n      dup4\n        /* \"#utility.yul\":6135:6153   */\n      add\n        /* \"#utility.yul\":6126:6132   */\n      dup5\n        /* \"#utility.yul\":6082:6154   */\n      tag_316\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5829:6161   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6167:6499   */\n    tag_92:\n        /* \"#utility.yul\":6288:6292   */\n      0x00\n        /* \"#utility.yul\":6326:6328   */\n      0x40\n        /* \"#utility.yul\":6315:6324   */\n      dup3\n        /* \"#utility.yul\":6311:6329   */\n      add\n        /* \"#utility.yul\":6303:6329   */\n      swap1\n      pop\n        /* \"#utility.yul\":6339:6410   */\n      tag_407\n        /* \"#utility.yul\":6407:6408   */\n      0x00\n        /* \"#utility.yul\":6396:6405   */\n      dup4\n        /* \"#utility.yul\":6392:6409   */\n      add\n        /* \"#utility.yul\":6383:6389   */\n      dup6\n        /* \"#utility.yul\":6339:6410   */\n      tag_316\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6420:6492   */\n      tag_408\n        /* \"#utility.yul\":6488:6490   */\n      0x20\n        /* \"#utility.yul\":6477:6486   */\n      dup4\n        /* \"#utility.yul\":6473:6491   */\n      add\n        /* \"#utility.yul\":6464:6470   */\n      dup5\n        /* \"#utility.yul\":6420:6492   */\n      tag_317\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6167:6499   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6505:6685   */\n    tag_96:\n        /* \"#utility.yul\":6553:6630   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6550:6551   */\n      0x00\n        /* \"#utility.yul\":6543:6631   */\n      mstore\n        /* \"#utility.yul\":6650:6654   */\n      0x32\n        /* \"#utility.yul\":6647:6648   */\n      0x04\n        /* \"#utility.yul\":6640:6655   */\n      mstore\n        /* \"#utility.yul\":6674:6678   */\n      0x24\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6664:6679   */\n      revert\n        /* \"#utility.yul\":6691:7272   */\n    tag_108:\n        /* \"#utility.yul\":6882:6886   */\n      0x00\n        /* \"#utility.yul\":6920:6923   */\n      0x80\n        /* \"#utility.yul\":6909:6918   */\n      dup3\n        /* \"#utility.yul\":6905:6924   */\n      add\n        /* \"#utility.yul\":6897:6924   */\n      swap1\n      pop\n        /* \"#utility.yul\":6934:7019   */\n      tag_411\n        /* \"#utility.yul\":7016:7017   */\n      0x00\n        /* \"#utility.yul\":7005:7014   */\n      dup4\n        /* \"#utility.yul\":7001:7018   */\n      add\n        /* \"#utility.yul\":6992:6998   */\n      dup8\n        /* \"#utility.yul\":6934:7019   */\n      tag_324\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7029:7101   */\n      tag_412\n        /* \"#utility.yul\":7097:7099   */\n      0x20\n        /* \"#utility.yul\":7086:7095   */\n      dup4\n        /* \"#utility.yul\":7082:7100   */\n      add\n        /* \"#utility.yul\":7073:7079   */\n      dup7\n        /* \"#utility.yul\":7029:7101   */\n      tag_316\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7111:7183   */\n      tag_413\n        /* \"#utility.yul\":7179:7181   */\n      0x40\n        /* \"#utility.yul\":7168:7177   */\n      dup4\n        /* \"#utility.yul\":7164:7182   */\n      add\n        /* \"#utility.yul\":7155:7161   */\n      dup6\n        /* \"#utility.yul\":7111:7183   */\n      tag_316\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7193:7265   */\n      tag_414\n        /* \"#utility.yul\":7261:7263   */\n      0x60\n        /* \"#utility.yul\":7250:7259   */\n      dup4\n        /* \"#utility.yul\":7246:7264   */\n      add\n        /* \"#utility.yul\":7237:7243   */\n      dup5\n        /* \"#utility.yul\":7193:7265   */\n      tag_317\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6691:7272   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7447   */\n    tag_326:\n        /* \"#utility.yul\":7362:7373   */\n      0x00\n        /* \"#utility.yul\":7396:7402   */\n      dup3\n        /* \"#utility.yul\":7391:7394   */\n      dup3\n        /* \"#utility.yul\":7384:7403   */\n      mstore\n        /* \"#utility.yul\":7436:7440   */\n      0x20\n        /* \"#utility.yul\":7431:7434   */\n      dup3\n        /* \"#utility.yul\":7427:7441   */\n      add\n        /* \"#utility.yul\":7412:7441   */\n      swap1\n      pop\n        /* \"#utility.yul\":7278:7447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7453:7622   */\n    tag_327:\n        /* \"#utility.yul\":7593:7614   */\n      0x4f6e6c79206f776e65722063616e2063616c6c00000000000000000000000000\n        /* \"#utility.yul\":7589:7590   */\n      0x00\n        /* \"#utility.yul\":7581:7587   */\n      dup3\n        /* \"#utility.yul\":7577:7591   */\n      add\n        /* \"#utility.yul\":7570:7615   */\n      mstore\n        /* \"#utility.yul\":7453:7622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7628:7994   */\n    tag_328:\n        /* \"#utility.yul\":7770:7773   */\n      0x00\n        /* \"#utility.yul\":7791:7858   */\n      tag_418\n        /* \"#utility.yul\":7855:7857   */\n      0x13\n        /* \"#utility.yul\":7850:7853   */\n      dup4\n        /* \"#utility.yul\":7791:7858   */\n      tag_326\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7784:7858   */\n      swap2\n      pop\n        /* \"#utility.yul\":7867:7960   */\n      tag_419\n        /* \"#utility.yul\":7956:7959   */\n      dup3\n        /* \"#utility.yul\":7867:7960   */\n      tag_327\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7985:7987   */\n      0x20\n        /* \"#utility.yul\":7980:7983   */\n      dup3\n        /* \"#utility.yul\":7976:7988   */\n      add\n        /* \"#utility.yul\":7969:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":7628:7994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8419   */\n    tag_128:\n        /* \"#utility.yul\":8166:8170   */\n      0x00\n        /* \"#utility.yul\":8204:8206   */\n      0x20\n        /* \"#utility.yul\":8193:8202   */\n      dup3\n        /* \"#utility.yul\":8189:8207   */\n      add\n        /* \"#utility.yul\":8181:8207   */\n      swap1\n      pop\n        /* \"#utility.yul\":8253:8262   */\n      dup2\n        /* \"#utility.yul\":8247:8251   */\n      dup2\n        /* \"#utility.yul\":8243:8263   */\n      sub\n        /* \"#utility.yul\":8239:8240   */\n      0x00\n        /* \"#utility.yul\":8228:8237   */\n      dup4\n        /* \"#utility.yul\":8224:8241   */\n      add\n        /* \"#utility.yul\":8217:8264   */\n      mstore\n        /* \"#utility.yul\":8281:8412   */\n      tag_421\n        /* \"#utility.yul\":8407:8411   */\n      dup2\n        /* \"#utility.yul\":8281:8412   */\n      tag_328\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8273:8412   */\n      swap1\n      pop\n        /* \"#utility.yul\":8000:8419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8425:8568   */\n    tag_329:\n        /* \"#utility.yul\":8482:8487   */\n      0x00\n        /* \"#utility.yul\":8513:8519   */\n      dup2\n        /* \"#utility.yul\":8507:8520   */\n      mload\n        /* \"#utility.yul\":8498:8520   */\n      swap1\n      pop\n        /* \"#utility.yul\":8529:8562   */\n      tag_423\n        /* \"#utility.yul\":8556:8561   */\n      dup2\n        /* \"#utility.yul\":8529:8562   */\n      tag_312\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8425:8568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8574:8925   */\n    tag_134:\n        /* \"#utility.yul\":8644:8650   */\n      0x00\n        /* \"#utility.yul\":8693:8695   */\n      0x20\n        /* \"#utility.yul\":8681:8690   */\n      dup3\n        /* \"#utility.yul\":8672:8679   */\n      dup5\n        /* \"#utility.yul\":8668:8691   */\n      sub\n        /* \"#utility.yul\":8664:8696   */\n      slt\n        /* \"#utility.yul\":8661:8780   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":8699:8778   */\n      tag_426\n      tag_305\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8661:8780   */\n    tag_425:\n        /* \"#utility.yul\":8819:8820   */\n      0x00\n        /* \"#utility.yul\":8844:8908   */\n      tag_427\n        /* \"#utility.yul\":8900:8907   */\n      dup5\n        /* \"#utility.yul\":8891:8897   */\n      dup3\n        /* \"#utility.yul\":8880:8889   */\n      dup6\n        /* \"#utility.yul\":8876:8898   */\n      add\n        /* \"#utility.yul\":8844:8908   */\n      tag_329\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8834:8908   */\n      swap2\n      pop\n        /* \"#utility.yul\":8790:8918   */\n      pop\n        /* \"#utility.yul\":8574:8925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8931:9401   */\n    tag_136:\n        /* \"#utility.yul\":9094:9098   */\n      0x00\n        /* \"#utility.yul\":9132:9134   */\n      0x60\n        /* \"#utility.yul\":9121:9130   */\n      dup3\n        /* \"#utility.yul\":9117:9135   */\n      add\n        /* \"#utility.yul\":9109:9135   */\n      swap1\n      pop\n        /* \"#utility.yul\":9145:9230   */\n      tag_429\n        /* \"#utility.yul\":9227:9228   */\n      0x00\n        /* \"#utility.yul\":9216:9225   */\n      dup4\n        /* \"#utility.yul\":9212:9229   */\n      add\n        /* \"#utility.yul\":9203:9209   */\n      dup7\n        /* \"#utility.yul\":9145:9230   */\n      tag_324\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9240:9312   */\n      tag_430\n        /* \"#utility.yul\":9308:9310   */\n      0x20\n        /* \"#utility.yul\":9297:9306   */\n      dup4\n        /* \"#utility.yul\":9293:9311   */\n      add\n        /* \"#utility.yul\":9284:9290   */\n      dup6\n        /* \"#utility.yul\":9240:9312   */\n      tag_316\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9322:9394   */\n      tag_431\n        /* \"#utility.yul\":9390:9392   */\n      0x40\n        /* \"#utility.yul\":9379:9388   */\n      dup4\n        /* \"#utility.yul\":9375:9393   */\n      add\n        /* \"#utility.yul\":9366:9372   */\n      dup5\n        /* \"#utility.yul\":9322:9394   */\n      tag_317\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8931:9401   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9601   */\n    tag_155:\n        /* \"#utility.yul\":9447:9451   */\n      0x00\n        /* \"#utility.yul\":9467:9487   */\n      tag_433\n        /* \"#utility.yul\":9485:9486   */\n      dup3\n        /* \"#utility.yul\":9467:9487   */\n      tag_311\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9462:9487   */\n      swap2\n      pop\n        /* \"#utility.yul\":9501:9521   */\n      tag_434\n        /* \"#utility.yul\":9519:9520   */\n      dup4\n        /* \"#utility.yul\":9501:9521   */\n      tag_311\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9496:9521   */\n      swap3\n      pop\n        /* \"#utility.yul\":9545:9546   */\n      dup3\n        /* \"#utility.yul\":9542:9543   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      sub\n        /* \"#utility.yul\":9530:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9569:9570   */\n      dup2\n        /* \"#utility.yul\":9563:9567   */\n      dup2\n        /* \"#utility.yul\":9560:9571   */\n      gt\n        /* \"#utility.yul\":9557:9594   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9574:9592   */\n      tag_436\n      tag_325\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9557:9594   */\n    tag_435:\n        /* \"#utility.yul\":9407:9601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9607:9778   */\n    tag_175:\n        /* \"#utility.yul\":9646:9649   */\n      0x00\n        /* \"#utility.yul\":9669:9693   */\n      tag_438\n        /* \"#utility.yul\":9687:9692   */\n      dup3\n        /* \"#utility.yul\":9669:9693   */\n      tag_311\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9660:9693   */\n      swap2\n      pop\n        /* \"#utility.yul\":9715:9719   */\n      0x00\n        /* \"#utility.yul\":9708:9713   */\n      dup3\n        /* \"#utility.yul\":9705:9720   */\n      sub\n        /* \"#utility.yul\":9702:9743   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":9723:9741   */\n      tag_440\n      tag_325\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9702:9743   */\n    tag_439:\n        /* \"#utility.yul\":9770:9771   */\n      0x01\n        /* \"#utility.yul\":9763:9768   */\n      dup3\n        /* \"#utility.yul\":9759:9772   */\n      sub\n        /* \"#utility.yul\":9752:9772   */\n      swap1\n      pop\n        /* \"#utility.yul\":9607:9778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220460bf08a877b9e2ca706a669fbf85613faf97b71a7d79083c35d7c5cac5d3ef264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_455": {
									"entryPoint": null,
									"id": 455,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:6",
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DE8 CODESIZE SUB DUP1 PUSH3 0x1DE8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1BE JUMP JUMPDEST CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x1EE JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x188 DUP3 PUSH3 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x19A DUP2 PUSH3 0x17C JUMP JUMPDEST DUP2 EQ PUSH3 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B8 DUP2 PUSH3 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1D6 JUMPI PUSH3 0x1D5 PUSH3 0x159 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1E5 DUP5 DUP3 DUP6 ADD PUSH3 0x1A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1B9E PUSH3 0x24A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x64E ADD MSTORE DUP2 DUP2 PUSH2 0x71C ADD MSTORE PUSH2 0x8DF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x5CA ADD MSTORE DUP2 DUP2 PUSH2 0x612 ADD MSTORE DUP2 DUP2 PUSH2 0x8A3 ADD MSTORE PUSH2 0x922 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x349 ADD MSTORE DUP2 DUP2 PUSH2 0x39D ADD MSTORE PUSH2 0x5EE ADD MSTORE PUSH2 0x1B9E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6215BE77 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB254B80A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB254B80A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xCA628C78 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x2E0 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x6215BE77 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7251E8C2 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x24A756D1 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x2B7E8FAF EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x4D3F3CF6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x5FBE4D1D EQ PUSH2 0x1E2 JUMPI PUSH2 0xD4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD4 JUMPI PUSH2 0xD2 PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x344 PUSH2 0xAFB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F9 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x93B7D3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCAE15051BBB38F81D4D2FB0EEBA04C25EC7FC5E1AC9D89D6D68AF8D3AAB337DC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x47D SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 LT PUSH2 0x4DB JUMPI PUSH2 0x4DA PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9FC4B61 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x717 PUSH2 0x1021 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x6 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x77A JUMPI PUSH2 0x779 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x7B0 JUMPI PUSH2 0x7AF PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1660F99 PUSH32 0x0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0xDAD JUMPI PUSH1 0x4 DUP4 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP5 EQ PUSH2 0xD94 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x2 DUP2 PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC4E JUMPI PUSH2 0xC4D PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xCCC SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC1B JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0xD30 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0xD92 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xD9F SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB36 JUMP JUMPDEST POP PUSH2 0x101C JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH0 DUP1 PUSH1 0x1 DUP1 DUP5 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xDDC JUMPI PUSH2 0xDDB PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x1 DUP2 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xEC2 JUMPI PUSH2 0xEC1 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xF40 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE8F JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0xFA4 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x1006 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1012 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDB3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x102A PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0x12D6 JUMPI PUSH1 0x4 DUP4 PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP5 EQ PUSH2 0x12BD JUMPI PUSH1 0x5 PUSH0 PUSH1 0x6 PUSH1 0x2 DUP5 PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x125E JUMPI PUSH1 0x2 DUP2 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x6 PUSH1 0x1 DUP3 PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1177 JUMPI PUSH2 0x1176 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x11AC JUMPI PUSH2 0x11AB PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x11F5 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1143 JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x1259 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x12BB JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x127C JUMPI PUSH2 0x127B PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x12C8 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x105C JUMP JUMPDEST POP PUSH2 0x1549 JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x6 PUSH1 0x1 DUP5 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x1 DUP2 PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1475 JUMPI PUSH1 0x6 PUSH1 0x1 DUP3 PUSH2 0x13DE SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1424 JUMPI PUSH2 0x1423 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x146D SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13BB JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x14D1 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x1533 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x153F SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12DC JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x15DC JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x158B JUMPI PUSH2 0x158A PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CF JUMPI DUP1 SWAP2 POP PUSH2 0x15DC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1557 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1672 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1665 JUMPI DUP1 SWAP2 POP PUSH2 0x1672 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15ED JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A7 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x169D JUMP JUMPDEST DUP2 EQ PUSH2 0x16C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D2 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EA DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1705 DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175D DUP2 PUSH2 0x1749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1776 PUSH0 DUP4 ADD DUP5 PUSH2 0x1754 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1785 DUP2 PUSH2 0x169D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x179E PUSH0 DUP4 ADD DUP7 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17AB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17B8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E2 DUP5 DUP3 DUP6 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1836 PUSH2 0x1831 PUSH2 0x182C DUP5 PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1847 DUP3 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1858 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1868 DUP2 PUSH2 0x184E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH0 DUP4 ADD DUP5 PUSH2 0x185F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C2 DUP5 DUP3 DUP6 ADD PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FE PUSH0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x193B DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1946 DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x1904 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1977 PUSH0 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1984 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x199E PUSH0 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x19AB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19F2 PUSH0 DUP4 ADD DUP8 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x19FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1A0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1A19 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A66 PUSH1 0x13 DUP4 PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A71 DUP3 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA8 DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH2 0x1AC2 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AEC PUSH0 DUP4 ADD DUP7 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x1AF9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B18 DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B23 DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1904 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND CREATE DUP11 DUP8 PUSH28 0x9E2CA706A669FBF85613FAF97B71A7D79083C35D7C5CAC5D3EF26473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "530:3996:1:-:0;;;936:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;424:10:0;416:5;;:18;;;;;;;;;;;;;;;;;;986:10:1;978:5;;:18;;;;;;;;;;;;;;;;;;1018:10;1006:22;;;;;;;;;;1060:10;1038:33;;;;;;;;;;1102:10;1081:32;;;;;;;;;;936:184;530:3996;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;530:3996:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkETHRankMembership_339": {
									"entryPoint": 5454,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkTokenRankMembership_809": {
									"entryPoint": 5604,
									"id": 809,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_handleRankWhenDepositETH_302": {
									"entryPoint": 2811,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_handleRankWhenDepositToken_772": {
									"entryPoint": 4129,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositETH_47": {
									"entryPoint": 746,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositToken_484": {
									"entryPoint": 1552,
									"id": 484,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getETHBalance_84": {
									"entryPoint": 1411,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getETHTopThreeAccount_105": {
									"entryPoint": 1167,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@getTokenBalance_554": {
									"entryPoint": 1341,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenTopThreeAccount_575": {
									"entryPoint": 1891,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@iERC20Token_412": {
									"entryPoint": 1818,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@iGTT_409": {
									"entryPoint": 1480,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_11": {
									"entryPoint": 1854,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddr_406": {
									"entryPoint": 1516,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensReceived_542": {
									"entryPoint": 838,
									"id": 542,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawETH_72": {
									"entryPoint": 2565,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawToken_504": {
									"entryPoint": 2066,
									"id": 504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20TokenGTT_$394_to_t_address_fromStack": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20TokenGTT_$394__to_t_address__fromStack_reversed": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20TokenGTT_$394_to_t_address": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$888_to_t_address": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 6977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9781:6",
										"nodeType": "YulBlock",
										"src": "0:9781:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1719:48:6",
													"nodeType": "YulBlock",
													"src": "1719:48:6",
													"statements": [
														{
															"nativeSrc": "1729:32:6",
															"nodeType": "YulAssignment",
															"src": "1729:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:6"
																		},
																		"nativeSrc": "1747:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:6"
																},
																"nativeSrc": "1740:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:6",
														"nodeType": "YulTypedName",
														"src": "1701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:6",
														"nodeType": "YulTypedName",
														"src": "1711:7:6",
														"type": ""
													}
												],
												"src": "1677:90:6"
											},
											{
												"body": {
													"nativeSrc": "1832:50:6",
													"nodeType": "YulBlock",
													"src": "1832:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:6"
																		},
																		"nativeSrc": "1854:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:6"
																},
																"nativeSrc": "1842:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:6"
															},
															"nativeSrc": "1842:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:6",
														"nodeType": "YulTypedName",
														"src": "1820:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:6",
														"nodeType": "YulTypedName",
														"src": "1827:3:6",
														"type": ""
													}
												],
												"src": "1773:109:6"
											},
											{
												"body": {
													"nativeSrc": "1980:118:6",
													"nodeType": "YulBlock",
													"src": "1980:118:6",
													"statements": [
														{
															"nativeSrc": "1990:26:6",
															"nodeType": "YulAssignment",
															"src": "1990:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:6"
																},
																"nativeSrc": "1998:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:6"
																},
																"nativeSrc": "2026:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:6"
															},
															"nativeSrc": "2026:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:6",
														"nodeType": "YulTypedName",
														"src": "1952:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:6",
														"nodeType": "YulTypedName",
														"src": "1964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:6",
														"nodeType": "YulTypedName",
														"src": "1975:4:6",
														"type": ""
													}
												],
												"src": "1888:210:6"
											},
											{
												"body": {
													"nativeSrc": "2169:53:6",
													"nodeType": "YulBlock",
													"src": "2169:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2186:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2209:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2209:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2191:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2191:17:6"
																		},
																		"nativeSrc": "2191:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2179:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:6"
																},
																"nativeSrc": "2179:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2179:37:6"
															},
															"nativeSrc": "2179:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2179:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2104:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2157:5:6",
														"nodeType": "YulTypedName",
														"src": "2157:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2164:3:6",
														"nodeType": "YulTypedName",
														"src": "2164:3:6",
														"type": ""
													}
												],
												"src": "2104:118:6"
											},
											{
												"body": {
													"nativeSrc": "2382:288:6",
													"nodeType": "YulBlock",
													"src": "2382:288:6",
													"statements": [
														{
															"nativeSrc": "2392:26:6",
															"nodeType": "YulAssignment",
															"src": "2392:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2404:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2404:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2415:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2400:3:6"
																},
																"nativeSrc": "2400:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2400:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2392:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2392:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2472:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2472:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2485:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2496:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2496:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2481:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:6"
																		},
																		"nativeSrc": "2481:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2428:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2428:43:6"
																},
																"nativeSrc": "2428:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2428:71:6"
															},
															"nativeSrc": "2428:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2428:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2577:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2577:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:6"
																		},
																		"nativeSrc": "2562:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2562:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2509:43:6"
																},
																"nativeSrc": "2509:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2509:72:6"
															},
															"nativeSrc": "2509:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2509:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2635:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2635:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2648:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2648:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2659:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2659:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2644:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:6"
																		},
																		"nativeSrc": "2644:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2644:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2591:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2591:43:6"
																},
																"nativeSrc": "2591:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2591:72:6"
															},
															"nativeSrc": "2591:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2591:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2228:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2338:9:6",
														"nodeType": "YulTypedName",
														"src": "2338:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2350:6:6",
														"nodeType": "YulTypedName",
														"src": "2350:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2358:6:6",
														"nodeType": "YulTypedName",
														"src": "2358:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2366:6:6",
														"nodeType": "YulTypedName",
														"src": "2366:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2377:4:6",
														"nodeType": "YulTypedName",
														"src": "2377:4:6",
														"type": ""
													}
												],
												"src": "2228:442:6"
											},
											{
												"body": {
													"nativeSrc": "2742:263:6",
													"nodeType": "YulBlock",
													"src": "2742:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2788:83:6",
																"nodeType": "YulBlock",
																"src": "2788:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2790:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2790:77:6"
																			},
																			"nativeSrc": "2790:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2790:79:6"
																		},
																		"nativeSrc": "2790:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2790:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2763:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2763:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2772:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2759:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:6"
																		},
																		"nativeSrc": "2759:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2759:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2784:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2784:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2755:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:6"
																},
																"nativeSrc": "2755:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2755:32:6"
															},
															"nativeSrc": "2752:119:6",
															"nodeType": "YulIf",
															"src": "2752:119:6"
														},
														{
															"nativeSrc": "2881:117:6",
															"nodeType": "YulBlock",
															"src": "2881:117:6",
															"statements": [
																{
																	"nativeSrc": "2896:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2896:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2910:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2910:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2900:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2900:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2925:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2925:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2960:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2960:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2971:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2971:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2956:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2956:3:6"
																				},
																				"nativeSrc": "2956:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2956:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2980:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2980:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2935:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2935:20:6"
																		},
																		"nativeSrc": "2935:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2925:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2925:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2676:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2712:9:6",
														"nodeType": "YulTypedName",
														"src": "2712:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2723:7:6",
														"nodeType": "YulTypedName",
														"src": "2723:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2735:6:6",
														"nodeType": "YulTypedName",
														"src": "2735:6:6",
														"type": ""
													}
												],
												"src": "2676:329:6"
											},
											{
												"body": {
													"nativeSrc": "3076:53:6",
													"nodeType": "YulBlock",
													"src": "3076:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3093:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3116:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3116:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3098:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3098:17:6"
																		},
																		"nativeSrc": "3098:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3098:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:6"
																},
																"nativeSrc": "3086:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3086:37:6"
															},
															"nativeSrc": "3086:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3086:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3011:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3064:5:6",
														"nodeType": "YulTypedName",
														"src": "3064:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3071:3:6",
														"nodeType": "YulTypedName",
														"src": "3071:3:6",
														"type": ""
													}
												],
												"src": "3011:118:6"
											},
											{
												"body": {
													"nativeSrc": "3233:124:6",
													"nodeType": "YulBlock",
													"src": "3233:124:6",
													"statements": [
														{
															"nativeSrc": "3243:26:6",
															"nodeType": "YulAssignment",
															"src": "3243:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3255:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3255:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3251:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:6"
																},
																"nativeSrc": "3251:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3251:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3243:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3243:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3323:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3323:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3336:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3336:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3347:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3347:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3332:3:6"
																		},
																		"nativeSrc": "3332:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3279:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3279:43:6"
																},
																"nativeSrc": "3279:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3279:71:6"
															},
															"nativeSrc": "3279:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3279:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3135:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3205:9:6",
														"nodeType": "YulTypedName",
														"src": "3205:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3217:6:6",
														"nodeType": "YulTypedName",
														"src": "3217:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3228:4:6",
														"nodeType": "YulTypedName",
														"src": "3228:4:6",
														"type": ""
													}
												],
												"src": "3135:222:6"
											},
											{
												"body": {
													"nativeSrc": "3395:28:6",
													"nodeType": "YulBlock",
													"src": "3395:28:6",
													"statements": [
														{
															"nativeSrc": "3405:12:6",
															"nodeType": "YulAssignment",
															"src": "3405:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3412:5:6",
																"nodeType": "YulIdentifier",
																"src": "3412:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3405:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3363:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3381:5:6",
														"nodeType": "YulTypedName",
														"src": "3381:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3391:3:6",
														"nodeType": "YulTypedName",
														"src": "3391:3:6",
														"type": ""
													}
												],
												"src": "3363:60:6"
											},
											{
												"body": {
													"nativeSrc": "3489:82:6",
													"nodeType": "YulBlock",
													"src": "3489:82:6",
													"statements": [
														{
															"nativeSrc": "3499:66:6",
															"nodeType": "YulAssignment",
															"src": "3499:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3557:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3557:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3539:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3539:17:6"
																				},
																				"nativeSrc": "3539:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3539:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3530:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3530:8:6"
																		},
																		"nativeSrc": "3530:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3512:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3512:17:6"
																},
																"nativeSrc": "3512:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3512:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3499:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3499:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3429:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3469:5:6",
														"nodeType": "YulTypedName",
														"src": "3469:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3479:9:6",
														"nodeType": "YulTypedName",
														"src": "3479:9:6",
														"type": ""
													}
												],
												"src": "3429:142:6"
											},
											{
												"body": {
													"nativeSrc": "3637:66:6",
													"nodeType": "YulBlock",
													"src": "3637:66:6",
													"statements": [
														{
															"nativeSrc": "3647:50:6",
															"nodeType": "YulAssignment",
															"src": "3647:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3691:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3691:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3660:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3660:30:6"
																},
																"nativeSrc": "3660:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3660:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3647:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3647:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3577:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3617:5:6",
														"nodeType": "YulTypedName",
														"src": "3617:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3627:9:6",
														"nodeType": "YulTypedName",
														"src": "3627:9:6",
														"type": ""
													}
												],
												"src": "3577:126:6"
											},
											{
												"body": {
													"nativeSrc": "3791:66:6",
													"nodeType": "YulBlock",
													"src": "3791:66:6",
													"statements": [
														{
															"nativeSrc": "3801:50:6",
															"nodeType": "YulAssignment",
															"src": "3801:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3845:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3845:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3814:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3814:30:6"
																},
																"nativeSrc": "3814:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3814:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3801:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20TokenGTT_$394_to_t_address",
												"nativeSrc": "3709:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3771:5:6",
														"nodeType": "YulTypedName",
														"src": "3771:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3781:9:6",
														"nodeType": "YulTypedName",
														"src": "3781:9:6",
														"type": ""
													}
												],
												"src": "3709:148:6"
											},
											{
												"body": {
													"nativeSrc": "3950:88:6",
													"nodeType": "YulBlock",
													"src": "3950:88:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3967:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3967:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4025:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4025:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20TokenGTT_$394_to_t_address",
																			"nativeSrc": "3972:52:6",
																			"nodeType": "YulIdentifier",
																			"src": "3972:52:6"
																		},
																		"nativeSrc": "3972:59:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:59:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3960:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3960:6:6"
																},
																"nativeSrc": "3960:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3960:72:6"
															},
															"nativeSrc": "3960:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3960:72:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20TokenGTT_$394_to_t_address_fromStack",
												"nativeSrc": "3863:175:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3938:5:6",
														"nodeType": "YulTypedName",
														"src": "3938:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3945:3:6",
														"nodeType": "YulTypedName",
														"src": "3945:3:6",
														"type": ""
													}
												],
												"src": "3863:175:6"
											},
											{
												"body": {
													"nativeSrc": "4164:146:6",
													"nodeType": "YulBlock",
													"src": "4164:146:6",
													"statements": [
														{
															"nativeSrc": "4174:26:6",
															"nodeType": "YulAssignment",
															"src": "4174:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4186:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4186:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4197:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4197:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4182:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4182:3:6"
																},
																"nativeSrc": "4182:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4182:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4174:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4174:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4300:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4285:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:6"
																		},
																		"nativeSrc": "4285:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20TokenGTT_$394_to_t_address_fromStack",
																	"nativeSrc": "4210:65:6",
																	"nodeType": "YulIdentifier",
																	"src": "4210:65:6"
																},
																"nativeSrc": "4210:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4210:93:6"
															},
															"nativeSrc": "4210:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4210:93:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20TokenGTT_$394__to_t_address__fromStack_reversed",
												"nativeSrc": "4044:266:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4136:9:6",
														"nodeType": "YulTypedName",
														"src": "4136:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4148:6:6",
														"nodeType": "YulTypedName",
														"src": "4148:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4159:4:6",
														"nodeType": "YulTypedName",
														"src": "4159:4:6",
														"type": ""
													}
												],
												"src": "4044:266:6"
											},
											{
												"body": {
													"nativeSrc": "4414:124:6",
													"nodeType": "YulBlock",
													"src": "4414:124:6",
													"statements": [
														{
															"nativeSrc": "4424:26:6",
															"nodeType": "YulAssignment",
															"src": "4424:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4436:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4436:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4447:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4447:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:6"
																},
																"nativeSrc": "4432:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4432:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4424:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4424:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4504:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4517:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4528:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4528:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:6"
																		},
																		"nativeSrc": "4513:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4460:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4460:43:6"
																},
																"nativeSrc": "4460:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4460:71:6"
															},
															"nativeSrc": "4460:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4460:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4316:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4386:9:6",
														"nodeType": "YulTypedName",
														"src": "4386:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4398:6:6",
														"nodeType": "YulTypedName",
														"src": "4398:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4409:4:6",
														"nodeType": "YulTypedName",
														"src": "4409:4:6",
														"type": ""
													}
												],
												"src": "4316:222:6"
											},
											{
												"body": {
													"nativeSrc": "4610:263:6",
													"nodeType": "YulBlock",
													"src": "4610:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4656:83:6",
																"nodeType": "YulBlock",
																"src": "4656:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4658:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4658:77:6"
																			},
																			"nativeSrc": "4658:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4658:79:6"
																		},
																		"nativeSrc": "4658:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4658:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4631:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4631:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4640:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4640:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4627:3:6"
																		},
																		"nativeSrc": "4627:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4627:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4652:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4623:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:6"
																},
																"nativeSrc": "4623:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4623:32:6"
															},
															"nativeSrc": "4620:119:6",
															"nodeType": "YulIf",
															"src": "4620:119:6"
														},
														{
															"nativeSrc": "4749:117:6",
															"nodeType": "YulBlock",
															"src": "4749:117:6",
															"statements": [
																{
																	"nativeSrc": "4764:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4764:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4778:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4778:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4768:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4768:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4793:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4793:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4828:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4828:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4839:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4839:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4824:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4824:3:6"
																				},
																				"nativeSrc": "4824:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4848:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4848:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4803:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4803:20:6"
																		},
																		"nativeSrc": "4803:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4793:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4793:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4544:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4580:9:6",
														"nodeType": "YulTypedName",
														"src": "4580:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4591:7:6",
														"nodeType": "YulTypedName",
														"src": "4591:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4603:6:6",
														"nodeType": "YulTypedName",
														"src": "4603:6:6",
														"type": ""
													}
												],
												"src": "4544:329:6"
											},
											{
												"body": {
													"nativeSrc": "4953:66:6",
													"nodeType": "YulBlock",
													"src": "4953:66:6",
													"statements": [
														{
															"nativeSrc": "4963:50:6",
															"nodeType": "YulAssignment",
															"src": "4963:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5007:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5007:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4976:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4976:30:6"
																},
																"nativeSrc": "4976:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4976:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4963:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$888_to_t_address",
												"nativeSrc": "4879:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4933:5:6",
														"nodeType": "YulTypedName",
														"src": "4933:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4943:9:6",
														"nodeType": "YulTypedName",
														"src": "4943:9:6",
														"type": ""
													}
												],
												"src": "4879:140:6"
											},
											{
												"body": {
													"nativeSrc": "5104:80:6",
													"nodeType": "YulBlock",
													"src": "5104:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5121:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5121:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5171:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5171:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$888_to_t_address",
																			"nativeSrc": "5126:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "5126:44:6"
																		},
																		"nativeSrc": "5126:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5126:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5114:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5114:6:6"
																},
																"nativeSrc": "5114:64:6",
																"nodeType": "YulFunctionCall",
																"src": "5114:64:6"
															},
															"nativeSrc": "5114:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "5114:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack",
												"nativeSrc": "5025:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5092:5:6",
														"nodeType": "YulTypedName",
														"src": "5092:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5099:3:6",
														"nodeType": "YulTypedName",
														"src": "5099:3:6",
														"type": ""
													}
												],
												"src": "5025:159:6"
											},
											{
												"body": {
													"nativeSrc": "5302:138:6",
													"nodeType": "YulBlock",
													"src": "5302:138:6",
													"statements": [
														{
															"nativeSrc": "5312:26:6",
															"nodeType": "YulAssignment",
															"src": "5312:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5320:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:6"
																},
																"nativeSrc": "5320:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5320:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5312:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5406:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5419:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5430:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:6"
																		},
																		"nativeSrc": "5415:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack",
																	"nativeSrc": "5348:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "5348:57:6"
																},
																"nativeSrc": "5348:85:6",
																"nodeType": "YulFunctionCall",
																"src": "5348:85:6"
															},
															"nativeSrc": "5348:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "5348:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed",
												"nativeSrc": "5190:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5274:9:6",
														"nodeType": "YulTypedName",
														"src": "5274:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5286:6:6",
														"nodeType": "YulTypedName",
														"src": "5286:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5297:4:6",
														"nodeType": "YulTypedName",
														"src": "5297:4:6",
														"type": ""
													}
												],
												"src": "5190:250:6"
											},
											{
												"body": {
													"nativeSrc": "5474:152:6",
													"nodeType": "YulBlock",
													"src": "5474:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5491:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5491:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5494:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5494:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5484:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5484:6:6"
																},
																"nativeSrc": "5484:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5484:88:6"
															},
															"nativeSrc": "5484:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5484:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5588:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5588:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5591:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5581:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5581:6:6"
																},
																"nativeSrc": "5581:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5581:15:6"
															},
															"nativeSrc": "5581:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5581:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5612:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5615:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5615:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:6"
																},
																"nativeSrc": "5605:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5605:15:6"
															},
															"nativeSrc": "5605:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5605:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5446:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5446:180:6"
											},
											{
												"body": {
													"nativeSrc": "5676:147:6",
													"nodeType": "YulBlock",
													"src": "5676:147:6",
													"statements": [
														{
															"nativeSrc": "5686:25:6",
															"nodeType": "YulAssignment",
															"src": "5686:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5709:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5709:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5691:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5691:17:6"
																},
																"nativeSrc": "5691:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5691:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5686:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5686:1:6"
																}
															]
														},
														{
															"nativeSrc": "5720:25:6",
															"nodeType": "YulAssignment",
															"src": "5720:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5743:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5743:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5725:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5725:17:6"
																},
																"nativeSrc": "5725:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5725:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5720:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:1:6"
																}
															]
														},
														{
															"nativeSrc": "5754:16:6",
															"nodeType": "YulAssignment",
															"src": "5754:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5765:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5765:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5768:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5768:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5761:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5761:3:6"
																},
																"nativeSrc": "5761:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5761:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5754:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5754:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5794:22:6",
																"nodeType": "YulBlock",
																"src": "5794:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5796:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5796:16:6"
																			},
																			"nativeSrc": "5796:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5796:18:6"
																		},
																		"nativeSrc": "5796:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5786:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5786:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5789:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5789:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5783:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5783:2:6"
																},
																"nativeSrc": "5783:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5783:10:6"
															},
															"nativeSrc": "5780:36:6",
															"nodeType": "YulIf",
															"src": "5780:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5632:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5663:1:6",
														"nodeType": "YulTypedName",
														"src": "5663:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5666:1:6",
														"nodeType": "YulTypedName",
														"src": "5666:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5672:3:6",
														"nodeType": "YulTypedName",
														"src": "5672:3:6",
														"type": ""
													}
												],
												"src": "5632:191:6"
											},
											{
												"body": {
													"nativeSrc": "5955:206:6",
													"nodeType": "YulBlock",
													"src": "5955:206:6",
													"statements": [
														{
															"nativeSrc": "5965:26:6",
															"nodeType": "YulAssignment",
															"src": "5965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5977:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5977:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5988:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:6"
																},
																"nativeSrc": "5973:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5965:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5965:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6045:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6045:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6058:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6069:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6069:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6054:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:6"
																		},
																		"nativeSrc": "6054:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6054:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6001:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6001:43:6"
																},
																"nativeSrc": "6001:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6001:71:6"
															},
															"nativeSrc": "6001:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6001:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6126:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6126:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6139:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6139:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6150:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6150:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6135:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6135:3:6"
																		},
																		"nativeSrc": "6135:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6135:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6082:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6082:43:6"
																},
																"nativeSrc": "6082:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6082:72:6"
															},
															"nativeSrc": "6082:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6082:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5829:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5919:9:6",
														"nodeType": "YulTypedName",
														"src": "5919:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5931:6:6",
														"nodeType": "YulTypedName",
														"src": "5931:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5939:6:6",
														"nodeType": "YulTypedName",
														"src": "5939:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5950:4:6",
														"nodeType": "YulTypedName",
														"src": "5950:4:6",
														"type": ""
													}
												],
												"src": "5829:332:6"
											},
											{
												"body": {
													"nativeSrc": "6293:206:6",
													"nodeType": "YulBlock",
													"src": "6293:206:6",
													"statements": [
														{
															"nativeSrc": "6303:26:6",
															"nodeType": "YulAssignment",
															"src": "6303:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6315:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6315:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6326:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6326:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6311:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6311:3:6"
																},
																"nativeSrc": "6311:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6311:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6303:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6303:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6383:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6396:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6396:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6407:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6407:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6392:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:6"
																		},
																		"nativeSrc": "6392:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6339:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6339:43:6"
																},
																"nativeSrc": "6339:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6339:71:6"
															},
															"nativeSrc": "6339:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6339:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6464:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6464:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:6"
																		},
																		"nativeSrc": "6473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6420:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6420:43:6"
																},
																"nativeSrc": "6420:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6420:72:6"
															},
															"nativeSrc": "6420:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6420:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6167:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6257:9:6",
														"nodeType": "YulTypedName",
														"src": "6257:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6269:6:6",
														"nodeType": "YulTypedName",
														"src": "6269:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6277:6:6",
														"nodeType": "YulTypedName",
														"src": "6277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6288:4:6",
														"nodeType": "YulTypedName",
														"src": "6288:4:6",
														"type": ""
													}
												],
												"src": "6167:332:6"
											},
											{
												"body": {
													"nativeSrc": "6533:152:6",
													"nodeType": "YulBlock",
													"src": "6533:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6550:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6550:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6553:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6553:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6543:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6543:6:6"
																},
																"nativeSrc": "6543:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6543:88:6"
															},
															"nativeSrc": "6543:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6543:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6647:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6647:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6650:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6650:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6640:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:6"
																},
																"nativeSrc": "6640:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6640:15:6"
															},
															"nativeSrc": "6640:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6640:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6671:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6671:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6674:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6674:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6664:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:6"
																},
																"nativeSrc": "6664:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6664:15:6"
															},
															"nativeSrc": "6664:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6664:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6505:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6505:180:6"
											},
											{
												"body": {
													"nativeSrc": "6887:385:6",
													"nodeType": "YulBlock",
													"src": "6887:385:6",
													"statements": [
														{
															"nativeSrc": "6897:27:6",
															"nodeType": "YulAssignment",
															"src": "6897:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6909:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6909:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6920:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6920:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:6"
																},
																"nativeSrc": "6905:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6905:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6897:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6897:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6992:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6992:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7005:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7005:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7016:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7016:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:6"
																		},
																		"nativeSrc": "7001:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack",
																	"nativeSrc": "6934:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6934:57:6"
																},
																"nativeSrc": "6934:85:6",
																"nodeType": "YulFunctionCall",
																"src": "6934:85:6"
															},
															"nativeSrc": "6934:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "6934:85:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7073:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7073:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7086:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7086:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7097:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7097:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7082:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7082:3:6"
																		},
																		"nativeSrc": "7082:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7082:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7029:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7029:43:6"
																},
																"nativeSrc": "7029:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7029:72:6"
															},
															"nativeSrc": "7029:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7029:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7155:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7155:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7168:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7179:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7179:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:6"
																		},
																		"nativeSrc": "7164:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7111:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7111:43:6"
																},
																"nativeSrc": "7111:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7111:72:6"
															},
															"nativeSrc": "7111:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7111:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7237:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7237:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7250:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7250:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7261:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7261:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7246:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:6"
																		},
																		"nativeSrc": "7246:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7246:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7193:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7193:43:6"
																},
																"nativeSrc": "7193:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7193:72:6"
															},
															"nativeSrc": "7193:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7193:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6691:581:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6835:9:6",
														"nodeType": "YulTypedName",
														"src": "6835:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6847:6:6",
														"nodeType": "YulTypedName",
														"src": "6847:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6855:6:6",
														"nodeType": "YulTypedName",
														"src": "6855:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6863:6:6",
														"nodeType": "YulTypedName",
														"src": "6863:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6871:6:6",
														"nodeType": "YulTypedName",
														"src": "6871:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6882:4:6",
														"nodeType": "YulTypedName",
														"src": "6882:4:6",
														"type": ""
													}
												],
												"src": "6691:581:6"
											},
											{
												"body": {
													"nativeSrc": "7374:73:6",
													"nodeType": "YulBlock",
													"src": "7374:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7391:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7391:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7396:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7396:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7384:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:6"
																},
																"nativeSrc": "7384:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7384:19:6"
															},
															"nativeSrc": "7384:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "7384:19:6"
														},
														{
															"nativeSrc": "7412:29:6",
															"nodeType": "YulAssignment",
															"src": "7412:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7431:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7431:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7436:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7436:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7427:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:6"
																},
																"nativeSrc": "7427:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7427:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7412:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7412:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7278:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7346:3:6",
														"nodeType": "YulTypedName",
														"src": "7346:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7351:6:6",
														"nodeType": "YulTypedName",
														"src": "7351:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7362:11:6",
														"nodeType": "YulTypedName",
														"src": "7362:11:6",
														"type": ""
													}
												],
												"src": "7278:169:6"
											},
											{
												"body": {
													"nativeSrc": "7559:63:6",
													"nodeType": "YulBlock",
													"src": "7559:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7581:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7581:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7589:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7589:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7577:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:6"
																		},
																		"nativeSrc": "7577:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7577:14:6"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c",
																		"kind": "string",
																		"nativeSrc": "7593:21:6",
																		"nodeType": "YulLiteral",
																		"src": "7593:21:6",
																		"type": "",
																		"value": "Only owner can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7570:6:6"
																},
																"nativeSrc": "7570:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7570:45:6"
															},
															"nativeSrc": "7570:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "7570:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
												"nativeSrc": "7453:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7551:6:6",
														"nodeType": "YulTypedName",
														"src": "7551:6:6",
														"type": ""
													}
												],
												"src": "7453:169:6"
											},
											{
												"body": {
													"nativeSrc": "7774:220:6",
													"nodeType": "YulBlock",
													"src": "7774:220:6",
													"statements": [
														{
															"nativeSrc": "7784:74:6",
															"nodeType": "YulAssignment",
															"src": "7784:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7850:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7850:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7855:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7855:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7791:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7791:58:6"
																},
																"nativeSrc": "7791:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7791:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7784:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7956:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7956:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
																	"nativeSrc": "7867:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7867:88:6"
																},
																"nativeSrc": "7867:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7867:93:6"
															},
															"nativeSrc": "7867:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7867:93:6"
														},
														{
															"nativeSrc": "7969:19:6",
															"nodeType": "YulAssignment",
															"src": "7969:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7980:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7980:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7985:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7985:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7976:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7976:3:6"
																},
																"nativeSrc": "7976:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7976:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7969:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7628:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7762:3:6",
														"nodeType": "YulTypedName",
														"src": "7762:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7770:3:6",
														"nodeType": "YulTypedName",
														"src": "7770:3:6",
														"type": ""
													}
												],
												"src": "7628:366:6"
											},
											{
												"body": {
													"nativeSrc": "8171:248:6",
													"nodeType": "YulBlock",
													"src": "8171:248:6",
													"statements": [
														{
															"nativeSrc": "8181:26:6",
															"nodeType": "YulAssignment",
															"src": "8181:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8193:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8193:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8189:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:6"
																},
																"nativeSrc": "8189:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8189:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8181:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8181:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8228:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8228:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8239:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8239:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:6"
																		},
																		"nativeSrc": "8224:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8247:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8247:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8253:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8253:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8243:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8243:3:6"
																		},
																		"nativeSrc": "8243:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8243:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:6"
																},
																"nativeSrc": "8217:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8217:47:6"
															},
															"nativeSrc": "8217:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8217:47:6"
														},
														{
															"nativeSrc": "8273:139:6",
															"nodeType": "YulAssignment",
															"src": "8273:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8407:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8407:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8281:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8281:124:6"
																},
																"nativeSrc": "8281:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8281:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8273:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8273:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8000:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8151:9:6",
														"nodeType": "YulTypedName",
														"src": "8151:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8166:4:6",
														"nodeType": "YulTypedName",
														"src": "8166:4:6",
														"type": ""
													}
												],
												"src": "8000:419:6"
											},
											{
												"body": {
													"nativeSrc": "8488:80:6",
													"nodeType": "YulBlock",
													"src": "8488:80:6",
													"statements": [
														{
															"nativeSrc": "8498:22:6",
															"nodeType": "YulAssignment",
															"src": "8498:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8513:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8513:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8507:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8507:5:6"
																},
																"nativeSrc": "8507:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8507:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8498:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8498:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8556:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8556:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8529:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "8529:26:6"
																},
																"nativeSrc": "8529:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8529:33:6"
															},
															"nativeSrc": "8529:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8529:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8425:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8466:6:6",
														"nodeType": "YulTypedName",
														"src": "8466:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8474:3:6",
														"nodeType": "YulTypedName",
														"src": "8474:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8482:5:6",
														"nodeType": "YulTypedName",
														"src": "8482:5:6",
														"type": ""
													}
												],
												"src": "8425:143:6"
											},
											{
												"body": {
													"nativeSrc": "8651:274:6",
													"nodeType": "YulBlock",
													"src": "8651:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8697:83:6",
																"nodeType": "YulBlock",
																"src": "8697:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8699:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8699:77:6"
																			},
																			"nativeSrc": "8699:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8699:79:6"
																		},
																		"nativeSrc": "8699:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8699:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8672:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8672:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8681:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8668:3:6"
																		},
																		"nativeSrc": "8668:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8668:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8693:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:6"
																},
																"nativeSrc": "8664:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8664:32:6"
															},
															"nativeSrc": "8661:119:6",
															"nodeType": "YulIf",
															"src": "8661:119:6"
														},
														{
															"nativeSrc": "8790:128:6",
															"nodeType": "YulBlock",
															"src": "8790:128:6",
															"statements": [
																{
																	"nativeSrc": "8805:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8805:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8819:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8819:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8809:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8809:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8834:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8834:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8880:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8880:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8891:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8891:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8876:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8876:3:6"
																				},
																				"nativeSrc": "8876:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8876:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8900:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8900:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8844:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8844:31:6"
																		},
																		"nativeSrc": "8844:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8844:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8834:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8834:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8574:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8621:9:6",
														"nodeType": "YulTypedName",
														"src": "8621:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8632:7:6",
														"nodeType": "YulTypedName",
														"src": "8632:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8644:6:6",
														"nodeType": "YulTypedName",
														"src": "8644:6:6",
														"type": ""
													}
												],
												"src": "8574:351:6"
											},
											{
												"body": {
													"nativeSrc": "9099:302:6",
													"nodeType": "YulBlock",
													"src": "9099:302:6",
													"statements": [
														{
															"nativeSrc": "9109:26:6",
															"nodeType": "YulAssignment",
															"src": "9109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9121:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9121:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9132:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9132:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9117:3:6"
																},
																"nativeSrc": "9117:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9203:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9216:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9227:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9227:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:6"
																		},
																		"nativeSrc": "9212:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack",
																	"nativeSrc": "9145:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "9145:57:6"
																},
																"nativeSrc": "9145:85:6",
																"nodeType": "YulFunctionCall",
																"src": "9145:85:6"
															},
															"nativeSrc": "9145:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "9145:85:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9284:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9284:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9297:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9297:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9308:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9308:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9293:3:6"
																		},
																		"nativeSrc": "9293:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9293:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9240:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9240:43:6"
																},
																"nativeSrc": "9240:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9240:72:6"
															},
															"nativeSrc": "9240:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9240:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9366:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9366:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9379:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9379:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9390:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9390:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9375:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:6"
																		},
																		"nativeSrc": "9375:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9375:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9322:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9322:43:6"
																},
																"nativeSrc": "9322:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9322:72:6"
															},
															"nativeSrc": "9322:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9322:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8931:470:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9055:9:6",
														"nodeType": "YulTypedName",
														"src": "9055:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9067:6:6",
														"nodeType": "YulTypedName",
														"src": "9067:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9075:6:6",
														"nodeType": "YulTypedName",
														"src": "9075:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9083:6:6",
														"nodeType": "YulTypedName",
														"src": "9083:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9094:4:6",
														"nodeType": "YulTypedName",
														"src": "9094:4:6",
														"type": ""
													}
												],
												"src": "8931:470:6"
											},
											{
												"body": {
													"nativeSrc": "9452:149:6",
													"nodeType": "YulBlock",
													"src": "9452:149:6",
													"statements": [
														{
															"nativeSrc": "9462:25:6",
															"nodeType": "YulAssignment",
															"src": "9462:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9485:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9485:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9467:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9467:17:6"
																},
																"nativeSrc": "9467:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9467:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9462:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9462:1:6"
																}
															]
														},
														{
															"nativeSrc": "9496:25:6",
															"nodeType": "YulAssignment",
															"src": "9496:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9519:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9519:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9501:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9501:17:6"
																},
																"nativeSrc": "9501:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9501:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9496:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9496:1:6"
																}
															]
														},
														{
															"nativeSrc": "9530:17:6",
															"nodeType": "YulAssignment",
															"src": "9530:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9542:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9542:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9545:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9545:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9538:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9538:3:6"
																},
																"nativeSrc": "9538:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9538:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9530:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9530:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9572:22:6",
																"nodeType": "YulBlock",
																"src": "9572:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9574:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9574:16:6"
																			},
																			"nativeSrc": "9574:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9574:18:6"
																		},
																		"nativeSrc": "9574:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9574:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9563:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9563:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9569:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9569:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9560:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9560:2:6"
																},
																"nativeSrc": "9560:11:6",
																"nodeType": "YulFunctionCall",
																"src": "9560:11:6"
															},
															"nativeSrc": "9557:37:6",
															"nodeType": "YulIf",
															"src": "9557:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9407:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9438:1:6",
														"nodeType": "YulTypedName",
														"src": "9438:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9441:1:6",
														"nodeType": "YulTypedName",
														"src": "9441:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9447:4:6",
														"nodeType": "YulTypedName",
														"src": "9447:4:6",
														"type": ""
													}
												],
												"src": "9407:194:6"
											},
											{
												"body": {
													"nativeSrc": "9650:128:6",
													"nodeType": "YulBlock",
													"src": "9650:128:6",
													"statements": [
														{
															"nativeSrc": "9660:33:6",
															"nodeType": "YulAssignment",
															"src": "9660:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9687:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9687:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9669:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9669:17:6"
																},
																"nativeSrc": "9669:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9669:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9660:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9660:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9721:22:6",
																"nodeType": "YulBlock",
																"src": "9721:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9723:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9723:16:6"
																			},
																			"nativeSrc": "9723:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9723:18:6"
																		},
																		"nativeSrc": "9723:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9723:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9708:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9708:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9715:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9715:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9705:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9705:2:6"
																},
																"nativeSrc": "9705:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9705:15:6"
															},
															"nativeSrc": "9702:41:6",
															"nodeType": "YulIf",
															"src": "9702:41:6"
														},
														{
															"nativeSrc": "9752:20:6",
															"nodeType": "YulAssignment",
															"src": "9752:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9763:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9763:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9770:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9770:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9759:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9759:3:6"
																},
																"nativeSrc": "9759:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9759:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9752:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9752:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "9607:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9636:5:6",
														"nodeType": "YulTypedName",
														"src": "9636:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9646:3:6",
														"nodeType": "YulTypedName",
														"src": "9646:3:6",
														"type": ""
													}
												],
												"src": "9607:171:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20TokenGTT_$394_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20TokenGTT_$394_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20TokenGTT_$394_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20TokenGTT_$394__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20TokenGTT_$394_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$888_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$888_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$888__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$888_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_IERC20_$888_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"406": [
									{
										"length": 32,
										"start": 841
									},
									{
										"length": 32,
										"start": 925
									},
									{
										"length": 32,
										"start": 1518
									}
								],
								"409": [
									{
										"length": 32,
										"start": 1482
									},
									{
										"length": 32,
										"start": 1554
									},
									{
										"length": 32,
										"start": 2211
									},
									{
										"length": 32,
										"start": 2338
									}
								],
								"412": [
									{
										"length": 32,
										"start": 1614
									},
									{
										"length": 32,
										"start": 1820
									},
									{
										"length": 32,
										"start": 2271
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c5575f3560e01c80636215be771161007e578063b254b80a11610058578063b254b80a14610288578063ca628c78146102b4578063e086e5ec146102ca578063f6326fb3146102e0576100d4565b80636215be771461020c5780637251e8c2146102345780638da5cb5b1461025e576100d4565b806324a756d1146100d85780632b7e8faf146101145780633aecd0e3146101405780633bb66a7b1461017c5780634d3f3cf6146101b85780635fbe4d1d146101e2576100d4565b366100d4576100d26102ea565b005b5f80fd5b3480156100e3575f80fd5b506100fe60048036038101906100f9919061170b565b610346565b60405161010b9190611763565b60405180910390f35b34801561011f575f80fd5b5061012861048f565b6040516101379392919061178b565b60405180910390f35b34801561014b575f80fd5b50610166600480360381019061016191906117c0565b61053d565b60405161017391906117fa565b60405180910390f35b348015610187575f80fd5b506101a2600480360381019061019d91906117c0565b610583565b6040516101af91906117fa565b60405180910390f35b3480156101c3575f80fd5b506101cc6105c8565b6040516101d9919061186e565b60405180910390f35b3480156101ed575f80fd5b506101f66105ec565b6040516102039190611887565b60405180910390f35b348015610217575f80fd5b50610232600480360381019061022d91906118a0565b610610565b005b34801561023f575f80fd5b5061024861071a565b60405161025591906118eb565b60405180910390f35b348015610269575f80fd5b5061027261073e565b60405161027f9190611887565b60405180910390f35b348015610293575f80fd5b5061029c610763565b6040516102ab9392919061178b565b60405180910390f35b3480156102bf575f80fd5b506102c8610812565b005b3480156102d5575f80fd5b506102de610a05565b005b6102e86102ea565b005b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103359190611931565b92505081905550610344610afb565b565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f957337f00000000000000000000000000000000000000000000000000000000000000006040517f093b7d340000000000000000000000000000000000000000000000000000000081526004016103f0929190611964565b60405180910390fd5b8160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104459190611931565b925050819055507fcae15051bbb38f81d4d2fb0eeba04c25ec7fc5e1ac9d89d6d68af8d3aab337dc838360405161047d92919061198b565b60405180910390a16001905092915050565b5f805f60015f600381106104a6576104a56119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600180600381106104db576104da6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600260038110610511576105106119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d9fc4b617f00000000000000000000000000000000000000000000000000000000000000003330856040518563ffffffff1660e01b815260040161068f94939291906119df565b5f604051808303815f87803b1580156106a6575f80fd5b505af11580156106b8573d5f803e3d5ffd5b505050508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107089190611931565b92505081905550610717611021565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f60065f6003811061077a576107796119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066001600381106107b0576107af6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660066002600381106107e6576107e56119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890611a7c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d1660f997f000000000000000000000000000000000000000000000000000000000000000060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109799190611887565b602060405180830381865afa158015610994573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b89190611aae565b6040518463ffffffff1660e01b81526004016109d693929190611ad9565b5f604051808303815f87803b1580156109ed575f80fd5b505af11580156109ff573d5f803e3d5ffd5b50505050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611a7c565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610af8573d5f803e3d5ffd5b50565b5f610b0461154e565b90505f8061030990506103e78314610dad57600483610b239190611931565b91505f600383610b339190611b0e565b90505b6001811115610da7575f8414610d94575f806001600284610b579190611b0e565b60038110610b6857610b676119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541115610d3557600281610c139190611b0e565b91505f600290505b600282610c289190611b0e565b811115610cd45760018082610c3d9190611b0e565b60038110610c4e57610c4d6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018260038110610c8357610c826119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610ccc90611b41565b915050610c1b565b505f8203610d30573360018360038110610cf157610cf06119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610d93565b6103098214610d92573360018360038110610d5357610d526119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b8080610d9f90611b41565b915050610b36565b5061101c565b5f600390505b5f81111561101a575f8060018084610dcb9190611b0e565b60038110610ddc57610ddb6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20545f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541115610fa957600181610e879190611b0e565b91505f600290505b600182610e9c9190611b0e565b811115610f485760018082610eb19190611b0e565b60038110610ec257610ec16119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018260038110610ef757610ef66119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610f4090611b41565b915050610e8f565b505f8203610fa4573360018360038110610f6557610f646119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b611007565b6103098214611006573360018360038110610fc757610fc66119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b808061101290611b41565b915050610db3565b505b505050565b5f61102a6115e4565b90505f8061030990506103e783146112d6576004836110499190611931565b91505f6003836110599190611b0e565b90505b60018111156112d0575f84146112bd5760055f600660028461107e9190611b0e565b6003811061108f5761108e6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561125e5760028161113b9190611b0e565b91505f600290505b6002826111509190611b0e565b8111156111fd5760066001826111669190611b0e565b60038110611177576111766119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600682600381106111ac576111ab6119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806111f590611b41565b915050611143565b505f820361125957336006836003811061121a576112196119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6112bc565b61030982146112bb57336006836003811061127c5761127b6119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b80806112c890611b41565b91505061105c565b50611549565b5f600390505b5f8111156115475760055f60066001846112f69190611b0e565b60038110611307576113066119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411156114d6576001816113b39190611b0e565b91505f600290505b6001826113c89190611b0e565b8111156114755760066001826113de9190611b0e565b600381106113ef576113ee6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660068260038110611424576114236119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061146d90611b41565b9150506113bb565b505f82036114d1573360068360038110611492576114916119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b611534565b61030982146115335733600683600381106114f4576114f36119b2565b5b015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b808061153f90611b41565b9150506112dc565b505b505050565b5f806103e790505f5b60038110156115dc573373ffffffffffffffffffffffffffffffffffffffff166001826003811061158b5761158a6119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115cf578091506115dc565b8080600101915050611557565b508091505090565b5f806103e790505f5b6003811015611672573373ffffffffffffffffffffffffffffffffffffffff1660068260038110611621576116206119b2565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361166557809150611672565b80806001019150506115ed565b508091505090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116a78261167e565b9050919050565b6116b78161169d565b81146116c1575f80fd5b50565b5f813590506116d2816116ae565b92915050565b5f819050919050565b6116ea816116d8565b81146116f4575f80fd5b50565b5f81359050611705816116e1565b92915050565b5f80604083850312156117215761172061167a565b5b5f61172e858286016116c4565b925050602061173f858286016116f7565b9150509250929050565b5f8115159050919050565b61175d81611749565b82525050565b5f6020820190506117765f830184611754565b92915050565b6117858161169d565b82525050565b5f60608201905061179e5f83018661177c565b6117ab602083018561177c565b6117b8604083018461177c565b949350505050565b5f602082840312156117d5576117d461167a565b5b5f6117e2848285016116c4565b91505092915050565b6117f4816116d8565b82525050565b5f60208201905061180d5f8301846117eb565b92915050565b5f819050919050565b5f61183661183161182c8461167e565b611813565b61167e565b9050919050565b5f6118478261181c565b9050919050565b5f6118588261183d565b9050919050565b6118688161184e565b82525050565b5f6020820190506118815f83018461185f565b92915050565b5f60208201905061189a5f83018461177c565b92915050565b5f602082840312156118b5576118b461167a565b5b5f6118c2848285016116f7565b91505092915050565b5f6118d58261183d565b9050919050565b6118e5816118cb565b82525050565b5f6020820190506118fe5f8301846118dc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61193b826116d8565b9150611946836116d8565b925082820190508082111561195e5761195d611904565b5b92915050565b5f6040820190506119775f83018561177c565b611984602083018461177c565b9392505050565b5f60408201905061199e5f83018561177c565b6119ab60208301846117eb565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6080820190506119f25f8301876118dc565b6119ff602083018661177c565b611a0c604083018561177c565b611a1960608301846117eb565b95945050505050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c000000000000000000000000005f82015250565b5f611a66601383611a22565b9150611a7182611a32565b602082019050919050565b5f6020820190508181035f830152611a9381611a5a565b9050919050565b5f81519050611aa8816116e1565b92915050565b5f60208284031215611ac357611ac261167a565b5b5f611ad084828501611a9a565b91505092915050565b5f606082019050611aec5f8301866118dc565b611af9602083018561177c565b611b0660408301846117eb565b949350505050565b5f611b18826116d8565b9150611b23836116d8565b9250828203905081811115611b3b57611b3a611904565b5b92915050565b5f611b4b826116d8565b91505f8203611b5d57611b5c611904565b5b60018203905091905056fea2646970667358221220460bf08a877b9e2ca706a669fbf85613faf97b71a7d79083c35d7c5cac5d3ef264736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6215BE77 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB254B80A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB254B80A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xCA628C78 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x2E0 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x6215BE77 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7251E8C2 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x24A756D1 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x2B7E8FAF EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x3AECD0E3 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x4D3F3CF6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x5FBE4D1D EQ PUSH2 0x1E2 JUMPI PUSH2 0xD4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD4 JUMPI PUSH2 0xD2 PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x344 PUSH2 0xAFB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F9 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x93B7D3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F0 SWAP3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCAE15051BBB38F81D4D2FB0EEBA04C25EC7FC5E1AC9D89D6D68AF8D3AAB337DC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x47D SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 LT PUSH2 0x4DB JUMPI PUSH2 0x4DA PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD9FC4B61 PUSH32 0x0 CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x717 PUSH2 0x1021 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x6 PUSH0 PUSH1 0x3 DUP2 LT PUSH2 0x77A JUMPI PUSH2 0x779 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x7B0 JUMPI PUSH2 0x7AF PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1660F99 PUSH32 0x0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8B SWAP1 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB04 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0xDAD JUMPI PUSH1 0x4 DUP4 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH0 DUP5 EQ PUSH2 0xD94 JUMPI PUSH0 DUP1 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x2 DUP2 PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC4E JUMPI PUSH2 0xC4D PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xCCC SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC1B JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0xD30 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xCF1 JUMPI PUSH2 0xCF0 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0xD92 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xD9F SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB36 JUMP JUMPDEST POP PUSH2 0x101C JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH0 DUP1 PUSH1 0x1 DUP1 DUP5 PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xDDC JUMPI PUSH2 0xDDB PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x1 DUP2 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x1 DUP1 DUP3 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xEC2 JUMPI PUSH2 0xEC1 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xF40 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE8F JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0xFA4 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x1006 JUMPI CALLER PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1012 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDB3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x102A PUSH2 0x15E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x309 SWAP1 POP PUSH2 0x3E7 DUP4 EQ PUSH2 0x12D6 JUMPI PUSH1 0x4 DUP4 PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x3 DUP4 PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP5 EQ PUSH2 0x12BD JUMPI PUSH1 0x5 PUSH0 PUSH1 0x6 PUSH1 0x2 DUP5 PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x125E JUMPI PUSH1 0x2 DUP2 PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x6 PUSH1 0x1 DUP3 PUSH2 0x1166 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1177 JUMPI PUSH2 0x1176 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x11AC JUMPI PUSH2 0x11AB PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x11F5 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1143 JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x1259 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x1219 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x12BB JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x127C JUMPI PUSH2 0x127B PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x12C8 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x105C JUMP JUMPDEST POP PUSH2 0x1549 JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x6 PUSH1 0x1 DUP5 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x1 DUP2 PUSH2 0x13B3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1475 JUMPI PUSH1 0x6 PUSH1 0x1 DUP3 PUSH2 0x13DE SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1424 JUMPI PUSH2 0x1423 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x146D SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13BB JUMP JUMPDEST POP PUSH0 DUP3 SUB PUSH2 0x14D1 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x309 DUP3 EQ PUSH2 0x1533 JUMPI CALLER PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x153F SWAP1 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12DC JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x15DC JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x158B JUMPI PUSH2 0x158A PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CF JUMPI DUP1 SWAP2 POP PUSH2 0x15DC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1557 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E7 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1672 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x19B2 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1665 JUMPI DUP1 SWAP2 POP PUSH2 0x1672 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15ED JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A7 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x169D JUMP JUMPDEST DUP2 EQ PUSH2 0x16C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D2 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EA DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1705 DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175D DUP2 PUSH2 0x1749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1776 PUSH0 DUP4 ADD DUP5 PUSH2 0x1754 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1785 DUP2 PUSH2 0x169D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x179E PUSH0 DUP4 ADD DUP7 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17AB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17B8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E2 DUP5 DUP3 DUP6 ADD PUSH2 0x16C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180D PUSH0 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1836 PUSH2 0x1831 PUSH2 0x182C DUP5 PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1847 DUP3 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1858 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1868 DUP2 PUSH2 0x184E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH0 DUP4 ADD DUP5 PUSH2 0x185F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C2 DUP5 DUP3 DUP6 ADD PUSH2 0x16F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FE PUSH0 DUP4 ADD DUP5 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x193B DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1946 DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x195E JUMPI PUSH2 0x195D PUSH2 0x1904 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1977 PUSH0 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1984 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x199E PUSH0 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x19AB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19F2 PUSH0 DUP4 ADD DUP8 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x19FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1A0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1A19 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A66 PUSH1 0x13 DUP4 PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A71 DUP3 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 PUSH2 0x1A5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AA8 DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH2 0x1AC2 PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AEC PUSH0 DUP4 ADD DUP7 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x1AF9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B18 DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B23 DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1904 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4B DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x1904 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND CREATE DUP11 DUP8 PUSH28 0x9E2CA706A669FBF85613FAF97B71A7D79083C35D7C5CAC5D3EF26473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "530:3996:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:12:0;:10;:12::i;:::-;530:3996:1;;;;;1552:331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990:160:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1889:116:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;864:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;690:36:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1126:287;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:20:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:177:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1419:127;;;;;;;;;;;;;:::i;:::-;;755:103:0;;;;;;;;;;;;;:::i;:::-;;553:126;;;:::i;:::-;;;626:9;600:10;:22;611:10;600:22;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;645:27;:25;:27::i;:::-;553:126::o;1552:331:1:-;1645:4;1687:9;1665:32;;:10;:32;;;1661:111;;1739:10;1751:9;1720:41;;;;;;;;;;;;:::i;:::-;;;;;;;;1661:111;1804:7;1781:12;:19;1794:5;1781:19;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1826:29;1840:5;1847:7;1826:29;;;;;;;:::i;:::-;;;;;;;;1872:4;1865:11;;1552:331;;;;:::o;990:160:0:-;1068:7;1077;1086;1117:4;1122:1;1117:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1126:4;1131:1;1126:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1135:4;1140:1;1135:7;;;;;;;:::i;:::-;;;;;;;;;;;;;1109:34;;;;;;990:160;;;:::o;1889:116:1:-;1953:4;1976:12;:22;1989:8;1976:22;;;;;;;;;;;;;;;;1969:29;;1889:116;;;:::o;864:120:0:-;934:4;957:10;:20;968:8;957:20;;;;;;;;;;;;;;;;950:27;;864:120;;;:::o;690:36:1:-;;;:::o;650:34::-;;;:::o;1126:287::-;1184:4;:21;;;1219:11;1244:10;1276:4;1295:12;1184:133;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:12;1327;:24;1340:10;1327:24;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;1377:29;:27;:29::i;:::-;1126:287;:::o;732:35::-;;;:::o;365:20:0:-;;;;;;;;;;;;;:::o;2011:177:1:-;2091:7;2100;2109;2140:9;2150:1;2140:12;;;;;;;:::i;:::-;;;;;;;;;;;;;2154:9;2164:1;2154:12;;;;;;;:::i;:::-;;;;;;;;;;;;;2168:9;2178:1;2168:12;;;;;;;:::i;:::-;;;;;;;;;;;;;2132:49;;;;;;2011:177;;;:::o;1419:127::-;500:5:0;;;;;;;;;;;486:19;;:10;:19;;;478:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1471:4:1::1;:17;;;1489:11;1502:5;;;;;;;;;;;1509:4;:14;;;1532:4;1509:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1471:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1419:127::o:0;755:103:0:-;500:5;;;;;;;;;;;486:19;;:10;:19;;;478:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;813:5:::1;;;;;;;;;;;805:23;;:46;829:21;805:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;755:103::o:0;1156:1912::-;1212:20;1235:25;:23;:25::i;:::-;1212:48;;1270:19;1299:16;1318:3;1299:22;;1354:3;1335:15;:22;1331:1731;;1475:1;1457:15;:19;;;;:::i;:::-;1440:36;;1495:6;1521:1;1504:14;:18;;;;:::i;:::-;1495:27;;1490:746;1528:1;1524;:5;1490:746;;;1577:1;1558:15;:20;1554:668;;1631:10;:23;1642:4;1651:1;1647;:5;;;;:::i;:::-;1642:11;;;;;;;:::i;:::-;;;;;;;;;;;;;1631:23;;;;;;;;;;;;;;;;1606:10;:22;1617:10;1606:22;;;;;;;;;;;;;;;;:48;1602:602;;;1700:1;1696;:5;;;;:::i;:::-;1682:19;;1732:6;1741:1;1732:10;;1727:111;1752:1;1748;:5;;;;:::i;:::-;1744:1;:9;1727:111;;;1800:4;1809:1;1805;:5;;;;:::i;:::-;1800:11;;;;;;;:::i;:::-;;;;;;;;;;;;;1790:4;1795:1;1790:7;;;;;;;:::i;:::-;;;;:21;;;;;;;;;;;;;;;;;;1755:3;;;;;:::i;:::-;;;;1727:111;;;;1927:1;1912:11;:16;1908:109;;1980:10;1960:4;1965:11;1960:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;1908:109;1602:602;;;2090:3;2075:11;:18;2071:111;;2145:10;2125:4;2130:11;2125:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2071:111;1602:602;1554:668;1531:3;;;;;:::i;:::-;;;;1490:746;;;;1331:1731;;;2334:6;2343:1;2334:10;;2329:723;2350:1;2346;:5;2329:723;;;2405:10;:23;2416:4;2425:1;2421;:5;;;;:::i;:::-;2416:11;;;;;;;:::i;:::-;;;;;;;;;;;;;2405:23;;;;;;;;;;;;;;;;2380:10;:22;2391:10;2380:22;;;;;;;;;;;;;;;;:48;2376:662;;;2470:1;2466;:5;;;;:::i;:::-;2452:19;;2610:6;2619:1;2610:10;;2605:103;2630:1;2626;:5;;;;:::i;:::-;2622:1;:9;2605:103;;;2674:4;2683:1;2679;:5;;;;:::i;:::-;2674:11;;;;;;;:::i;:::-;;;;;;;;;;;;;2664:4;2669:1;2664:7;;;;;;;:::i;:::-;;;;:21;;;;;;;;;;;;;;;;;;2633:3;;;;;:::i;:::-;;;;2605:103;;;;2789:1;2774:11;:16;2770:101;;2838:10;2818:4;2823:11;2818:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2770:101;2376:662;;;2936:3;2921:11;:18;2917:103;;2987:10;2967:4;2972:11;2967:17;;;;;;;:::i;:::-;;;;:30;;;;;;;;;;;;;;;;;;2917:103;2376:662;2353:3;;;;;:::i;:::-;;;;2329:723;;;;1331:1731;1202:1866;;;1156:1912::o;2194:2044:1:-;2252:20;2275:27;:25;:27::i;:::-;2252:50;;2312:19;2341:16;2360:3;2341:22;;2396:3;2377:15;:22;2373:1859;;2517:1;2499:15;:19;;;;:::i;:::-;2482:36;;2537:6;2563:1;2546:14;:18;;;;:::i;:::-;2537:27;;2532:845;2570:1;2566;:5;2532:845;;;2619:1;2600:15;:20;2596:767;;2724:12;:30;2737:9;2751:1;2747;:5;;;;:::i;:::-;2737:16;;;;;;;:::i;:::-;;;;;;;;;;;;;2724:30;;;;;;;;;;;;;;;;2673:12;:24;2686:10;2673:24;;;;;;;;;;;;;;;;:81;2644:701;;;2821:1;2817;:5;;;;:::i;:::-;2803:19;;2853:6;2862:1;2853:10;;2848:121;2873:1;2869;:5;;;;:::i;:::-;2865:1;:9;2848:121;;;2926:9;2940:1;2936;:5;;;;:::i;:::-;2926:16;;;;;;;:::i;:::-;;;;;;;;;;;;;2911:9;2921:1;2911:12;;;;;;;:::i;:::-;;;;:31;;;;;;;;;;;;;;;;;;2876:3;;;;;:::i;:::-;;;;2848:121;;;;3058:1;3043:11;:16;3039:114;;3116:10;3091:9;3101:11;3091:22;;;;;;;:::i;:::-;;;;:35;;;;;;;;;;;;;;;;;;3039:114;2644:701;;;3226:3;3211:11;:18;3207:116;;3286:10;3261:9;3271:11;3261:22;;;;;;;:::i;:::-;;;;:35;;;;;;;;;;;;;;;;;;3207:116;2644:701;2596:767;2573:3;;;;;:::i;:::-;;;;2532:845;;;;2373:1859;;;3475:6;3484:1;3475:10;;3470:752;3491:1;3487;:5;3470:752;;;3548:12;:30;3561:9;3575:1;3571;:5;;;;:::i;:::-;3561:16;;;;;;;:::i;:::-;;;;;;;;;;;;;3548:30;;;;;;;;;;;;;;;;3521:12;:24;3534:10;3521:24;;;;;;;;;;;;;;;;:57;3517:691;;;3620:1;3616;:5;;;;:::i;:::-;3602:19;;3760:6;3769:1;3760:10;;3755:113;3780:1;3776;:5;;;;:::i;:::-;3772:1;:9;3755:113;;;3829:9;3843:1;3839;:5;;;;:::i;:::-;3829:16;;;;;;;:::i;:::-;;;;;;;;;;;;;3814:9;3824:1;3814:12;;;;;;;:::i;:::-;;;;:31;;;;;;;;;;;;;;;;;;3783:3;;;;;:::i;:::-;;;;3755:113;;;;3949:1;3934:11;:16;3930:106;;4003:10;3978:9;3988:11;3978:22;;;;;;;:::i;:::-;;;;:35;;;;;;;;;;;;;;;;;;3930:106;3517:691;;;4101:3;4086:11;:18;4082:108;;4157:10;4132:9;4142:11;4132:22;;;;;;;:::i;:::-;;;;:35;;;;;;;;;;;;;;;;;;4082:108;3517:691;3494:3;;;;;:::i;:::-;;;;3470:752;;;;2373:1859;2242:1996;;;2194:2044::o;3074:273:0:-;3132:4;3148:10;3161:3;3148:16;;3179:6;3174:145;3195:1;3191;:5;3174:145;;;3232:10;3221:21;;:4;3226:1;3221:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:21;;;3217:92;;3270:1;3262:9;;3289:5;;3217:92;3198:3;;;;;;;3174:145;;;;3335:5;3328:12;;;3074:273;:::o;4244:280:1:-;4304:4;4320:10;4333:3;4320:16;;4351:6;4346:150;4367:1;4363;:5;4346:150;;;4409:10;4393:26;;:9;4403:1;4393:12;;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;4389:97;;4447:1;4439:9;;4466:5;;4389:97;4370:3;;;;;;;4346:150;;;;4512:5;4505:12;;;4244:280;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:442::-;2377:4;2415:2;2404:9;2400:18;2392:26;;2428:71;2496:1;2485:9;2481:17;2472:6;2428:71;:::i;:::-;2509:72;2577:2;2566:9;2562:18;2553:6;2509:72;:::i;:::-;2591;2659:2;2648:9;2644:18;2635:6;2591:72;:::i;:::-;2228:442;;;;;;:::o;2676:329::-;2735:6;2784:2;2772:9;2763:7;2759:23;2755:32;2752:119;;;2790:79;;:::i;:::-;2752:119;2910:1;2935:53;2980:7;2971:6;2960:9;2956:22;2935:53;:::i;:::-;2925:63;;2881:117;2676:329;;;;:::o;3011:118::-;3098:24;3116:5;3098:24;:::i;:::-;3093:3;3086:37;3011:118;;:::o;3135:222::-;3228:4;3266:2;3255:9;3251:18;3243:26;;3279:71;3347:1;3336:9;3332:17;3323:6;3279:71;:::i;:::-;3135:222;;;;:::o;3363:60::-;3391:3;3412:5;3405:12;;3363:60;;;:::o;3429:142::-;3479:9;3512:53;3530:34;3539:24;3557:5;3539:24;:::i;:::-;3530:34;:::i;:::-;3512:53;:::i;:::-;3499:66;;3429:142;;;:::o;3577:126::-;3627:9;3660:37;3691:5;3660:37;:::i;:::-;3647:50;;3577:126;;;:::o;3709:148::-;3781:9;3814:37;3845:5;3814:37;:::i;:::-;3801:50;;3709:148;;;:::o;3863:175::-;3972:59;4025:5;3972:59;:::i;:::-;3967:3;3960:72;3863:175;;:::o;4044:266::-;4159:4;4197:2;4186:9;4182:18;4174:26;;4210:93;4300:1;4289:9;4285:17;4276:6;4210:93;:::i;:::-;4044:266;;;;:::o;4316:222::-;4409:4;4447:2;4436:9;4432:18;4424:26;;4460:71;4528:1;4517:9;4513:17;4504:6;4460:71;:::i;:::-;4316:222;;;;:::o;4544:329::-;4603:6;4652:2;4640:9;4631:7;4627:23;4623:32;4620:119;;;4658:79;;:::i;:::-;4620:119;4778:1;4803:53;4848:7;4839:6;4828:9;4824:22;4803:53;:::i;:::-;4793:63;;4749:117;4544:329;;;;:::o;4879:140::-;4943:9;4976:37;5007:5;4976:37;:::i;:::-;4963:50;;4879:140;;;:::o;5025:159::-;5126:51;5171:5;5126:51;:::i;:::-;5121:3;5114:64;5025:159;;:::o;5190:250::-;5297:4;5335:2;5324:9;5320:18;5312:26;;5348:85;5430:1;5419:9;5415:17;5406:6;5348:85;:::i;:::-;5190:250;;;;:::o;5446:180::-;5494:77;5491:1;5484:88;5591:4;5588:1;5581:15;5615:4;5612:1;5605:15;5632:191;5672:3;5691:20;5709:1;5691:20;:::i;:::-;5686:25;;5725:20;5743:1;5725:20;:::i;:::-;5720:25;;5768:1;5765;5761:9;5754:16;;5789:3;5786:1;5783:10;5780:36;;;5796:18;;:::i;:::-;5780:36;5632:191;;;;:::o;5829:332::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6001:71;6069:1;6058:9;6054:17;6045:6;6001:71;:::i;:::-;6082:72;6150:2;6139:9;6135:18;6126:6;6082:72;:::i;:::-;5829:332;;;;;:::o;6167:::-;6288:4;6326:2;6315:9;6311:18;6303:26;;6339:71;6407:1;6396:9;6392:17;6383:6;6339:71;:::i;:::-;6420:72;6488:2;6477:9;6473:18;6464:6;6420:72;:::i;:::-;6167:332;;;;;:::o;6505:180::-;6553:77;6550:1;6543:88;6650:4;6647:1;6640:15;6674:4;6671:1;6664:15;6691:581;6882:4;6920:3;6909:9;6905:19;6897:27;;6934:85;7016:1;7005:9;7001:17;6992:6;6934:85;:::i;:::-;7029:72;7097:2;7086:9;7082:18;7073:6;7029:72;:::i;:::-;7111;7179:2;7168:9;7164:18;7155:6;7111:72;:::i;:::-;7193;7261:2;7250:9;7246:18;7237:6;7193:72;:::i;:::-;6691:581;;;;;;;:::o;7278:169::-;7362:11;7396:6;7391:3;7384:19;7436:4;7431:3;7427:14;7412:29;;7278:169;;;;:::o;7453:::-;7593:21;7589:1;7581:6;7577:14;7570:45;7453:169;:::o;7628:366::-;7770:3;7791:67;7855:2;7850:3;7791:67;:::i;:::-;7784:74;;7867:93;7956:3;7867:93;:::i;:::-;7985:2;7980:3;7976:12;7969:19;;7628:366;;;:::o;8000:419::-;8166:4;8204:2;8193:9;8189:18;8181:26;;8253:9;8247:4;8243:20;8239:1;8228:9;8224:17;8217:47;8281:131;8407:4;8281:131;:::i;:::-;8273:139;;8000:419;;;:::o;8425:143::-;8482:5;8513:6;8507:13;8498:22;;8529:33;8556:5;8529:33;:::i;:::-;8425:143;;;;:::o;8574:351::-;8644:6;8693:2;8681:9;8672:7;8668:23;8664:32;8661:119;;;8699:79;;:::i;:::-;8661:119;8819:1;8844:64;8900:7;8891:6;8880:9;8876:22;8844:64;:::i;:::-;8834:74;;8790:128;8574:351;;;;:::o;8931:470::-;9094:4;9132:2;9121:9;9117:18;9109:26;;9145:85;9227:1;9216:9;9212:17;9203:6;9145:85;:::i;:::-;9240:72;9308:2;9297:9;9293:18;9284:6;9240:72;:::i;:::-;9322;9390:2;9379:9;9375:18;9366:6;9322:72;:::i;:::-;8931:470;;;;;;:::o;9407:194::-;9447:4;9467:20;9485:1;9467:20;:::i;:::-;9462:25;;9501:20;9519:1;9501:20;:::i;:::-;9496:25;;9545:1;9542;9538:9;9530:17;;9569:1;9563:4;9560:11;9557:37;;;9574:18;;:::i;:::-;9557:37;9407:194;;;;:::o;9607:171::-;9646:3;9669:24;9687:5;9669:24;:::i;:::-;9660:33;;9715:4;9708:5;9705:15;9702:41;;9723:18;;:::i;:::-;9702:41;9770:1;9763:5;9759:13;9752:20;;9607:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1414000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"depositETH()": "infinite",
								"depositToken(uint256)": "infinite",
								"getETHBalance(address)": "2896",
								"getETHTopThreeAccount()": "infinite",
								"getTokenBalance(address)": "2874",
								"getTokenTopThreeAccount()": "infinite",
								"iERC20Token()": "infinite",
								"iGTT()": "infinite",
								"owner()": "2575",
								"tokenAddr()": "infinite",
								"tokensReceived(address,uint256)": "infinite",
								"withdrawETH()": "infinite",
								"withdrawToken()": "infinite"
							},
							"internal": {
								"_checkTokenRankMembership()": "infinite",
								"_handleRankWhenDepositToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 936,
									"end": 1120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 434,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 416,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 416,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 416,
									"end": 434,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 416,
									"end": 434,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 986,
									"end": 996,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 978,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 978,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1028,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1070,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1071,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1112,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1113,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 1120,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "412"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "409"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "406"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 4526,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220460bf08a877b9e2ca706a669fbf85613faf97b71a7d79083c35d7c5cac5d3ef264736f6c63430008160033",
									".code": [
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "6215BE77"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "B254B80A"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "B254B80A"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "CA628C78"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "E086E5EC"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "F6326FB3"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "6215BE77"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "7251E8C2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "24A756D1"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "2B7E8FAF"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "3AECD0E3"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "3BB66A7B"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "4D3F3CF6"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5FBE4D1D"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 730,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 4526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1552,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1552,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1552,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1889,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1889,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 690,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 690,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 650,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 650,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1126,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 732,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 732,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2011,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2011,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1419,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 755,
											"end": 858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 611,
											"end": 621,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 600,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 600,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 645,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 645,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1675,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1661,
											"end": 1772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1760,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "93B7D3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1720,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1772,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1661,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1781,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "CAE15051BBB38F81D4D2FB0EEBA04C25EC7FC5E1AC9D89D6D68AF8D3AAB337DC"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1826,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1117,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1126,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1135,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 864,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 864,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 957,
											"end": 977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 950,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 690,
											"end": 726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 650,
											"end": 684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "D9FC4B61"
										},
										{
											"begin": 1219,
											"end": 1230,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1184,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1350,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1327,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1377,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1377,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 732,
											"end": 767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 732,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 365,
											"end": 385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2140,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2154,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2168,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1419,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 478,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1475,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1471,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D1660F99"
										},
										{
											"begin": 1489,
											"end": 1500,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1509,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 1536,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1509,
											"end": 1538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1509,
											"end": 1538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1509,
											"end": 1538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1471,
											"end": 1539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 755,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 478,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 529,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 478,
											"end": 529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 829,
											"end": 850,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 805,
											"end": 851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 3068,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1156,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 1335,
											"end": 1350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1457,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1504,
											"end": 1518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1504,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1578,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1647,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1642,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1654,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1696,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1748,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1805,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1800,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1790,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1755,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1965,
											"end": 1976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1960,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1908,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2075,
											"end": 2086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2125,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2071,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1602,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1554,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2351,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2421,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2421,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2416,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2466,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2626,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2679,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2674,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2674,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2664,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2633,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2823,
											"end": 2834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2818,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2770,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2921,
											"end": 2932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 2997,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2967,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2917,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2376,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2353,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 3052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1331,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 3068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2194,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2275,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2275,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2275,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "3E7"
										},
										{
											"begin": 2377,
											"end": 2392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2499,
											"end": 2514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2499,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2499,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2546,
											"end": 2560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2546,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2571,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2620,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2596,
											"end": 3363,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2751,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2747,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2737,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2696,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2754,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2817,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2869,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2936,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2926,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2911,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2876,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3039,
											"end": 3153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3126,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3101,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3091,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3153,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3039,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3229,
											"name": "PUSH",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3211,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3207,
											"end": 3323,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3261,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3323,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3207,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2644,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2596,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2573,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 3377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3492,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3575,
											"end": 3576,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3571,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3561,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3578,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3616,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3776,
											"end": 3777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3776,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3839,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3839,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3829,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3814,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3783,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3930,
											"end": 4036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3978,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3930,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4086,
											"end": 4097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4082,
											"end": 4190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4167,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4142,
											"end": 4153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4132,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4082,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3517,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3494,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 4222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2373,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 4238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3221,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3217,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4244,
											"end": 4524,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4244,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "3E7"
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4368,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4419,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4393,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4389,
											"end": 4486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4486,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4389,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2191,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2496,
											"end": 2497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2478,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2428,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2499,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2428,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2509,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 2509,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2659,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2591,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2663,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2591,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 2790,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2980,
											"end": 2987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2969,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2935,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2988,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2935,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 3005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3129,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3011,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 3098,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3122,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 3098,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3123,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3279,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3350,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3279,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3571,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3429,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3530,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3539,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3539,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3530,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 3530,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3512,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3512,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3703,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3577,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3660,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 3660,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3857,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3709,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3814,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3857,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 4038,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3863,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 4025,
											"end": 4030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3972,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3972,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 4038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 4038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 4210,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4449,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4510,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4460,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4460,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4640,
											"end": 4649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4638,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4627,
											"end": 4650,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4655,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4739,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 4620,
											"end": 4739,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 4658,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4658,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4737,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 4658,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4739,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 4620,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 4848,
											"end": 4855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 4803,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5019,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4879,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 5007,
											"end": 5012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4976,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5013,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 4976,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5184,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5025,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 5171,
											"end": 5176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5126,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 5126,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5114,
											"end": 5178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5324,
											"end": 5333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5348,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5433,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 5348,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5446,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5494,
											"end": 5571,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5572,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5595,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5588,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5581,
											"end": 5596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5619,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5620,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5691,
											"end": 5711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5711,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 5691,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5743,
											"end": 5744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5725,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5725,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5793,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 5780,
											"end": 5816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5796,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5816,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 5780,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5950,
											"end": 5954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 5990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 5991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6069,
											"end": 6070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6001,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6072,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 6001,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6150,
											"end": 6152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6082,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6154,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6082,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 6161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6288,
											"end": 6292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6392,
											"end": 6409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6389,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6339,
											"end": 6410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 6339,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6420,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6492,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 6420,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6505,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6505,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6630,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6550,
											"end": 6551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6654,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6647,
											"end": 6648,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6640,
											"end": 6655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6923,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6909,
											"end": 6918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 6998,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 6934,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 6934,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 7097,
											"end": 7099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7029,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7101,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 7029,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7111,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7111,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7111,
											"end": 7183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7111,
											"end": 7183,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 7111,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7250,
											"end": 7259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7193,
											"end": 7265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7265,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 7193,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7396,
											"end": 7402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7384,
											"end": 7403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7622,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7453,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7614,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206F776E65722063616E2063616C6C00000000000000000000000000"
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7570,
											"end": 7615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7994,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7628,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7770,
											"end": 7773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 7855,
											"end": 7857,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7791,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7791,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7791,
											"end": 7858,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 7791,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 7956,
											"end": 7959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 7867,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 7867,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7985,
											"end": 7987,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 7983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7969,
											"end": 7988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7969,
											"end": 7988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7628,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8419,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8000,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8181,
											"end": 8207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8181,
											"end": 8207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 8407,
											"end": 8411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8281,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8412,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 8281,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 8556,
											"end": 8561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8529,
											"end": 8562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8562,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 8529,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8681,
											"end": 8690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8672,
											"end": 8679,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8664,
											"end": 8696,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8780,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 8661,
											"end": 8780,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8699,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8699,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8778,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8699,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8780,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 8661,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8900,
											"end": 8907,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8880,
											"end": 8889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8844,
											"end": 8908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8844,
											"end": 8908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8844,
											"end": 8908,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8844,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8790,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9094,
											"end": 9098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9134,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9109,
											"end": 9135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9109,
											"end": 9135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9145,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9227,
											"end": 9228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 9229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9145,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9145,
											"end": 9230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9145,
											"end": 9230,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9145,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 9308,
											"end": 9310,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9297,
											"end": 9306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9284,
											"end": 9290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9240,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9312,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 9240,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 9390,
											"end": 9392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9379,
											"end": 9388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9366,
											"end": 9372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9322,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9322,
											"end": 9394,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 9322,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8931,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 9467,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9467,
											"end": 9487,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 9467,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 9519,
											"end": 9520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 9501,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 9521,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 9501,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9521,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9530,
											"end": 9547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9530,
											"end": 9547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9569,
											"end": 9570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9571,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9594,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 9557,
											"end": 9594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 9574,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 9574,
											"end": 9592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9592,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 9574,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9594,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 9557,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9607,
											"end": 9778,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 9607,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9646,
											"end": 9649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 9687,
											"end": 9692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9669,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 9669,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9669,
											"end": 9693,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 9669,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9660,
											"end": 9693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9660,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9715,
											"end": 9719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9702,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 9702,
											"end": 9743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 9723,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9702,
											"end": 9743,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 9702,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9770,
											"end": 9771,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9763,
											"end": 9768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9772,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9607,
											"end": 9778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9607,
											"end": 9778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9607,
											"end": 9778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9607,
											"end": 9778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositETH()": "f6326fb3",
							"depositToken(uint256)": "6215be77",
							"getETHBalance(address)": "3bb66a7b",
							"getETHTopThreeAccount()": "2b7e8faf",
							"getTokenBalance(address)": "3aecd0e3",
							"getTokenTopThreeAccount()": "b254b80a",
							"iERC20Token()": "7251e8c2",
							"iGTT()": "4d3f3cf6",
							"owner()": "8da5cb5b",
							"tokenAddr()": "5fbe4d1d",
							"tokensReceived(address,uint256)": "24a756d1",
							"withdrawETH()": "e086e5ec",
							"withdrawToken()": "ca628c78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validAddr\",\"type\":\"address\"}],\"name\":\"WrongTokenReceived\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokenReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETHTopThreeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenTopThreeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iERC20Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iGTT\",\"outputs\":[{\"internalType\":\"contract IERC20TokenGTT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":\"TokenBank\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol\":{\"keccak256\":\"0x9f1c757c5e1d2e01e04e59d5cd67200220fca3b22c51e872892adfac343c18e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261d98863d9d0d149c9b697a5f468a7cd5f97a966e8156fc17fbf75c53adcfe2\",\"dweb:/ipfs/QmQiaYS2oLdCoWkXBf3AKoFUimg65K9eWzjvLFkFFJUGdH\"]},\"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol\":{\"keccak256\":\"0xed2146ea864ae8e9564044af82f2fe66464e0029fd5b0c0a082a128e538edc86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2127682408232514fdf3b319f65d83b4ee6e07f613eb002b7a0aebc93d4caedc\",\"dweb:/ipfs/QmPWibKpmotam4veBnvk7sdZa614xdA3tMCasUq6yDmtkL\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol:TokenBank",
								"label": "ETHBalance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 9,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol:TokenBank",
								"label": "rank",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)3_storage"
							},
							{
								"astId": 11,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol:TokenBank",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 400,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol:TokenBank",
								"label": "tokenBalance",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 404,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol:TokenBank",
								"label": "tokenRank",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)3_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)3_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[3]",
								"numberOfBytes": "96"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol": {
				"ast": {
					"absolutePath": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
					"exportedSymbols": {
						"Bank": [
							340
						]
					},
					"id": 341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340
							],
							"name": "Bank",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "ETHBalance",
									"nameLocation": "319:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "285:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "293:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "285:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "304:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "rank",
									"nameLocation": "355:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "335:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$3_storage",
										"typeString": "address[3]"
									},
									"typeName": {
										"baseType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "335:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 8,
										"length": {
											"hexValue": "33",
											"id": 7,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "343:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "335:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
											"typeString": "address[3]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 11,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "380:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "365:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "365:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "406:35:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "416:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "424:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "428:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "424:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "416:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "416:18:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:0:0"
									},
									"scope": 340,
									"src": "392:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "468:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "486:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "490:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "486:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 25,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "500:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "486:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
																"typeString": "literal_string \"Only owner can call\""
															},
															"value": "Only owner can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ecca92b0f3f0904a284a39a00f123abfa8591c0479fd5ce96ab93180a48ab91",
																"typeString": "literal_string \"Only owner can call\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "478:51:0"
											},
											{
												"id": 30,
												"nodeType": "PlaceholderStatement",
												"src": "539:1:0"
											}
										]
									},
									"id": 32,
									"name": "onlyOwner",
									"nameLocation": "456:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:0"
									},
									"src": "447:100:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "590:89:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 35,
															"name": "ETHBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "600:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 38,
														"indexExpression": {
															"expression": {
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "611:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "615:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "611:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "600:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 39,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "626:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "630:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "626:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "600:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "600:35:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 43,
														"name": "_handleRankWhenDepositETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "645:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "645:27:0"
											}
										]
									},
									"functionSelector": "f6326fb3",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "562:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:0"
									},
									"scope": 340,
									"src": "553:126:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "720:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 50,
														"name": "depositETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "730:12:0"
											}
										]
									},
									"id": 54,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:0"
									},
									"scope": 340,
									"src": "685:64:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "795:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 66,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "837:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Bank_$340",
																			"typeString": "contract Bank"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Bank_$340",
																			"typeString": "contract Bank"
																		}
																	],
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 64,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "829:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "829:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "843:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "829:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 61,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "813:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "805:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 59,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "805:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "805:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "820:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "805:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "805:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "805:46:0"
											}
										]
									},
									"functionSelector": "e086e5ec",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 57,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 56,
												"name": "onlyOwner",
												"nameLocations": [
													"785:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "785:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "785:9:0"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "764:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:0"
									},
									"scope": 340,
									"src": "755:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "940:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 79,
														"name": "ETHBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "957:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 81,
													"indexExpression": {
														"id": 80,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "968:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "957:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 82,
												"nodeType": "Return",
												"src": "950:27:0"
											}
										]
									},
									"functionSelector": "3bb66a7b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHBalance",
									"nameLocation": "873:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "895:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "887:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:18:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:6:0"
									},
									"scope": 340,
									"src": "864:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1099:51:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 93,
																"name": "rank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1117:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 95,
															"indexExpression": {
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 96,
																"name": "rank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1126:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 98,
															"indexExpression": {
																"hexValue": "31",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 99,
																"name": "rank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1135:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 101,
															"indexExpression": {
																"hexValue": "32",
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 102,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1116:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$",
														"typeString": "tuple(address,address,address)"
													}
												},
												"functionReturnParameters": 92,
												"id": 103,
												"nodeType": "Return",
												"src": "1109:34:0"
											}
										]
									},
									"functionSelector": "2b7e8faf",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHTopThreeAccount",
									"nameLocation": "999:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:27:0"
									},
									"scope": 340,
									"src": "990:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1202:1866:0",
										"statements": [
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "membershipIndex",
														"nameLocation": "1217:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "1212:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1212:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 110,
														"name": "_checkETHRankMembership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1235:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1235:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1212:48:0"
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "convertedIndex",
														"nameLocation": "1275:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "1270:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1270:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"nodeType": "VariableDeclarationStatement",
												"src": "1270:19:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "indexRecord",
														"nameLocation": "1304:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "1299:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"hexValue": "373737",
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1318:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_777_by_1",
														"typeString": "int_const 777"
													},
													"value": "777"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1299:22:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 120,
														"name": "membershipIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1335:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "393939",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1354:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_999_by_1",
															"typeString": "int_const 999"
														},
														"value": "999"
													},
													"src": "1335:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "2252:810:0",
													"statements": [
														{
															"body": {
																"id": 297,
																"nodeType": "Block",
																"src": "2358:694:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 228,
																					"name": "ETHBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "2380:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 231,
																				"indexExpression": {
																					"expression": {
																						"id": 229,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2391:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2395:6:0",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2391:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2380:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 232,
																					"name": "ETHBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "2405:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 238,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 233,
																						"name": "rank",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 9,
																						"src": "2416:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$3_storage",
																							"typeString": "address[3] storage ref"
																						}
																					},
																					"id": 237,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 236,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 234,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 219,
																							"src": "2421:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 235,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2425:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "2421:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2416:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2405:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2380:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 295,
																			"nodeType": "Block",
																			"src": "2895:143:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 283,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 117,
																							"src": "2921:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"hexValue": "373737",
																							"id": 284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2936:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_777_by_1",
																								"typeString": "int_const 777"
																							},
																							"value": "777"
																						},
																						"src": "2921:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 294,
																					"nodeType": "IfStatement",
																					"src": "2917:103:0",
																					"trueBody": {
																						"id": 293,
																						"nodeType": "Block",
																						"src": "2941:79:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 291,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 286,
																											"name": "rank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 9,
																											"src": "2967:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 288,
																										"indexExpression": {
																											"id": 287,
																											"name": "indexRecord",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 117,
																											"src": "2972:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "2967:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"expression": {
																											"id": 289,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "2987:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 290,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "2991:6:0",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "2987:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "2967:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 292,
																								"nodeType": "ExpressionStatement",
																								"src": "2967:30:0"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 296,
																		"nodeType": "IfStatement",
																		"src": "2376:662:0",
																		"trueBody": {
																			"id": 282,
																			"nodeType": "Block",
																			"src": "2430:459:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 244,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 240,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 117,
																							"src": "2452:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 243,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 241,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 219,
																								"src": "2466:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 242,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2470:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "2466:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2452:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 245,
																					"nodeType": "ExpressionStatement",
																					"src": "2452:19:0"
																				},
																				{
																					"body": {
																						"id": 268,
																						"nodeType": "Block",
																						"src": "2638:70:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 266,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 258,
																											"name": "rank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 9,
																											"src": "2664:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 260,
																										"indexExpression": {
																											"id": 259,
																											"name": "j",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 247,
																											"src": "2669:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "2664:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 261,
																											"name": "rank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 9,
																											"src": "2674:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 265,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 264,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 262,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 247,
																												"src": "2679:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "-",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 263,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2683:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "2679:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "2674:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "2664:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 267,
																								"nodeType": "ExpressionStatement",
																								"src": "2664:21:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 250,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 247,
																							"src": "2622:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 253,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 251,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 219,
																								"src": "2626:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 252,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2630:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "2626:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2622:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 269,
																					"initializationExpression": {
																						"assignments": [
																							247
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 247,
																								"mutability": "mutable",
																								"name": "j",
																								"nameLocation": "2615:1:0",
																								"nodeType": "VariableDeclaration",
																								"scope": 269,
																								"src": "2610:6:0",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 246,
																									"name": "uint",
																									"nodeType": "ElementaryTypeName",
																									"src": "2610:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 249,
																						"initialValue": {
																							"hexValue": "32",
																							"id": 248,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2619:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "2610:10:0"
																					},
																					"isSimpleCounterLoop": false,
																					"loopExpression": {
																						"expression": {
																							"id": 256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "--",
																							"prefix": false,
																							"src": "2633:3:0",
																							"subExpression": {
																								"id": 255,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 247,
																								"src": "2633:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 257,
																						"nodeType": "ExpressionStatement",
																						"src": "2633:3:0"
																					},
																					"nodeType": "ForStatement",
																					"src": "2605:103:0"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 270,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 117,
																							"src": "2774:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 271,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2789:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2774:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 281,
																					"nodeType": "IfStatement",
																					"src": "2770:101:0",
																					"trueBody": {
																						"id": 280,
																						"nodeType": "Block",
																						"src": "2792:79:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 278,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 273,
																											"name": "rank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 9,
																											"src": "2818:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 275,
																										"indexExpression": {
																											"id": 274,
																											"name": "indexRecord",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 117,
																											"src": "2823:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "2818:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"expression": {
																											"id": 276,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "2838:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 277,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "2842:6:0",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "2838:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "2818:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 279,
																								"nodeType": "ExpressionStatement",
																								"src": "2818:30:0"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2346:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 298,
															"initializationExpression": {
																"assignments": [
																	219
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 219,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2339:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 298,
																		"src": "2334:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 218,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2334:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 221,
																"initialValue": {
																	"hexValue": "33",
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2334:10:0"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": false,
																	"src": "2353:3:0",
																	"subExpression": {
																		"id": 225,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "2353:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 227,
																"nodeType": "ExpressionStatement",
																"src": "2353:3:0"
															},
															"nodeType": "ForStatement",
															"src": "2329:723:0"
														}
													]
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "1331:1731:0",
												"trueBody": {
													"id": 217,
													"nodeType": "Block",
													"src": "1359:887:0",
													"statements": [
														{
															"expression": {
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 123,
																	"name": "convertedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1440:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 124,
																		"name": "membershipIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "1457:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1475:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "1457:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1440:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "1440:36:0"
														},
														{
															"body": {
																"id": 215,
																"nodeType": "Block",
																"src": "1536:700:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 141,
																				"name": "membershipIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 109,
																				"src": "1558:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1577:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1558:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 214,
																		"nodeType": "IfStatement",
																		"src": "1554:668:0",
																		"trueBody": {
																			"id": 213,
																			"nodeType": "Block",
																			"src": "1580:642:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 144,
																								"name": "ETHBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 5,
																								"src": "1606:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 147,
																							"indexExpression": {
																								"expression": {
																									"id": 145,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "1617:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 146,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1621:6:0",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "1617:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1606:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 148,
																								"name": "ETHBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 5,
																								"src": "1631:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 154,
																							"indexExpression": {
																								"baseExpression": {
																									"id": 149,
																									"name": "rank",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 9,
																									"src": "1642:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$3_storage",
																										"typeString": "address[3] storage ref"
																									}
																								},
																								"id": 153,
																								"indexExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 152,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 150,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 130,
																										"src": "1647:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 151,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1651:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "1647:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1642:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1631:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1606:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 211,
																						"nodeType": "Block",
																						"src": "2045:159:0",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 201,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 199,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 117,
																										"src": "2075:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"hexValue": "373737",
																										"id": 200,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2090:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_777_by_1",
																											"typeString": "int_const 777"
																										},
																										"value": "777"
																									},
																									"src": "2075:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 210,
																								"nodeType": "IfStatement",
																								"src": "2071:111:0",
																								"trueBody": {
																									"id": 209,
																									"nodeType": "Block",
																									"src": "2095:87:0",
																									"statements": [
																										{
																											"expression": {
																												"id": 207,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 202,
																														"name": "rank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 9,
																														"src": "2125:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 204,
																													"indexExpression": {
																														"id": 203,
																														"name": "indexRecord",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 117,
																														"src": "2130:11:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "2125:17:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"expression": {
																														"id": 205,
																														"name": "msg",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967281,
																														"src": "2145:3:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_message",
																															"typeString": "msg"
																														}
																													},
																													"id": 206,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "2149:6:0",
																													"memberName": "sender",
																													"nodeType": "MemberAccess",
																													"src": "2145:10:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "2125:30:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 208,
																											"nodeType": "ExpressionStatement",
																											"src": "2125:30:0"
																										}
																									]
																								}
																							}
																						]
																					},
																					"id": 212,
																					"nodeType": "IfStatement",
																					"src": "1602:602:0",
																					"trueBody": {
																						"id": 198,
																						"nodeType": "Block",
																						"src": "1656:383:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 160,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 156,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 117,
																										"src": "1682:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 159,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 157,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 130,
																											"src": "1696:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "32",
																											"id": 158,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1700:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"src": "1696:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1682:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 161,
																								"nodeType": "ExpressionStatement",
																								"src": "1682:19:0"
																							},
																							{
																								"body": {
																									"id": 184,
																									"nodeType": "Block",
																									"src": "1760:78:0",
																									"statements": [
																										{
																											"expression": {
																												"id": 182,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 174,
																														"name": "rank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 9,
																														"src": "1790:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 176,
																													"indexExpression": {
																														"id": 175,
																														"name": "j",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 163,
																														"src": "1795:1:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "1790:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"baseExpression": {
																														"id": 177,
																														"name": "rank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 9,
																														"src": "1800:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 181,
																													"indexExpression": {
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 180,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"id": 178,
																															"name": "j",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 163,
																															"src": "1805:1:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"hexValue": "31",
																															"id": 179,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "1809:1:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "1805:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "1800:11:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "1790:21:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 183,
																											"nodeType": "ExpressionStatement",
																											"src": "1790:21:0"
																										}
																									]
																								},
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 170,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 166,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 163,
																										"src": "1744:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">",
																									"rightExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 169,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 167,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 130,
																											"src": "1748:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "32",
																											"id": 168,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1752:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"src": "1748:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1744:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 185,
																								"initializationExpression": {
																									"assignments": [
																										163
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 163,
																											"mutability": "mutable",
																											"name": "j",
																											"nameLocation": "1737:1:0",
																											"nodeType": "VariableDeclaration",
																											"scope": 185,
																											"src": "1732:6:0",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"typeName": {
																												"id": 162,
																												"name": "uint",
																												"nodeType": "ElementaryTypeName",
																												"src": "1732:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 165,
																									"initialValue": {
																										"hexValue": "32",
																										"id": 164,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1741:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "1732:10:0"
																								},
																								"isSimpleCounterLoop": false,
																								"loopExpression": {
																									"expression": {
																										"id": 172,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": false,
																										"src": "1755:3:0",
																										"subExpression": {
																											"id": 171,
																											"name": "j",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 163,
																											"src": "1755:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 173,
																									"nodeType": "ExpressionStatement",
																									"src": "1755:3:0"
																								},
																								"nodeType": "ForStatement",
																								"src": "1727:111:0"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 188,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 186,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 117,
																										"src": "1912:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 187,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1927:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "1912:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 197,
																								"nodeType": "IfStatement",
																								"src": "1908:109:0",
																								"trueBody": {
																									"id": 196,
																									"nodeType": "Block",
																									"src": "1930:87:0",
																									"statements": [
																										{
																											"expression": {
																												"id": 194,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 189,
																														"name": "rank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 9,
																														"src": "1960:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 191,
																													"indexExpression": {
																														"id": 190,
																														"name": "indexRecord",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 117,
																														"src": "1965:11:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "1960:17:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"expression": {
																														"id": 192,
																														"name": "msg",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967281,
																														"src": "1980:3:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_message",
																															"typeString": "msg"
																														}
																													},
																													"id": 193,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "1984:6:0",
																													"memberName": "sender",
																													"nodeType": "MemberAccess",
																													"src": "1980:10:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "1960:30:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 195,
																											"nodeType": "ExpressionStatement",
																											"src": "1960:30:0"
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 135,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1524:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1528:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1524:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 216,
															"initializationExpression": {
																"assignments": [
																	130
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 130,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1500:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 216,
																		"src": "1495:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 129,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 134,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 131,
																		"name": "convertedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "1504:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1521:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "1504:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1495:27:0"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": false,
																	"src": "1531:3:0",
																	"subExpression": {
																		"id": 138,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "1531:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 140,
																"nodeType": "ExpressionStatement",
																"src": "1531:3:0"
															},
															"nodeType": "ForStatement",
															"src": "1490:746:0"
														}
													]
												}
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleRankWhenDepositETH",
									"nameLocation": "1165:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:0:0"
									},
									"scope": 340,
									"src": "1156:1912:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "3138:209:0",
										"statements": [
											{
												"assignments": [
													308
												],
												"declarations": [
													{
														"constant": false,
														"id": 308,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3153:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 338,
														"src": "3148:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 307,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"hexValue": "393939",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3161:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_999_by_1",
														"typeString": "int_const 999"
													},
													"value": "999"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3148:16:0"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "3203:116:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 321,
																		"name": "rank",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "3221:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$3_storage",
																			"typeString": "address[3] storage ref"
																		}
																	},
																	"id": 323,
																	"indexExpression": {
																		"id": 322,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "3226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3221:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 324,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3232:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3236:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3232:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3221:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 333,
															"nodeType": "IfStatement",
															"src": "3217:92:0",
															"trueBody": {
																"id": 332,
																"nodeType": "Block",
																"src": "3244:65:0",
																"statements": [
																	{
																		"expression": {
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 327,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 308,
																				"src": "3262:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 328,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 312,
																				"src": "3270:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3262:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 330,
																		"nodeType": "ExpressionStatement",
																		"src": "3262:9:0"
																	},
																	{
																		"id": 331,
																		"nodeType": "Break",
																		"src": "3289:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 315,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3191:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3195:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3191:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"assignments": [
														312
													],
													"declarations": [
														{
															"constant": false,
															"id": 312,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3184:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 335,
															"src": "3179:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 311,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3179:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 314,
													"initialValue": {
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3179:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3198:3:0",
														"subExpression": {
															"id": 318,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 320,
													"nodeType": "ExpressionStatement",
													"src": "3198:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3174:145:0"
											},
											{
												"expression": {
													"id": 336,
													"name": "index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 308,
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 337,
												"nodeType": "Return",
												"src": "3328:12:0"
											}
										]
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkETHRankMembership",
									"nameLocation": "3083:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3106:2:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3132:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:6:0"
									},
									"scope": 340,
									"src": "3074:273:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 341,
							"src": "57:3292:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3318:0"
				},
				"id": 0
			},
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol": {
				"ast": {
					"absolutePath": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/TokenBank.sol",
					"exportedSymbols": {
						"Address": [
							1467
						],
						"Bank": [
							340
						],
						"IERC20": [
							888
						],
						"IERC20Permit": [
							924
						],
						"IERC20TokenGTT": [
							394
						],
						"SafeERC20": [
							1214
						],
						"TokenBank": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "04-Camps/08-UpChain_Camp_3_OpenSpace/0115_ERC777TokenBank/contracts/Bank.sol",
							"file": "./Bank.sol",
							"id": 343,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 341,
							"src": "57:20:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 1215,
							"src": "78:65:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20TokenGTT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "IERC20TokenGTT",
							"nameLocation": "155:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "185:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "198:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "207:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "216:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:27:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "243:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:6:1"
									},
									"scope": 394,
									"src": "176:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "264:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "306:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:9:1"
									},
									"scope": 394,
									"src": "255:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "330:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "339:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "348:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:18:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:6:1"
									},
									"scope": 394,
									"src": "321:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9fc4b61",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "396:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "413:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 373,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 372,
														"name": "IERC20",
														"nameLocations": [
															"413:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "413:6:1"
													},
													"referencedDeclaration": 888,
													"src": "413:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "421:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "430:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "447:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "439:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:41:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:0:1"
									},
									"scope": 394,
									"src": "387:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1660f99",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "478:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nameLocations": [
															"491:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "491:6:1"
													},
													"referencedDeclaration": 888,
													"src": "491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "499:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "508:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:26:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:1"
									},
									"scope": 394,
									"src": "469:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 811,
							"src": "145:383:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 395,
										"name": "Bank",
										"nameLocations": [
											"552:4:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 340,
										"src": "552:4:1"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "552:4:1"
								}
							],
							"canonicalName": "TokenBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810,
								340
							],
							"name": "TokenBank",
							"nameLocation": "539:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 400,
									"mutability": "mutable",
									"name": "tokenBalance",
									"nameLocation": "597:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "563:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 399,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 397,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "571:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "563:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 398,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "582:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "tokenRank",
									"nameLocation": "635:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "615:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$3_storage",
										"typeString": "address[3]"
									},
									"typeName": {
										"baseType": {
											"id": 401,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 403,
										"length": {
											"hexValue": "33",
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "623:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "615:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
											"typeString": "address[3]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5fbe4d1d",
									"id": 406,
									"mutability": "immutable",
									"name": "tokenAddr",
									"nameLocation": "675:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "650:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 405,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d3f3cf6",
									"id": 409,
									"mutability": "immutable",
									"name": "iGTT",
									"nameLocation": "722:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "690:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
										"typeString": "contract IERC20TokenGTT"
									},
									"typeName": {
										"id": 408,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 407,
											"name": "IERC20TokenGTT",
											"nameLocations": [
												"690:14:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 394,
											"src": "690:14:1"
										},
										"referencedDeclaration": 394,
										"src": "690:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
											"typeString": "contract IERC20TokenGTT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7251e8c2",
									"id": 412,
									"mutability": "immutable",
									"name": "iERC20Token",
									"nameLocation": "756:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "732:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$888",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 411,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 410,
											"name": "IERC20",
											"nameLocations": [
												"732:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 888,
											"src": "732:6:1"
										},
										"referencedDeclaration": 888,
										"src": "732:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$888",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 416,
									"libraryName": {
										"id": 413,
										"name": "SafeERC20",
										"nameLocations": [
											"779:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "779:9:1"
									},
									"nodeType": "UsingForDirective",
									"src": "773:35:1",
									"typeName": {
										"id": 415,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 414,
											"name": "IERC20TokenGTT",
											"nameLocations": [
												"793:14:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 394,
											"src": "793:14:1"
										},
										"referencedDeclaration": 394,
										"src": "793:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
											"typeString": "contract IERC20TokenGTT"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "cae15051bbb38f81d4d2fb0eeba04c25ec7fc5e1ac9d89d6d68af8d3aab337dc",
									"id": 422,
									"name": "tokenReceived",
									"nameLocation": "819:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "841:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "833:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "854:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "849:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:29:1"
									},
									"src": "813:49:1"
								},
								{
									"errorSelector": "093b7d34",
									"id": 428,
									"name": "WrongTokenReceived",
									"nameLocation": "873:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "inputAddr",
												"nameLocation": "900:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "892:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "validAddr",
												"nameLocation": "919:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "911:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:38:1"
									},
									"src": "867:63:1"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "968:152:1",
										"statements": [
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "978:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 434,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "986:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "990:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "986:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "978:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "978:18:1"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 438,
														"name": "tokenAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1006:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 439,
														"name": "_tokenAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1018:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1006:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1006:22:1"
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "iGTT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1038:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
															"typeString": "contract IERC20TokenGTT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 444,
																"name": "_tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "1060:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 443,
															"name": "IERC20TokenGTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "1045:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20TokenGTT_$394_$",
																"typeString": "type(contract IERC20TokenGTT)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1045:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
															"typeString": "contract IERC20TokenGTT"
														}
													},
													"src": "1038:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
														"typeString": "contract IERC20TokenGTT"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "1038:33:1"
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "iERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1081:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$888",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 450,
																"name": "_tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "1102:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 449,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "1095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$888_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1095:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$888",
															"typeString": "contract IERC20"
														}
													},
													"src": "1081:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1081:32:1"
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "956:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "948:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:20:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:1"
									},
									"scope": 810,
									"src": "936:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "1174:239:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "iERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1219:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1244:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1248:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1244:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1276:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenBank_$810",
																		"typeString": "contract TokenBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenBank_$810",
																		"typeString": "contract TokenBank"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1268:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1268:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1268:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1295:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 460,
															"name": "iGTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "1184:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
																"typeString": "contract IERC20TokenGTT"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1189:16:1",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "1184:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256) external"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:133:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "1184:133:1"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 473,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1327:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 476,
														"indexExpression": {
															"expression": {
																"id": 474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1340:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1344:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1340:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1327:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 477,
														"name": "_tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "1355:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1327:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1327:40:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 480,
														"name": "_handleRankWhenDepositToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1377:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "1377:29:1"
											}
										]
									},
									"functionSelector": "6215be77",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositToken",
									"nameLocation": "1135:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "1153:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1148:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1148:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:19:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:0:1"
									},
									"scope": 810,
									"src": "1126:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "1461:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "iERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1489:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 493,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1502:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 498,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1532:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenBank_$810",
																				"typeString": "contract TokenBank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenBank_$810",
																				"typeString": "contract TokenBank"
																			}
																		],
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1524:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 496,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1524:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1524:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 494,
																	"name": "iGTT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "1509:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
																		"typeString": "contract IERC20TokenGTT"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1514:9:1",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 362,
																"src": "1509:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1509:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 489,
															"name": "iGTT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "1471:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20TokenGTT_$394",
																"typeString": "contract IERC20TokenGTT"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1476:12:1",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "1471:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256) external"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "1471:68:1"
											}
										]
									},
									"functionSelector": "ca628c78",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "onlyOwner",
												"nameLocations": [
													"1451:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "1451:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1451:9:1"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "1428:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:0:1"
									},
									"scope": 810,
									"src": "1419:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1651:232:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 513,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1665:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1669:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1665:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 517,
																"name": "tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1687:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1679:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 515,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1679:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1679:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1665:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "1661:111:1",
												"trueBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "1699:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 521,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1739:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1743:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1739:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 523,
																		"name": "tokenAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "1751:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 520,
																	"name": "WrongTokenReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "1720:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 525,
															"nodeType": "RevertStatement",
															"src": "1713:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 528,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1781:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 530,
														"indexExpression": {
															"id": 529,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "1794:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1781:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 531,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1804:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1781:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 535,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "1840:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1847:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "tokenReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "1826:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "EmitStatement",
												"src": "1821:34:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 512,
												"id": 540,
												"nodeType": "Return",
												"src": "1865:11:1"
											}
										]
									},
									"functionSelector": "24a756d1",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1561:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1593:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1585:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1613:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1608:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1608:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:51:1"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1645:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1645:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:6:1"
									},
									"scope": 810,
									"src": "1552:331:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1959:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 549,
														"name": "tokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "1976:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 551,
													"indexExpression": {
														"id": 550,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1989:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1976:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 552,
												"nodeType": "Return",
												"src": "1969:29:1"
											}
										]
									},
									"functionSelector": "3aecd0e3",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nameLocation": "1898:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1922:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1914:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:18:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1953:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:1"
									},
									"scope": 810,
									"src": "1889:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2122:66:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 563,
																"name": "tokenRank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2140:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 565,
															"indexExpression": {
																"hexValue": "30",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2150:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2140:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 566,
																"name": "tokenRank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2154:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 568,
															"indexExpression": {
																"hexValue": "31",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2164:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2154:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 569,
																"name": "tokenRank",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2168:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$3_storage",
																	"typeString": "address[3] storage ref"
																}
															},
															"id": 571,
															"indexExpression": {
																"hexValue": "32",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2168:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 572,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2139:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$",
														"typeString": "tuple(address,address,address)"
													}
												},
												"functionReturnParameters": 562,
												"id": 573,
												"nodeType": "Return",
												"src": "2132:49:1"
											}
										]
									},
									"functionSelector": "b254b80a",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenTopThreeAccount",
									"nameLocation": "2020:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2043:2:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2091:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2100:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:27:1"
									},
									"scope": 810,
									"src": "2011:177:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2242:1996:1",
										"statements": [
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "membershipIndex",
														"nameLocation": "2257:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "2252:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 578,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_checkTokenRankMembership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2275:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2252:50:1"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "convertedIndex",
														"nameLocation": "2317:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "2312:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2312:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"nodeType": "VariableDeclarationStatement",
												"src": "2312:19:1"
											},
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "indexRecord",
														"nameLocation": "2346:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "2341:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"hexValue": "373737",
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2360:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_777_by_1",
														"typeString": "int_const 777"
													},
													"value": "777"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:22:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "membershipIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "2377:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "393939",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2396:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_999_by_1",
															"typeString": "int_const 999"
														},
														"value": "999"
													},
													"src": "2377:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "3393:839:1",
													"statements": [
														{
															"body": {
																"id": 767,
																"nodeType": "Block",
																"src": "3499:723:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 698,
																					"name": "tokenBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 400,
																					"src": "3521:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 701,
																				"indexExpression": {
																					"expression": {
																						"id": 699,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3534:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3538:6:1",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3534:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3521:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 702,
																					"name": "tokenBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 400,
																					"src": "3548:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 708,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 703,
																						"name": "tokenRank",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 404,
																						"src": "3561:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$3_storage",
																							"typeString": "address[3] storage ref"
																						}
																					},
																					"id": 707,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 706,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 704,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "3571:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 705,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3575:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3571:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3561:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3548:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3521:57:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 765,
																			"nodeType": "Block",
																			"src": "4060:148:1",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 755,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 753,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "4086:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"hexValue": "373737",
																							"id": 754,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4101:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_777_by_1",
																								"typeString": "int_const 777"
																							},
																							"value": "777"
																						},
																						"src": "4086:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 764,
																					"nodeType": "IfStatement",
																					"src": "4082:108:1",
																					"trueBody": {
																						"id": 763,
																						"nodeType": "Block",
																						"src": "4106:84:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 761,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 756,
																											"name": "tokenRank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 404,
																											"src": "4132:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 758,
																										"indexExpression": {
																											"id": 757,
																											"name": "indexRecord",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 587,
																											"src": "4142:11:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "4132:22:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"expression": {
																											"id": 759,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "4157:3:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 760,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4161:6:1",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "4157:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "4132:35:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 762,
																								"nodeType": "ExpressionStatement",
																								"src": "4132:35:1"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 766,
																		"nodeType": "IfStatement",
																		"src": "3517:691:1",
																		"trueBody": {
																			"id": 752,
																			"nodeType": "Block",
																			"src": "3580:474:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 714,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 710,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "3602:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 711,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 689,
																								"src": "3616:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 712,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3620:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "3616:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3602:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 715,
																					"nodeType": "ExpressionStatement",
																					"src": "3602:19:1"
																				},
																				{
																					"body": {
																						"id": 738,
																						"nodeType": "Block",
																						"src": "3788:80:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 736,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 728,
																											"name": "tokenRank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 404,
																											"src": "3814:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 730,
																										"indexExpression": {
																											"id": 729,
																											"name": "j",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 717,
																											"src": "3824:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "3814:12:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 731,
																											"name": "tokenRank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 404,
																											"src": "3829:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 735,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 734,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 732,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 717,
																												"src": "3839:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "-",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 733,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "3843:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "3839:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3829:16:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "3814:31:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 737,
																								"nodeType": "ExpressionStatement",
																								"src": "3814:31:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 724,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 720,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 717,
																							"src": "3772:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 721,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 689,
																								"src": "3776:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 722,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3780:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "3776:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3772:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 739,
																					"initializationExpression": {
																						"assignments": [
																							717
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 717,
																								"mutability": "mutable",
																								"name": "j",
																								"nameLocation": "3765:1:1",
																								"nodeType": "VariableDeclaration",
																								"scope": 739,
																								"src": "3760:6:1",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 716,
																									"name": "uint",
																									"nodeType": "ElementaryTypeName",
																									"src": "3760:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 719,
																						"initialValue": {
																							"hexValue": "32",
																							"id": 718,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3769:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "3760:10:1"
																					},
																					"isSimpleCounterLoop": false,
																					"loopExpression": {
																						"expression": {
																							"id": 726,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "--",
																							"prefix": false,
																							"src": "3783:3:1",
																							"subExpression": {
																								"id": 725,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 717,
																								"src": "3783:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 727,
																						"nodeType": "ExpressionStatement",
																						"src": "3783:3:1"
																					},
																					"nodeType": "ForStatement",
																					"src": "3755:113:1"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 740,
																							"name": "indexRecord",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 587,
																							"src": "3934:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 741,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3949:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "3934:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 751,
																					"nodeType": "IfStatement",
																					"src": "3930:106:1",
																					"trueBody": {
																						"id": 750,
																						"nodeType": "Block",
																						"src": "3952:84:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 748,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 743,
																											"name": "tokenRank",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 404,
																											"src": "3978:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$3_storage",
																												"typeString": "address[3] storage ref"
																											}
																										},
																										"id": 745,
																										"indexExpression": {
																											"id": 744,
																											"name": "indexRecord",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 587,
																											"src": "3988:11:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "3978:22:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"expression": {
																											"id": 746,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "4003:3:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 747,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4007:6:1",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "4003:10:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "3978:35:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 749,
																								"nodeType": "ExpressionStatement",
																								"src": "3978:35:1"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 692,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "3487:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3491:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3487:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 768,
															"initializationExpression": {
																"assignments": [
																	689
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 689,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3480:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 768,
																		"src": "3475:6:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 688,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3475:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 691,
																"initialValue": {
																	"hexValue": "33",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3484:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3475:10:1"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": false,
																	"src": "3494:3:1",
																	"subExpression": {
																		"id": 695,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "3494:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 697,
																"nodeType": "ExpressionStatement",
																"src": "3494:3:1"
															},
															"nodeType": "ForStatement",
															"src": "3470:752:1"
														}
													]
												},
												"id": 770,
												"nodeType": "IfStatement",
												"src": "2373:1859:1",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "2401:986:1",
													"statements": [
														{
															"expression": {
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 593,
																	"name": "convertedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "2482:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "membershipIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "2499:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "34",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2517:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	},
																	"src": "2499:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2482:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "2482:36:1"
														},
														{
															"body": {
																"id": 685,
																"nodeType": "Block",
																"src": "2578:799:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 611,
																				"name": "membershipIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "2600:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2619:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2600:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 684,
																		"nodeType": "IfStatement",
																		"src": "2596:767:1",
																		"trueBody": {
																			"id": 683,
																			"nodeType": "Block",
																			"src": "2622:741:1",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 625,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"baseExpression": {
																								"id": 614,
																								"name": "tokenBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 400,
																								"src": "2673:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 617,
																							"indexExpression": {
																								"expression": {
																									"id": 615,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2686:3:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 616,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2690:6:1",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "2686:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2673:24:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 618,
																								"name": "tokenBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 400,
																								"src": "2724:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 624,
																							"indexExpression": {
																								"baseExpression": {
																									"id": 619,
																									"name": "tokenRank",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 404,
																									"src": "2737:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$3_storage",
																										"typeString": "address[3] storage ref"
																									}
																								},
																								"id": 623,
																								"indexExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 622,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 620,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 600,
																										"src": "2747:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 621,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2751:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "2747:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2737:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2724:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2673:81:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 681,
																						"nodeType": "Block",
																						"src": "3181:164:1",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 671,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 669,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 587,
																										"src": "3211:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"hexValue": "373737",
																										"id": 670,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3226:3:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_777_by_1",
																											"typeString": "int_const 777"
																										},
																										"value": "777"
																									},
																									"src": "3211:18:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 680,
																								"nodeType": "IfStatement",
																								"src": "3207:116:1",
																								"trueBody": {
																									"id": 679,
																									"nodeType": "Block",
																									"src": "3231:92:1",
																									"statements": [
																										{
																											"expression": {
																												"id": 677,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 672,
																														"name": "tokenRank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 404,
																														"src": "3261:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 674,
																													"indexExpression": {
																														"id": 673,
																														"name": "indexRecord",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 587,
																														"src": "3271:11:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "3261:22:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"expression": {
																														"id": 675,
																														"name": "msg",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967281,
																														"src": "3286:3:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_message",
																															"typeString": "msg"
																														}
																													},
																													"id": 676,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "3290:6:1",
																													"memberName": "sender",
																													"nodeType": "MemberAccess",
																													"src": "3286:10:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "3261:35:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 678,
																											"nodeType": "ExpressionStatement",
																											"src": "3261:35:1"
																										}
																									]
																								}
																							}
																						]
																					},
																					"id": 682,
																					"nodeType": "IfStatement",
																					"src": "2644:701:1",
																					"trueBody": {
																						"id": 668,
																						"nodeType": "Block",
																						"src": "2777:398:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 630,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 626,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 587,
																										"src": "2803:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 629,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 627,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 600,
																											"src": "2817:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "32",
																											"id": 628,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2821:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"src": "2817:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2803:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 631,
																								"nodeType": "ExpressionStatement",
																								"src": "2803:19:1"
																							},
																							{
																								"body": {
																									"id": 654,
																									"nodeType": "Block",
																									"src": "2881:88:1",
																									"statements": [
																										{
																											"expression": {
																												"id": 652,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 644,
																														"name": "tokenRank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 404,
																														"src": "2911:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 646,
																													"indexExpression": {
																														"id": 645,
																														"name": "j",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 633,
																														"src": "2921:1:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "2911:12:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"baseExpression": {
																														"id": 647,
																														"name": "tokenRank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 404,
																														"src": "2926:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 651,
																													"indexExpression": {
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 650,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"id": 648,
																															"name": "j",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 633,
																															"src": "2936:1:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"hexValue": "31",
																															"id": 649,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2940:1:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "2936:5:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "2926:16:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "2911:31:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 653,
																											"nodeType": "ExpressionStatement",
																											"src": "2911:31:1"
																										}
																									]
																								},
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 640,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 636,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 633,
																										"src": "2865:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">",
																									"rightExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 639,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 637,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 600,
																											"src": "2869:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "32",
																											"id": 638,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2873:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"src": "2869:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2865:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 655,
																								"initializationExpression": {
																									"assignments": [
																										633
																									],
																									"declarations": [
																										{
																											"constant": false,
																											"id": 633,
																											"mutability": "mutable",
																											"name": "j",
																											"nameLocation": "2858:1:1",
																											"nodeType": "VariableDeclaration",
																											"scope": 655,
																											"src": "2853:6:1",
																											"stateVariable": false,
																											"storageLocation": "default",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"typeName": {
																												"id": 632,
																												"name": "uint",
																												"nodeType": "ElementaryTypeName",
																												"src": "2853:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"visibility": "internal"
																										}
																									],
																									"id": 635,
																									"initialValue": {
																										"hexValue": "32",
																										"id": 634,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2862:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "VariableDeclarationStatement",
																									"src": "2853:10:1"
																								},
																								"isSimpleCounterLoop": false,
																								"loopExpression": {
																									"expression": {
																										"id": 642,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": false,
																										"src": "2876:3:1",
																										"subExpression": {
																											"id": 641,
																											"name": "j",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 633,
																											"src": "2876:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 643,
																									"nodeType": "ExpressionStatement",
																									"src": "2876:3:1"
																								},
																								"nodeType": "ForStatement",
																								"src": "2848:121:1"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 658,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 656,
																										"name": "indexRecord",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 587,
																										"src": "3043:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 657,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3058:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "3043:16:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 667,
																								"nodeType": "IfStatement",
																								"src": "3039:114:1",
																								"trueBody": {
																									"id": 666,
																									"nodeType": "Block",
																									"src": "3061:92:1",
																									"statements": [
																										{
																											"expression": {
																												"id": 664,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 659,
																														"name": "tokenRank",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 404,
																														"src": "3091:9:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_address_$3_storage",
																															"typeString": "address[3] storage ref"
																														}
																													},
																													"id": 661,
																													"indexExpression": {
																														"id": 660,
																														"name": "indexRecord",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 587,
																														"src": "3101:11:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "3091:22:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"expression": {
																														"id": 662,
																														"name": "msg",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967281,
																														"src": "3116:3:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_message",
																															"typeString": "msg"
																														}
																													},
																													"id": 663,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "3120:6:1",
																													"memberName": "sender",
																													"nodeType": "MemberAccess",
																													"src": "3116:10:1",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"src": "3091:35:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 665,
																											"nodeType": "ExpressionStatement",
																											"src": "3091:35:1"
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 605,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "2566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2570:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2566:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 686,
															"initializationExpression": {
																"assignments": [
																	600
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 600,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2542:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 686,
																		"src": "2537:6:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 599,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2537:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 604,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 601,
																		"name": "convertedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "2546:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2563:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "2546:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2537:27:1"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": false,
																	"src": "2573:3:1",
																	"subExpression": {
																		"id": 608,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "2573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 610,
																"nodeType": "ExpressionStatement",
																"src": "2573:3:1"
															},
															"nodeType": "ForStatement",
															"src": "2532:845:1"
														}
													]
												}
											}
										]
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleRankWhenDepositToken",
									"nameLocation": "2203:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2230:2:1"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2242:0:1"
									},
									"scope": 810,
									"src": "2194:2044:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "4310:214:1",
										"statements": [
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4325:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "4320:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4320:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"hexValue": "393939",
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4333:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_999_by_1",
														"typeString": "int_const 999"
													},
													"value": "999"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4320:16:1"
											},
											{
												"body": {
													"id": 804,
													"nodeType": "Block",
													"src": "4375:121:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 791,
																		"name": "tokenRank",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "4393:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$3_storage",
																			"typeString": "address[3] storage ref"
																		}
																	},
																	"id": 793,
																	"indexExpression": {
																		"id": 792,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "4403:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4393:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 794,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4409:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4413:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4409:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4393:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 803,
															"nodeType": "IfStatement",
															"src": "4389:97:1",
															"trueBody": {
																"id": 802,
																"nodeType": "Block",
																"src": "4421:65:1",
																"statements": [
																	{
																		"expression": {
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 797,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 778,
																				"src": "4439:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 798,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "4447:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4439:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 800,
																		"nodeType": "ExpressionStatement",
																		"src": "4439:9:1"
																	},
																	{
																		"id": 801,
																		"nodeType": "Break",
																		"src": "4466:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 785,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "4363:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4367:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "4363:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"initializationExpression": {
													"assignments": [
														782
													],
													"declarations": [
														{
															"constant": false,
															"id": 782,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4356:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 805,
															"src": "4351:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 781,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4351:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 784,
													"initialValue": {
														"hexValue": "30",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4360:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4351:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4370:3:1",
														"subExpression": {
															"id": 788,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "4370:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 790,
													"nodeType": "ExpressionStatement",
													"src": "4370:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4346:150:1"
											},
											{
												"expression": {
													"id": 806,
													"name": "index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 778,
													"src": "4512:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 776,
												"id": 807,
												"nodeType": "Return",
												"src": "4505:12:1"
											}
										]
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkTokenRankMembership",
									"nameLocation": "4253:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:2:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4304:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4304:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:6:1"
									},
									"scope": 810,
									"src": "4244:280:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 811,
							"src": "530:3996:1",
							"usedErrors": [
								428
							],
							"usedEvents": [
								422
							]
						}
					],
					"src": "32:4495:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							888
						]
					},
					"id": 889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 813,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 888,
							"linearizedBaseContracts": [
								888
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 822,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 831,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 888,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 888,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 888,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 888,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 888,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 888,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 889,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								822,
								831
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							924
						]
					},
					"id": 925,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 890,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 891,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 924,
							"linearizedBaseContracts": [
								924
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 901,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 903,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 905,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 924,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 924,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 924,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 925,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1467
						],
						"IERC20": [
							888
						],
						"IERC20Permit": [
							924
						],
						"SafeERC20": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 926,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 928,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 889,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 927,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 888,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 925,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 929,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 924,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1468,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 931,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1467,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1214,
							"linearizedBaseContracts": [
								1214
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 936,
									"libraryName": {
										"id": 934,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 935,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 941,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 950,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 965,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 855,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 967,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 968,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 963,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 961,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 888,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 1214,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 991,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 887,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 993,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 994,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 995,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 996,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 989,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 987,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 976,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 888,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 1214,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1018,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1214",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1214",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1014,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1024,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1025,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1027,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$888",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1003,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 888,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 1214,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 1073,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															1044
														],
														"declarations": [
															{
																"constant": false,
																"id": 1044,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 1073,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1053,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1049,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1214",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1214",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1047,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1051,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1045,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 865,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1055,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1064,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 1063,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1058,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1038,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1059,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1044,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1060,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1040,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1057,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1062,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1066,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1067,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1068,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1069,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1065,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1072,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 888,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 1214,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1086,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1090,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$888",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1092,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1093,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1094,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1088,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1098,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$888",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1099,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$888",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1097,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1103,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1106,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$888",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 875,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1108,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1081,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1109,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1110,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1104,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1102,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1113,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1115,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1116,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$888",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1114,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$888_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 888,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 1214,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1131,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1135,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1133,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1141,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1147,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1148,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1145,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1157,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$888",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$888",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1155,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1154,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1124,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 888,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 1214,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													1176,
													1178
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1175,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1177,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"arguments": [
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$888",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1187,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1188,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1194,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1196,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1195,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1197,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1192,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1200,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1204,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1168,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$888",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1202,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1211,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$888",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1166,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 888,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$888",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 1214,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1215,
							"src": "751:5018:4",
							"usedErrors": [
								941,
								950
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1467
						]
					},
					"id": 1468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1217,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1467,
							"linearizedBaseContracts": [
								1467
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1222,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1227,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1230,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1240,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1467",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1467",
																		"typeString": "library Address"
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1243,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1253,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 1252,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1248,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1467",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1467",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1246,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1245,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1251,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													1255,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1254,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1262,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1256,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1258,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 1263,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1265,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1267,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 1467,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1281,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1286,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 1467,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1302,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1467",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1467",
																		"typeString": "library Address"
																	}
																],
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1300,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1305,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1467",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1467",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1308,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1307,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1313,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													1317,
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1316,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1318,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1320,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1332,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 1467,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													1345,
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1344,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1346,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1350,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1348,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1354,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1355,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1356,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1353,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1358,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 1467,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													1371,
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1370,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1372,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1378,
												"initialValue": {
													"arguments": [
														{
															"id": 1376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1380,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1382,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1379,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1384,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 1467,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 1398,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1405,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1409,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1389,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1420,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 1419,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1416,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1415,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1418,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1421,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1397,
															"id": 1422,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 1404,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1401,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1400,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1403,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 1467,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 1436,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 1443,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1435,
															"id": 1444,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1438,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 1467,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1454,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1463,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1460,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1462,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 1464,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1451,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1451,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 1458,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 1467,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1468,
							"src": "195:6066:5",
							"usedErrors": [
								1222,
								1227,
								1230
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			}
		}
	}
}